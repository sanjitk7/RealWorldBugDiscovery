package com.fasterxml.jackson.dataformat.xml.ser;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider0 = null;
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig1 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory2 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider0, serializationConfig1, serializerFactory2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        java.io.File file3 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode4 = xmlMapper2.readTree(file3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = xmlFactory7.isEnabled(feature8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        com.fasterxml.jackson.core.io.IOContext iOContext0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory3, xMLOutputFactory4);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(contextAttributes6);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setSerializerFactory(serializerFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = xmlMapper5.getFactory();
        javax.xml.stream.XMLStreamReader xMLStreamReader11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser fromXmlParser12 = new com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser(iOContext0, 0, (int) '4', (com.fasterxml.jackson.core.ObjectCodec) xmlMapper5, xMLStreamReader11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlFactory10);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature7 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper2.enable(serializationFeature7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        boolean boolean8 = xmlFactory7.canUseCharArrays();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlFactory7.configure(feature9, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        byte[] byteArray8 = new byte[] { (byte) 1, (byte) -1, (byte) -1 };
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable12 = xmlMapper2.readValue(byteArray8, (int) '#', 0, javaType11);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonParseException; message: Unexpected EOF in prolog? at [row,col {unknown-source}]: [1,35]");
        } catch (com.fasterxml.jackson.core.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[1, -1, -1]");
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        java.io.DataOutput dataOutput7 = null;
        com.fasterxml.jackson.core.util.Separators separators8 = com.fasterxml.jackson.core.PrettyPrinter.DEFAULT_SEPARATORS;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper6.writeValue(dataOutput7, (java.lang.Object) separators8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(separators8);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature3 = null;
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature4 = null;
        com.fasterxml.jackson.databind.DeserializationFeature[] deserializationFeatureArray5 = new com.fasterxml.jackson.databind.DeserializationFeature[] { deserializationFeature4 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.disable(deserializationFeature3, deserializationFeatureArray5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deserializationFeatureArray5);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext7 = xmlMapper2.getDeserializationContext();
        com.fasterxml.jackson.databind.introspect.Annotated annotated8 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver10 = deserializationContext7.objectIdResolverInstance(annotated8, objectIdInfo9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(deserializationContext7);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        java.io.InputStream inputStream3 = null;
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.Serializable serializable5 = xmlMapper2.readValue(inputStream3, javaType4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext7 = xmlMapper2.getDeserializationContext();
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory8 = new com.fasterxml.jackson.dataformat.xml.XmlFactory();
        java.lang.Class<?> wildcardClass9 = xmlFactory8.getClass();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType10 = deserializationContext7.constructType((java.lang.reflect.Type) wildcardClass9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(deserializationContext7);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        com.fasterxml.jackson.core.io.IOContext iOContext0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory3, xMLOutputFactory4);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(contextAttributes6);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setNodeFactory(jsonNodeFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper5);
        javax.xml.stream.XMLStreamWriter xMLStreamWriter11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator12 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator(iOContext0, (int) (short) 10, 0, (com.fasterxml.jackson.core.ObjectCodec) xmlMapper5, xMLStreamWriter11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature7 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper2.enable(feature7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setNodeFactory(jsonNodeFactory5);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature7 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = objectMapper6.disable(serializationFeature7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.core.JsonParser.Feature feature18 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = objectMapper17.configure(feature18, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.databind.Module module10 = null;
        com.fasterxml.jackson.databind.Module[] moduleArray11 = new com.fasterxml.jackson.databind.Module[] { module10 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.registerModules(moduleArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(moduleArray11);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes7 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader8 = objectMapper6.reader(contextAttributes7);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper6.disable(deserializationFeature9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectReader8);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        boolean boolean8 = xmlFactory7.canUseCharArrays();
        javax.xml.stream.XMLStreamWriter xMLStreamWriter9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator10 = xmlFactory7.createGenerator(xMLStreamWriter9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter6 = xmlMapper2.writerFor(javaType5);
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.databind.JavaType javaType10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper2.convertValue((java.lang.Object) xMLOutputFactory8, javaType10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectWriter6);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.ObjectCodec objectCodec11 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory12 = xmlFactory10.setCodec(objectCodec11);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass13 = xmlFactory10.getFormatReadFeatureType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature14 = objectMapper6.readValue("unknown", featureClass13);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonParseException; message: Unexpected character 'u' (code 117) in prolog; expected '<'? at [row,col {unknown-source}]: [1,1]");
        } catch (com.fasterxml.jackson.core.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(jsonFactory12);
        org.junit.Assert.assertNotNull(featureClass13);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        java.io.InputStream inputStream10 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Type type12 = xmlMapper2.readValue(inputStream10, typeReference11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes15 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader16 = xmlMapper2.reader(contextAttributes15);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(objectReader16);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator2 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1._serializeXmlNull(jsonGenerator2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper2.writeValue(jsonGenerator10, (java.lang.Object) 0.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.type.TypeFactory typeFactory2 = xmlSerializerProvider1.getTypeFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig2 = null;
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory3 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider4 = xmlSerializerProvider1.createInstance(serializationConfig2, serializerFactory3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator2 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory3, xMLOutputFactory4);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(contextAttributes6);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setSerializerFactory(serializerFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = xmlMapper5.getFactory();
        java.text.DateFormat dateFormat11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper5.writer(dateFormat11);
        java.util.Locale locale13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper5.setLocale(locale13);
        com.fasterxml.jackson.databind.ObjectReader objectReader15 = xmlMapper5.reader();
        com.fasterxml.jackson.databind.JavaType javaType16 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator2, (java.lang.Object) xmlMapper5, javaType16, objJsonSerializer17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlFactory10);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(objectReader15);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        javax.xml.stream.XMLInputFactory xMLInputFactory2 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory3 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory4 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory2, xMLOutputFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec5 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory6 = xmlFactory4.setCodec(objectCodec5);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass7 = xmlFactory4.getFormatReadFeatureType();
        java.lang.Throwable throwable9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlSerializerProvider1.reportBadDefinition(featureClass7, "unknown", throwable9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jsonFactory6);
        org.junit.Assert.assertNotNull(featureClass7);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper2.writer(characterEscapes9);
        javax.xml.stream.XMLStreamWriter xMLStreamWriter11 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper2.writeValue(xMLStreamWriter11, (java.lang.Object) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectWriter10);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector3 = xmlSerializerProvider1.getAnnotationIntrospector();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass3 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findPrimaryPropertySerializer(featureClass3, beanProperty4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper2);
        com.fasterxml.jackson.core.JsonParser jsonParser10 = null;
        com.fasterxml.jackson.core.type.ResolvedType resolvedType11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.databind.ObjectMapper> objectMapperItor12 = xmlMapper2.readValues(jsonParser10, resolvedType11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JavaType javaType2 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.findKeySerializer(javaType2, beanProperty3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        boolean boolean8 = xmlFactory7.canUseCharArrays();
        com.fasterxml.jackson.core.util.BufferRecycler bufferRecycler9 = xmlFactory7._getBufferRecycler();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(bufferRecycler9);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.setNullValueSerializer(objJsonSerializer3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot pass null JsonSerializer");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext7 = xmlMapper2.getDeserializationContext();
        javax.xml.stream.XMLStreamReader xMLStreamReader8 = null;
        com.fasterxml.jackson.databind.JavaType javaType9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder10 = xmlMapper2.readValue(xMLStreamReader8, javaType9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(deserializationContext7);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        java.io.DataInput dataInput19 = null;
        com.fasterxml.jackson.databind.JavaType javaType20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass21 = xmlMapper15.readValue(dataInput19, javaType20);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: InputData source not (yet?) support for this format (XML)");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        boolean boolean8 = xmlFactory7.canUseCharArrays();
        java.io.OutputStream outputStream9 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator11 = xmlFactory7.createGenerator(outputStream9, jsonEncoding10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null OutputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setInputDecorator(inputDecorator9);
        boolean boolean11 = xmlFactory7.canParseAsync();
        java.net.URL uRL12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser13 = xmlFactory7.createParser(uRL12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.disable(deserializationFeature5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.JavaType javaType7 = null;
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = objectMapper6.canDeserialize(javaType7, throwableAtomicReference8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null JavaType passed");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.introspect.Annotated annotated2 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory3, xMLOutputFactory4);
        java.lang.Class<?> wildcardClass6 = xmlMapper5.getClass();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.serializerInstance(annotated2, (java.lang.Object) wildcardClass6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = xmlMapper2.setDefaultUseWrapper(false);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory11, xMLOutputFactory12);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = xmlMapper13.writer(contextAttributes14);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode16 = xmlMapper13.createObjectNode();
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper2.writeTree(jsonGenerator10, (com.fasterxml.jackson.databind.JsonNode) objectNode16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xmlMapper9);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(objectNode16);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext7 = xmlMapper2.getDeserializationContext();
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = xmlMapper2.isEnabled(deserializationFeature8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(deserializationContext7);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext16 = xmlMapper2.getDeserializationContext();
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory21 = xmlFactory19.setCodec(objectCodec20);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass22 = xmlFactory19.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper23 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper2.acceptJsonFormatVisitor(featureClass22, jsonFormatVisitorWrapper23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(deserializationContext16);
        org.junit.Assert.assertNotNull(jsonFactory21);
        org.junit.Assert.assertNotNull(featureClass22);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        java.util.Locale locale10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper2.setLocale(locale10);
        byte[] byteArray18 = new byte[] { (byte) -1, (byte) 10, (byte) 1, (byte) 1, (byte) 1, (byte) 0 };
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory19, xMLOutputFactory20);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass22 = xmlFactory21.getFormatReadFeatureType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature23 = xmlMapper2.readValue(byteArray18, featureClass22);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonParseException; message: Invalid UTF-8 start byte 0xff (at char #1, byte #-1)");
        } catch (com.fasterxml.jackson.core.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, 10, 1, 1, 1, 0]");
        org.junit.Assert.assertNotNull(featureClass22);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        java.io.InputStream inputStream18 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory23 = xmlFactory21.setCodec(objectCodec22);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass24 = xmlFactory21.getFormatReadFeatureType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature25 = objectMapper17.readValue(inputStream18, featureClass24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(jsonFactory23);
        org.junit.Assert.assertNotNull(featureClass24);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        java.util.Locale locale10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper2.setLocale(locale10);
        com.fasterxml.jackson.databind.ObjectReader objectReader12 = xmlMapper2.reader();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper2.findAndRegisterModules();
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory14, xMLOutputFactory15);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass17 = xmlFactory16.getFormatReadFeatureType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsonschema.JsonSchema jsonSchema18 = xmlMapper2.generateJsonSchema(featureClass17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectReader12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(featureClass17);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext16 = xmlMapper2.getDeserializationContext();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass17 = null;
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper18 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper2.acceptJsonFormatVisitor(featureClass17, jsonFormatVisitorWrapper18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unrecognized Type: [null]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(deserializationContext16);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setNodeFactory(jsonNodeFactory5);
        java.io.File file7 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper2.writeValue(file7, (java.lang.Object) xmlRootNameLookup8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator2 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator3 = xmlSerializerProvider1._asXmlGenerator(jsonGenerator2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        java.lang.String str9 = xmlFactory7.getRootValueSeparator();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + " " + "'", str9, " ");
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setInputDecorator(inputDecorator9);
        com.fasterxml.jackson.core.JsonFactory.Feature feature11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory12 = jsonFactory10.enable(feature11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        java.util.Date date3 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey(date3, jsonGenerator4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1._serializeXmlNull(jsonGenerator3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = xmlMapper2.setDefaultUseWrapper(false);
        com.fasterxml.jackson.annotation.PropertyAccessor propertyAccessor10 = null;
        com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility visibility11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper9.setVisibility(propertyAccessor10, visibility11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xmlMapper9);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper2.writer(characterEscapes9);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.setDefaultVisibility(value11);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setSerializerFactory(serializerFactory18);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = xmlMapper15.getFactory();
        java.text.DateFormat dateFormat21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper15.writer(dateFormat21);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature23 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.configure(feature23, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper2.configure(feature23, false);
        com.fasterxml.jackson.core.JsonParser.Feature feature28 = null;
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray29 = new com.fasterxml.jackson.core.JsonParser.Feature[] { feature28 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper30 = xmlMapper2.enable(featureArray29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(xmlFactory20);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertTrue("'" + feature23 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature23.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(featureArray29);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory3, xMLOutputFactory4);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass6 = xmlFactory5.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.getUnknownTypeSerializer(featureClass6);
        com.fasterxml.jackson.databind.JavaType javaType8 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider1.findTypedValueSerializer(javaType8, true, beanProperty10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(featureClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setInputDecorator(inputDecorator9);
        java.net.URL uRL11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser12 = jsonFactory10.createParser(uRL11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping7 = null;
        com.fasterxml.jackson.annotation.JsonTypeInfo.As as8 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = objectMapper6.enableDefaultTyping(defaultTyping7, as8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: includeAs cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping19 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper15.enableDefaultTyping(defaultTyping19);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(objectMapper20);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.JavaType javaType3 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty4 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider1.findKeySerializer(javaType3, beanProperty4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory3, xMLOutputFactory4);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass6 = xmlFactory5.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.getUnknownTypeSerializer(featureClass6);
        com.fasterxml.jackson.databind.JavaType javaType8 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory13 = xmlFactory11.setCodec(objectCodec12);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass14 = xmlFactory11.getFormatReadFeatureType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType15 = xmlSerializerProvider1.constructSpecializedType(javaType8, featureClass14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(featureClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(jsonFactory13);
        org.junit.Assert.assertNotNull(featureClass14);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setInputDecorator(inputDecorator9);
        java.io.DataInput dataInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser12 = xmlFactory7.createParser(dataInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: InputData source not (yet?) support for this format (XML)");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        java.util.TimeZone timeZone5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setTimeZone(timeZone5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature16 = null;
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature17 = null;
        com.fasterxml.jackson.databind.DeserializationFeature[] deserializationFeatureArray18 = new com.fasterxml.jackson.databind.DeserializationFeature[] { deserializationFeature17 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader19 = xmlMapper15.reader(deserializationFeature16, deserializationFeatureArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(deserializationFeatureArray18);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        java.lang.Class<?> wildcardClass3 = xmlSerializerProvider1.getSerializationView();
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(contextAttributes7);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper6.setDefaultVisibility(value9);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray11 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper6.registerSubtypes(namedTypeArray11);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = xmlMapper6.writer(characterEscapes13);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value15 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper6.setDefaultVisibility(value15);
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory21 = xmlFactory19.setCodec(objectCodec20);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass22 = xmlFactory19.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectReader objectReader23 = xmlMapper6.reader(featureClass22);
        com.fasterxml.jackson.databind.BeanProperty beanProperty24 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer25 = xmlSerializerProvider1.findKeySerializer(featureClass22, beanProperty24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNull(wildcardClass3);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(namedTypeArray11);
        org.junit.Assert.assertNotNull(objectWriter14);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(jsonFactory21);
        org.junit.Assert.assertNotNull(featureClass22);
        org.junit.Assert.assertNotNull(objectReader23);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper2.writer(characterEscapes9);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.setDefaultVisibility(value11);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setSerializerFactory(serializerFactory18);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = xmlMapper15.getFactory();
        java.text.DateFormat dateFormat21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper15.writer(dateFormat21);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature23 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.configure(feature23, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper2.configure(feature23, false);
        java.io.File file28 = null;
        java.lang.Object obj29 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper2.writeValue(file28, obj29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(xmlFactory20);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertTrue("'" + feature23 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature23.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper27);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass36 = null;
        java.lang.Enum[] enumArray38 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray39 = (java.lang.Enum<?>[]) enumArray38;
        java.lang.String[] strArray40 = new java.lang.String[] {};
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[] strArray41 = pair34.findEnumValues(featureClass36, wildcardEnumArray39, strArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(enumArray38);
        org.junit.Assert.assertNotNull(wildcardEnumArray39);
        org.junit.Assert.assertNotNull(strArray40);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper2.findAndRegisterModules();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature11 = null;
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature12 = null;
        com.fasterxml.jackson.databind.SerializationFeature[] serializationFeatureArray13 = new com.fasterxml.jackson.databind.SerializationFeature[] { serializationFeature12 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper2.disable(serializationFeature11, serializationFeatureArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(serializationFeatureArray13);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper11.disableDefaultTyping();
        com.fasterxml.jackson.core.JsonGenerator.Feature feature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper11.configure(feature13, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.core.FormatSchema formatSchema18 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader19 = objectMapper17.reader(formatSchema18);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(objectReader19);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(contextAttributes22);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.setSerializerFactory(serializerFactory24);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = xmlMapper21.getFactory();
        java.text.DateFormat dateFormat27 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter28 = xmlMapper21.writer(dateFormat27);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray29 = xmlMapper15.writeValueAsBytes((java.lang.Object) objectWriter28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(xmlFactory26);
        org.junit.Assert.assertNotNull(objectWriter28);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator2 = null;
        java.lang.Exception exception3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.IOException iOException4 = xmlSerializerProvider1._wrapAsIOE(jsonGenerator2, exception3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        com.fasterxml.jackson.databind.BeanDescription beanDescription8 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = xmlMapper12.writer(contextAttributes13);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value15 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper12.setDefaultVisibility(value15);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray17 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper12.registerSubtypes(namedTypeArray17);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.BeanSerializerModifier beanSerializerModifier19 = xmlSerializerProvider1.reportBadTypeDefinition(beanDescription8, " ", (java.lang.Object[]) namedTypeArray17);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.exc.InvalidDefinitionException; message: Invalid type definition for type N/A:  ");
        } catch (com.fasterxml.jackson.databind.exc.InvalidDefinitionException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(objectWriter14);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(namedTypeArray17);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext16 = xmlMapper2.getDeserializationContext();
        byte[] byteArray20 = new byte[] { (byte) 0, (byte) 0, (byte) 1 };
        com.fasterxml.jackson.databind.JavaType javaType23 = null;
        // The following exception was thrown during execution in test generation
        try {
            javax.xml.stream.XMLInputFactory xMLInputFactory24 = xmlMapper2.readValue(byteArray20, 100, (int) (byte) 10, javaType23);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(deserializationContext16);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0, 0, 1]");
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext16 = xmlMapper2.getDeserializationContext();
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory21 = xmlFactory19.setCodec(objectCodec20);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass22 = xmlFactory19.getFormatWriteFeatureType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType23 = deserializationContext16.constructType((java.lang.reflect.Type) featureClass22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(deserializationContext16);
        org.junit.Assert.assertNotNull(jsonFactory21);
        org.junit.Assert.assertNotNull(featureClass22);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode5 = xmlMapper2.createObjectNode();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature7 = null;
        com.fasterxml.jackson.databind.SerializationFeature[] serializationFeatureArray8 = new com.fasterxml.jackson.databind.SerializationFeature[] {};
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper6.enable(serializationFeature7, serializationFeatureArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectNode5);
        org.junit.Assert.assertNotNull(xmlMapper6);
        org.junit.Assert.assertNotNull(serializationFeatureArray8);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        boolean boolean8 = xmlFactory7.canUseCharArrays();
        java.io.Reader reader9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser10 = xmlFactory7.createJsonParser(reader9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper12.copy();
        byte[] byteArray16 = new byte[] { (byte) 100 };
        com.fasterxml.jackson.core.type.TypeReference typeReference19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence20 = xmlMapper14.readValue(byteArray16, (int) (short) 100, (int) (byte) -1, typeReference19);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonParseException; message: Unexpected EOF in prolog? at [row,col {unknown-source}]: [1,100]");
        } catch (com.fasterxml.jackson.core.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100]");
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setDefaultVisibility(value18);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray20 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper15.registerSubtypes(namedTypeArray20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper15.writer(characterEscapes22);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.setDefaultVisibility(value24);
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(contextAttributes29);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper28.setSerializerFactory(serializerFactory31);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlMapper28.getFactory();
        java.text.DateFormat dateFormat34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper28.writer(dateFormat34);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature36 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper28.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper15.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper2.configure(feature36, false);
        com.fasterxml.jackson.databind.JavaType javaType44 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = xmlMapper2.readValue("unknown", javaType44);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonParseException; message: Unexpected character 'u' (code 117) in prolog; expected '<'? at [row,col {unknown-source}]: [1,1]");
        } catch (com.fasterxml.jackson.core.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(namedTypeArray20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertTrue("'" + feature36 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature36.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = xmlMapper2.setDefaultUseWrapper(false);
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = xmlMapper12.writer(contextAttributes13);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode15 = xmlMapper12.createObjectNode();
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(contextAttributes19);
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21, xMLOutputFactory22);
        java.lang.Class<?> wildcardClass24 = xmlMapper23.getClass();
        java.lang.Class[] classArray26 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        wildcardClassArray27[0] = wildcardClass24;
        xmlMapper18.registerSubtypes(wildcardClassArray27);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = xmlMapper18.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory32 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = xmlMapper31.setSerializerFactory(serializerFactory32);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.node.JsonNodeCreator jsonNodeCreator34 = xmlMapper9.updateValue((com.fasterxml.jackson.databind.node.JsonNodeCreator) objectNode15, (java.lang.Object) objectMapper33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xmlMapper9);
        org.junit.Assert.assertNotNull(objectWriter14);
        org.junit.Assert.assertNotNull(objectNode15);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(xmlMapper31);
        org.junit.Assert.assertNotNull(objectMapper33);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        java.lang.Class<?> wildcardClass3 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator4 = null;
        javax.xml.namespace.QName qName5 = com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.ROOT_NAME_FOR_NULL;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1._startRootArray(toXmlGenerator4, qName5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNull(wildcardClass3);
        org.junit.Assert.assertNotNull(qName5);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj3 = xmlSerializerProvider1.getAttribute((java.lang.Object) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        java.lang.Class<?> wildcardClass3 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer5 = xmlSerializerProvider1.findTypeSerializer(javaType4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNull(wildcardClass3);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature13 = null;
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature14 = null;
        com.fasterxml.jackson.databind.SerializationFeature[] serializationFeatureArray15 = new com.fasterxml.jackson.databind.SerializationFeature[] { serializationFeature14 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper12.enable(serializationFeature13, serializationFeatureArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializationFeatureArray15);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver mixInResolver7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper2.setMixInResolver(mixInResolver7);
        com.fasterxml.jackson.annotation.JsonInclude.Include include9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper8.setDefaultPropertyInclusion(include9);
        com.fasterxml.jackson.core.JsonGenerator.Feature feature11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = objectMapper8.isEnabled(feature11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectMapper10);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver mixInResolver7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper2.setMixInResolver(mixInResolver7);
        com.fasterxml.jackson.annotation.JsonInclude.Include include9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper8.setDefaultPropertyInclusion(include9);
        com.fasterxml.jackson.core.JsonParser jsonParser11 = null;
        com.fasterxml.jackson.core.type.ResolvedType resolvedType12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.MappingIterator<java.util.Collection<java.lang.Object>> objCollectionItor13 = objectMapper8.readValues(jsonParser11, resolvedType12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectMapper10);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        javax.xml.stream.XMLInputFactory xMLInputFactory2 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory3 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory4 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory2, xMLOutputFactory3);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass5 = xmlFactory4.getFormatReadFeatureType();
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = xmlSerializerProvider1.hasSerializerFor(featureClass5, throwableAtomicReference6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(featureClass5);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        boolean boolean8 = xmlFactory7.canUseCharArrays();
        boolean boolean9 = xmlFactory7.requiresPropertyOrdering();
        javax.xml.stream.XMLStreamReader xMLStreamReader10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser fromXmlParser11 = xmlFactory7.createParser(xMLStreamReader10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition beanPropertyDefinition3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(contextAttributes7);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper6.setDefaultVisibility(value9);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray11 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper6.registerSubtypes(namedTypeArray11);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setDefaultVisibility(value18);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray20 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper15.registerSubtypes(namedTypeArray20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper15.writer(characterEscapes22);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.setDefaultVisibility(value24);
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.core.ObjectCodec objectCodec29 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory30 = xmlFactory28.setCodec(objectCodec29);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass31 = xmlFactory28.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectReader objectReader32 = xmlMapper15.reader(featureClass31);
        com.fasterxml.jackson.databind.jsonschema.JsonSchema jsonSchema33 = xmlMapper6.generateJsonSchema(featureClass31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj34 = xmlSerializerProvider1.includeFilterInstance(beanPropertyDefinition3, featureClass31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(namedTypeArray11);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(namedTypeArray20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(jsonFactory30);
        org.junit.Assert.assertNotNull(featureClass31);
        org.junit.Assert.assertNotNull(objectReader32);
        org.junit.Assert.assertNotNull(jsonSchema33);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        java.util.Locale locale10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper2.setLocale(locale10);
        com.fasterxml.jackson.databind.ObjectReader objectReader12 = xmlMapper2.reader();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper2.findAndRegisterModules();
        java.io.DataOutput dataOutput14 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup15);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup17 = xmlSerializerProvider16._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory18, xMLOutputFactory19);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass21 = xmlFactory20.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider16.getUnknownTypeSerializer(featureClass21);
        // The following exception was thrown during execution in test generation
        try {
            objectMapper13.writeValue(dataOutput14, (java.lang.Object) featureClass21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectReader12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNull(xmlRootNameLookup17);
        org.junit.Assert.assertNotNull(featureClass21);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        java.lang.Class<?> wildcardClass3 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = null;
        java.lang.Object obj5 = null;
        com.fasterxml.jackson.databind.JavaType javaType6 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup9 = xmlSerializerProvider8._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory10, xMLOutputFactory11);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass13 = xmlFactory12.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider8.getUnknownTypeSerializer(featureClass13);
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer15 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator4, obj5, javaType6, objJsonSerializer14, typeSerializer15);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: [no message for java.lang.NullPointerException]");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNull(wildcardClass3);
        org.junit.Assert.assertNull(xmlRootNameLookup9);
        org.junit.Assert.assertNotNull(featureClass13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setCharacterEscapes(characterEscapes9);
        com.fasterxml.jackson.core.JsonParser.Feature feature11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = jsonFactory10.isEnabled(feature11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = null;
        com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder xmlTypeResolverBuilder4 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder();
        boolean boolean5 = xmlTypeResolverBuilder4.isTypeIdVisible();
        com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder7 = xmlTypeResolverBuilder4.typeIdVisibility(false);
        com.fasterxml.jackson.databind.JavaType javaType8 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup9 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider10 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = xmlSerializerProvider10._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory14 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory12, xMLOutputFactory13);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass15 = xmlFactory14.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider10.getUnknownTypeSerializer(featureClass15);
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer17 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator3, (java.lang.Object) stdTypeResolverBuilder7, javaType8, objJsonSerializer16, typeSerializer17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(stdTypeResolverBuilder7);
        org.junit.Assert.assertNull(xmlRootNameLookup11);
        org.junit.Assert.assertNotNull(featureClass15);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator4 = xmlSerializerProvider1._asXmlGenerator(jsonGenerator3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = xmlMapper2.setDefaultUseWrapper(false);
        java.io.DataOutput dataOutput10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder xmlTypeResolverBuilder11 = new com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder();
        boolean boolean12 = xmlTypeResolverBuilder11.isTypeIdVisible();
        com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder14 = xmlTypeResolverBuilder11.typeIdVisibility(false);
        java.lang.Class<?> wildcardClass15 = xmlTypeResolverBuilder11.getDefaultImpl();
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper9.writeValue(dataOutput10, (java.lang.Object) wildcardClass15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xmlMapper9);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(stdTypeResolverBuilder14);
        org.junit.Assert.assertNull(wildcardClass15);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.MapperFeature[] mapperFeatureArray7 = new com.fasterxml.jackson.databind.MapperFeature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper2.disable(mapperFeatureArray7);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(mapperFeatureArray7);
        org.junit.Assert.assertNotNull(objectMapper8);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        java.util.Locale locale10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper2.setLocale(locale10);
        com.fasterxml.jackson.databind.ObjectReader objectReader12 = xmlMapper2.reader();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper2.findAndRegisterModules();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = objectMapper13.enable(serializationFeature14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectReader12);
        org.junit.Assert.assertNotNull(objectMapper13);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setInputDecorator(inputDecorator9);
        boolean boolean11 = xmlFactory7.canParseAsync();
        com.fasterxml.jackson.core.JsonFactory jsonFactory13 = xmlFactory7.setRootValueSeparator("XML");
        java.net.URL uRL14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser15 = jsonFactory13.createParser(uRL14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(jsonFactory13);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper12.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = xmlMapper14.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper14.clearProblemHandlers();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper17.writeValue(jsonGenerator18, (java.lang.Object) "unknown");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(xmlMapper16);
        org.junit.Assert.assertNotNull(objectMapper17);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator3 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue((long) (short) 1, jsonGenerator3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = xmlSerializerProvider5._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider5.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider5.getDefaultNullValueSerializer();
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer8);
        java.util.Date date10 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator11 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey(date10, jsonGenerator11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(xmlRootNameLookup6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(contextAttributes7);
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        java.lang.Class<?> wildcardClass12 = xmlMapper11.getClass();
        java.lang.Class[] classArray14 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        wildcardClassArray15[0] = wildcardClass12;
        xmlMapper6.registerSubtypes(wildcardClassArray15);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = xmlMapper6.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory20 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper19.setSerializerFactory(serializerFactory20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider1.serializerInstance(annotated3, (java.lang.Object) serializerFactory20);
        com.fasterxml.jackson.databind.introspect.Annotated annotated23 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo24 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdGenerator<?> wildcardObjectIdGenerator25 = xmlSerializerProvider1.objectIdGeneratorInstance(annotated23, objectIdInfo24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(xmlMapper19);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNull(objJsonSerializer22);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext8 = xmlMapper2.getDeserializationContext();
        com.fasterxml.jackson.databind.JavaType javaType9 = null;
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = xmlMapper2.canDeserialize(javaType9, throwableAtomicReference10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null JavaType passed");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(deserializationContext8);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        java.util.Locale locale10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper2.setLocale(locale10);
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes15 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter16 = xmlMapper14.writer(contextAttributes15);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory17 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = xmlMapper14.setSerializerFactory(serializerFactory17);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = xmlMapper14.getFactory();
        java.text.DateFormat dateFormat20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper14.writer(dateFormat20);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature22 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper14.configure(feature22, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper2.disable(feature22);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature26 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = objectMapper25.disable(serializationFeature26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectWriter16);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(xmlFactory19);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertTrue("'" + feature22 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature22.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver mixInResolver7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper2.setMixInResolver(mixInResolver7);
        java.io.File file9 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier xmlBeanDeserializerModifier11 = objectMapper8.readValue(file9, typeReference10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper8);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.annotation.JsonInclude.Value value7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = objectMapper6.setPropertyInclusion(value7);
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper11.writer(contextAttributes12);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper11.setSerializerFactory(serializerFactory14);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = xmlMapper11.getFactory();
        java.text.DateFormat dateFormat17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = xmlMapper11.writer(dateFormat17);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature19 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper11.configure(feature19, false);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode22 = objectMapper21.createObjectNode();
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes26 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter27 = xmlMapper25.writer(contextAttributes26);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value28 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = xmlMapper25.setDefaultVisibility(value28);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray30 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper25.registerSubtypes(namedTypeArray30);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper25.writer(characterEscapes32);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value34 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper25.setDefaultVisibility(value34);
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.core.ObjectCodec objectCodec39 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory40 = xmlFactory38.setCodec(objectCodec39);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass41 = xmlFactory38.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectReader objectReader42 = xmlMapper25.reader(featureClass41);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature43 = objectMapper8.treeToValue((com.fasterxml.jackson.core.TreeNode) objectNode22, featureClass41);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.exc.MismatchedInputException; message: Cannot deserialize instance of `com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature` out of START_OBJECT token? at [Source: UNKNOWN; line: -1, column: -1]");
        } catch (com.fasterxml.jackson.databind.exc.MismatchedInputException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(xmlFactory16);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertTrue("'" + feature19 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature19.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(objectNode22);
        org.junit.Assert.assertNotNull(objectWriter27);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(namedTypeArray30);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(jsonFactory40);
        org.junit.Assert.assertNotNull(featureClass41);
        org.junit.Assert.assertNotNull(objectReader42);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = xmlMapper2.setDefaultUseWrapper(false);
        javax.xml.stream.XMLStreamReader xMLStreamReader10 = null;
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule12 = xmlMapper2.readValue(xMLStreamReader10, javaType11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xmlMapper9);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.introspect.Annotated annotated4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper7.writer(contextAttributes8);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper7.setSerializerFactory(serializerFactory10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlMapper7.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = xmlFactory12.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper16.disableDefaultTyping();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.util.Converter<java.lang.Object, java.lang.Object> objConverter18 = xmlSerializerProvider1.converterInstance(annotated4, (java.lang.Object) objectMapper17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: AnnotationIntrospector returned Converter definition of type com.fasterxml.jackson.dataformat.xml.XmlMapper; expected type Converter or Class<Converter> instead");
        } catch (java.lang.IllegalStateException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(xMLInputFactory13);
        org.junit.Assert.assertNotNull(objectMapper17);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver mixInResolver7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper2.setMixInResolver(mixInResolver7);
        com.fasterxml.jackson.annotation.JsonInclude.Include include9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper8.setDefaultPropertyInclusion(include9);
        java.io.File file11 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.SerializationConfig serializationConfig13 = objectMapper8.readValue(file11, typeReference12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectMapper10);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(contextAttributes11);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.setSerializerFactory(serializerFactory13);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = xmlMapper10.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = xmlFactory15.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory17);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = xmlMapper20.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = xmlMapper20.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = xmlMapper22.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper22.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory27 = null;
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider28 = xmlSerializerProvider1.createInstance(serializationConfig26, serializerFactory27);
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory29, xMLOutputFactory30);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass32 = xmlFactory31.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.BeanProperty beanProperty34 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer35 = xmlSerializerProvider1.findTypedValueSerializer(featureClass32, true, beanProperty34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(xmlFactory15);
        org.junit.Assert.assertNotNull(xMLInputFactory16);
        org.junit.Assert.assertNotNull(serializerProvider21);
        org.junit.Assert.assertNotNull(xmlMapper22);
        org.junit.Assert.assertNotNull(xmlMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(defaultSerializerProvider28);
        org.junit.Assert.assertNotNull(featureClass32);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = xmlSerializerProvider5._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory7, xMLOutputFactory8);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass10 = xmlFactory9.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider5.getUnknownTypeSerializer(featureClass10);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.JsonInclude.Value value12 = xmlSerializerProvider1.getDefaultPropertyInclusion(featureClass10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(xmlRootNameLookup6);
        org.junit.Assert.assertNotNull(featureClass10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory2 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory0, xMLOutputFactory1);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass3 = xmlFactory2.getFormatReadFeatureType();
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(contextAttributes7);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper6.setSerializerFactory(serializerFactory9);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlMapper6.getFactory();
        java.text.DateFormat dateFormat12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper6.writer(dateFormat12);
        java.util.Locale locale14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper6.setLocale(locale14);
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(contextAttributes19);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory21 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.setSerializerFactory(serializerFactory21);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory23 = xmlMapper18.getFactory();
        java.text.DateFormat dateFormat24 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = xmlMapper18.writer(dateFormat24);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature26 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper28 = xmlMapper18.configure(feature26, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = xmlMapper6.disable(feature26);
        boolean boolean30 = xmlFactory2.isEnabled(feature26);
        org.junit.Assert.assertNotNull(featureClass3);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(xmlFactory23);
        org.junit.Assert.assertNotNull(objectWriter25);
        org.junit.Assert.assertTrue("'" + feature26 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature26.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper28);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.databind.introspect.Annotated annotated36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean37 = pair25.findSerializationSortAlphabetically(annotated36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setSerializerFactory(serializerFactory18);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = xmlMapper15.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = xmlFactory20.getXMLInputFactory();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator22 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory23 = xmlFactory20.setInputDecorator(inputDecorator22);
        boolean boolean24 = xmlFactory20.canParseAsync();
        com.fasterxml.jackson.core.JsonFactory jsonFactory26 = xmlFactory20.setRootValueSeparator("XML");
        com.fasterxml.jackson.core.Version version27 = xmlFactory20.version();
        com.fasterxml.jackson.databind.JavaType javaType28 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlMapper12.convertValue((java.lang.Object) version27, javaType28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(xmlFactory20);
        org.junit.Assert.assertNotNull(xMLInputFactory21);
        org.junit.Assert.assertNotNull(jsonFactory23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(jsonFactory26);
        org.junit.Assert.assertNotNull(version27);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setNodeFactory(jsonNodeFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper2);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(filterProvider8);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory10 = xmlMapper2.getSerializerFactory();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(serializerFactory10);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(contextAttributes11);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.setSerializerFactory(serializerFactory13);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = xmlMapper10.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = xmlFactory15.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory17);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = xmlMapper20.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = xmlMapper20.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = xmlMapper22.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper22.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory27 = null;
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider28 = xmlSerializerProvider1.createInstance(serializationConfig26, serializerFactory27);
        com.fasterxml.jackson.databind.introspect.Annotated annotated29 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo30 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver31 = defaultSerializerProvider28.objectIdResolverInstance(annotated29, objectIdInfo30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(xmlFactory15);
        org.junit.Assert.assertNotNull(xMLInputFactory16);
        org.junit.Assert.assertNotNull(serializerProvider21);
        org.junit.Assert.assertNotNull(xmlMapper22);
        org.junit.Assert.assertNotNull(xmlMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(defaultSerializerProvider28);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        java.lang.Boolean boolean4 = pair2.isOutputAsText(annotated3);
        com.fasterxml.jackson.databind.introspect.Annotated annotated5 = null;
        java.lang.Boolean boolean6 = pair2.isOutputAsAttribute(annotated5);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector7 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair9 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector7, annotationIntrospector8);
        com.fasterxml.jackson.databind.introspect.Annotated annotated10 = null;
        java.lang.Boolean boolean11 = pair9.isOutputAsText(annotated10);
        com.fasterxml.jackson.databind.introspect.Annotated annotated12 = null;
        java.lang.Boolean boolean13 = pair9.isOutputAsAttribute(annotated12);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector14 = com.fasterxml.jackson.databind.AnnotationIntrospector.pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair2, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair9);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector15 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair17 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector15, annotationIntrospector16);
        com.fasterxml.jackson.databind.introspect.Annotated annotated18 = null;
        java.lang.Boolean boolean19 = pair17.isOutputAsText(annotated18);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair22 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector20, annotationIntrospector21);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector23, annotationIntrospector24);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair26 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector21, annotationIntrospector23);
        pair26.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = com.fasterxml.jackson.databind.AnnotationIntrospector.pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair17, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair26);
        com.fasterxml.jackson.databind.introspect.Annotated annotated30 = null;
        java.lang.Boolean boolean31 = pair17.isOutputAsCData(annotated30);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = com.fasterxml.jackson.databind.AnnotationIntrospector.pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair9, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair17);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup33 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider34 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup33);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup35 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider36 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup35);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup37 = xmlSerializerProvider36._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer38 = xmlSerializerProvider36.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty39 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer40 = xmlSerializerProvider34.handleSecondaryContextualization(objJsonSerializer38, beanProperty39);
        javax.xml.stream.XMLInputFactory xMLInputFactory41 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper43 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory41, xMLOutputFactory42);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes44 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter45 = xmlMapper43.writer(contextAttributes44);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory46 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper47 = xmlMapper43.setSerializerFactory(serializerFactory46);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = xmlMapper43.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = xmlFactory48.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper51 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory49, xMLOutputFactory50);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory52 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper53 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory49, xMLOutputFactory52);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider54 = xmlMapper53.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper55 = xmlMapper53.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper57 = xmlMapper55.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper58 = xmlMapper55.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig59 = objectMapper58.getSerializationConfig();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory60 = null;
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider61 = xmlSerializerProvider34.createInstance(serializationConfig59, serializerFactory60);
        com.fasterxml.jackson.databind.introspect.AnnotatedMember annotatedMember62 = null;
        com.fasterxml.jackson.databind.JavaType javaType63 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?> wildcardTypeResolverBuilder64 = pair17.findPropertyContentTypeResolver((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig59, annotatedMember62, javaType63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pair2);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(pair9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(annotationIntrospector14);
        org.junit.Assert.assertNotNull(pair17);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(pair22);
        org.junit.Assert.assertNotNull(pair25);
        org.junit.Assert.assertNotNull(annotationIntrospector29);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(annotationIntrospector32);
        org.junit.Assert.assertNull(xmlRootNameLookup37);
        org.junit.Assert.assertNotNull(objJsonSerializer38);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer40);
        org.junit.Assert.assertNotNull(objectWriter45);
        org.junit.Assert.assertNotNull(objectMapper47);
        org.junit.Assert.assertNotNull(xmlFactory48);
        org.junit.Assert.assertNotNull(xMLInputFactory49);
        org.junit.Assert.assertNotNull(serializerProvider54);
        org.junit.Assert.assertNotNull(xmlMapper55);
        org.junit.Assert.assertNotNull(xmlMapper57);
        org.junit.Assert.assertNotNull(objectMapper58);
        org.junit.Assert.assertNotNull(serializationConfig59);
        org.junit.Assert.assertNotNull(defaultSerializerProvider61);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory3, xMLOutputFactory4);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass6 = xmlFactory5.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.getUnknownTypeSerializer(featureClass6);
        com.fasterxml.jackson.databind.introspect.Annotated annotated8 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdResolver objectIdResolver10 = xmlSerializerProvider1.objectIdResolverInstance(annotated8, objectIdInfo9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(featureClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        com.fasterxml.jackson.core.Version version8 = xmlFactory7.version();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass9 = xmlFactory7.getFormatWriteFeatureType();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(featureClass9);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setInputDecorator(inputDecorator9);
        boolean boolean11 = xmlFactory7.canParseAsync();
        com.fasterxml.jackson.core.JsonFactory.Feature feature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonFactory jsonFactory13 = xmlFactory7.enable(feature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext16 = xmlMapper2.getDeserializationContext();
        com.fasterxml.jackson.databind.introspect.Annotated annotated17 = null;
        com.fasterxml.jackson.databind.introspect.ObjectIdInfo objectIdInfo18 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.ObjectIdGenerator<?> wildcardObjectIdGenerator19 = deserializationContext16.objectIdGeneratorInstance(annotated17, objectIdInfo18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(deserializationContext16);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        byte[] byteArray9 = new byte[] { (byte) 1 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser12 = xmlFactory7.createJsonParser(byteArray9, 100, 0);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonParseException; message: Unexpected EOF in prolog? at [row,col {unknown-source}]: [1,100]");
        } catch (com.fasterxml.jackson.core.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[1]");
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper2.writer(characterEscapes9);
        java.io.Reader reader11 = null;
        com.fasterxml.jackson.databind.JavaType javaType12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper2.readValue(reader11, javaType12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectWriter10);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature18 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper15.configure(feature18, true);
        java.io.Reader reader21 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode22 = xmlMapper15.readTree(reader21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertTrue("'" + feature18 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature18.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper20);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory18 = xmlFactory16.setCodec(objectCodec17);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass19 = xmlFactory16.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.BeanProperty beanProperty20 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = serializerProvider13.findPrimaryPropertySerializer(featureClass19, beanProperty20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(jsonFactory18);
        org.junit.Assert.assertNotNull(featureClass19);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator8 = null;
        javax.xml.namespace.QName qName9 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1._startRootArray(toXmlGenerator8, qName9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setInputDecorator(inputDecorator9);
        boolean boolean11 = xmlFactory7.canParseAsync();
        com.fasterxml.jackson.core.JsonFactory jsonFactory13 = xmlFactory7.setRootValueSeparator("XML");
        com.fasterxml.jackson.core.JsonGenerator.Feature feature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = jsonFactory13.isEnabled(feature14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(jsonFactory13);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver mixInResolver7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper2.setMixInResolver(mixInResolver7);
        com.fasterxml.jackson.annotation.JsonInclude.Include include9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper8.setDefaultPropertyInclusion(include9);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = objectMapper10.isEnabled(deserializationFeature11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectMapper10);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = xmlSerializerProvider15._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider15.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = serializerProvider13.handlePrimaryContextualization(objJsonSerializer17, beanProperty18);
        com.fasterxml.jackson.databind.JavaType javaType20 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType22 = serializerProvider13.resolveSubType(javaType20, "xmlInfo");
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.exc.InvalidTypeIdException; message: Could not resolve type id 'xmlInfo' as a subtype of null: problem: (java.lang.NullPointerException) null");
        } catch (com.fasterxml.jackson.databind.exc.InvalidTypeIdException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNull(xmlRootNameLookup16);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer19);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory7 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader8 = objectMapper6.reader(jsonNodeFactory7);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectReader8);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        java.util.Locale locale10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper2.setLocale(locale10);
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes15 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter16 = xmlMapper14.writer(contextAttributes15);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory17 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = xmlMapper14.setSerializerFactory(serializerFactory17);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = xmlMapper14.getFactory();
        java.text.DateFormat dateFormat20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper14.writer(dateFormat20);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature22 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper14.configure(feature22, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper2.disable(feature22);
        com.fasterxml.jackson.databind.MapperFeature[] mapperFeatureArray26 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = objectMapper25.disable(mapperFeatureArray26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectWriter16);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(xmlFactory19);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertTrue("'" + feature22 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature22.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setNodeFactory(jsonNodeFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper2);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature8 = null;
        com.fasterxml.jackson.databind.SerializationFeature[] serializationFeatureArray9 = new com.fasterxml.jackson.databind.SerializationFeature[] {};
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper2.writer(serializationFeature8, serializationFeatureArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(serializationFeatureArray9);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup5 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup5);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup9 = xmlSerializerProvider8._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider8.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty11 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer12 = xmlSerializerProvider6.handleSecondaryContextualization(objJsonSerializer10, beanProperty11);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer13 = objJsonSerializer4.replaceDelegatee(objJsonSerializer10);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: null");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
        org.junit.Assert.assertNull(xmlRootNameLookup9);
        org.junit.Assert.assertNotNull(objJsonSerializer10);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer12);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(contextAttributes7);
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        java.lang.Class<?> wildcardClass12 = xmlMapper11.getClass();
        java.lang.Class[] classArray14 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        wildcardClassArray15[0] = wildcardClass12;
        xmlMapper6.registerSubtypes(wildcardClassArray15);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = xmlMapper6.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory20 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper19.setSerializerFactory(serializerFactory20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider1.serializerInstance(annotated3, (java.lang.Object) serializerFactory20);
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes26 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter27 = xmlMapper25.writer(contextAttributes26);
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory28, xMLOutputFactory29);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes31 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter32 = xmlMapper30.writer(contextAttributes31);
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper35 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory33, xMLOutputFactory34);
        java.lang.Class<?> wildcardClass36 = xmlMapper35.getClass();
        java.lang.Class[] classArray38 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray39 = (java.lang.Class<?>[]) classArray38;
        wildcardClassArray39[0] = wildcardClass36;
        xmlMapper30.registerSubtypes(wildcardClassArray39);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper43 = xmlMapper30.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory44 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper43.setSerializerFactory(serializerFactory44);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver46 = xmlMapper43.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector47 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair49 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector47, annotationIntrospector48);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector50 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector51 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair52 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector50, annotationIntrospector51);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair53 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector48, annotationIntrospector50);
        com.fasterxml.jackson.databind.introspect.Annotated annotated54 = null;
        java.lang.String str55 = pair53.findNamespace(annotated54);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector56 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector57 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair58 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector56, annotationIntrospector57);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector59 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector60 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair61 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector59, annotationIntrospector60);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair62 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector57, annotationIntrospector59);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper63 = xmlMapper43.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair53, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair62);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.SerializerProvider serializerProvider64 = xmlSerializerProvider1.setAttribute((java.lang.Object) contextAttributes26, (java.lang.Object) xmlMapper43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(xmlMapper19);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(objectWriter27);
        org.junit.Assert.assertNotNull(objectWriter32);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(classArray38);
        org.junit.Assert.assertNotNull(wildcardClassArray39);
        org.junit.Assert.assertNotNull(xmlMapper43);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertNotNull(subtypeResolver46);
        org.junit.Assert.assertNotNull(pair49);
        org.junit.Assert.assertNotNull(pair52);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(pair58);
        org.junit.Assert.assertNotNull(pair61);
        org.junit.Assert.assertNotNull(objectMapper63);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        java.lang.Class<?> wildcardClass3 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator4 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper7.writer(contextAttributes8);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper7.setSerializerFactory(serializerFactory10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlMapper7.getFactory();
        java.text.DateFormat dateFormat13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = xmlMapper7.writer(dateFormat13);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature15 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper7.configure(feature15, false);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode18 = objectMapper17.createObjectNode();
        com.fasterxml.jackson.databind.JavaType javaType19 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer20 = null;
        com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSerializer21 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializePolymorphic(jsonGenerator4, (java.lang.Object) objectNode18, javaType19, objJsonSerializer20, typeSerializer21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNull(wildcardClass3);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(objectWriter14);
        org.junit.Assert.assertTrue("'" + feature15 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature15.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(objectNode18);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper2);
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper2.addHandler(deserializationProblemHandler10);
        com.fasterxml.jackson.databind.JavaType javaType12 = null;
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper13 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper11.acceptJsonFormatVisitor(javaType12, jsonFormatVisitorWrapper13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type must be provided");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectMapper11);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setDefaultVisibility(value18);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray20 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper15.registerSubtypes(namedTypeArray20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper15.writer(characterEscapes22);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.setDefaultVisibility(value24);
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(contextAttributes29);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper28.setSerializerFactory(serializerFactory31);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlMapper28.getFactory();
        java.text.DateFormat dateFormat34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper28.writer(dateFormat34);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature36 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper28.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper15.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper2.configure(feature36, false);
        com.fasterxml.jackson.databind.InjectableValues injectableValues43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper2.setInjectableValues(injectableValues43);
        int int45 = objectMapper44.mixInCount();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(namedTypeArray20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertTrue("'" + feature36 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature36.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule1 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier2 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule3 = jacksonXmlModule1.setSerializerModifier((com.fasterxml.jackson.databind.ser.BeanSerializerModifier) xmlBeanSerializerModifier2);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig4 = null;
        com.fasterxml.jackson.databind.type.MapType mapType5 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription6 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup7 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider8 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup7);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup9 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider10 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = xmlSerializerProvider10._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer12 = xmlSerializerProvider10.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty13 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = xmlSerializerProvider8.handleSecondaryContextualization(objJsonSerializer12, beanProperty13);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer15 = xmlBeanSerializerModifier2.modifyMapSerializer(serializationConfig4, mapType5, beanDescription6, objJsonSerializer12);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.module.SimpleModule simpleModule16 = jacksonXmlModule0.addSerializer((com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: JsonSerializer of type com.fasterxml.jackson.databind.ser.impl.FailingSerializer does not define valid handledType() -- must either register with method that takes type argument  or make serializer extend 'com.fasterxml.jackson.databind.ser.std.StdSerializer'");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(simpleModule3);
        org.junit.Assert.assertNull(xmlRootNameLookup11);
        org.junit.Assert.assertNotNull(objJsonSerializer12);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer15);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature16 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper2.disable(feature16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(deserializationFeature10, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setCharacterEscapes(characterEscapes9);
        java.lang.String str11 = jsonFactory10.getRootValueSeparator();
        java.lang.String str12 = jsonFactory10.getRootValueSeparator();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + " " + "'", str11, " ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + " " + "'", str12, " ");
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory3, xMLOutputFactory4);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass6 = xmlFactory5.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.getUnknownTypeSerializer(featureClass6);
        com.fasterxml.jackson.databind.JavaType javaType8 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer10 = xmlSerializerProvider1.findKeySerializer(javaType8, beanProperty9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(featureClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper10.setDefaultPrettyPrinter(prettyPrinter11);
        java.io.File file13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode14 = objectMapper12.readTree(file13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        java.lang.Class<?> wildcardClass3 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.MapperFeature mapperFeature4 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean5 = xmlSerializerProvider1.isEnabled(mapperFeature4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNull(wildcardClass3);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper7 = xmlMapper2.configure(feature5, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper11.writer(contextAttributes12);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper11.setDefaultVisibility(value14);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray16 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper11.registerSubtypes(namedTypeArray16);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper11.writer(characterEscapes18);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value20 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper11.setDefaultVisibility(value20);
        javax.xml.stream.XMLInputFactory xMLInputFactory22 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory24 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory22, xMLOutputFactory23);
        com.fasterxml.jackson.core.ObjectCodec objectCodec25 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory26 = xmlFactory24.setCodec(objectCodec25);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass27 = xmlFactory24.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectReader objectReader28 = xmlMapper11.reader(featureClass27);
        com.fasterxml.jackson.databind.jsonschema.JsonSchema jsonSchema29 = xmlMapper2.generateJsonSchema(featureClass27);
        java.io.InputStream inputStream30 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference31 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.DeserializationContext deserializationContext32 = xmlMapper2.readValue(inputStream30, typeReference31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(namedTypeArray16);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(jsonFactory26);
        org.junit.Assert.assertNotNull(featureClass27);
        org.junit.Assert.assertNotNull(objectReader28);
        org.junit.Assert.assertNotNull(jsonSchema29);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setInputDecorator(inputDecorator9);
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonGenerator jsonGenerator12 = xmlFactory7.createJsonGenerator(outputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null OutputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.annotation.PropertyAccessor propertyAccessor14 = null;
        com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility visibility15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper12.setVisibility(propertyAccessor14, visibility15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setNodeFactory(jsonNodeFactory5);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory7 = xmlMapper2.getNodeFactory();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNull(jsonNodeFactory7);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.databind.introspect.Annotated annotated36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean37 = pair25.hasAnyGetter(annotated36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory7 = objectMapper6.getSerializerFactory();
        com.fasterxml.jackson.core.TreeNode treeNode8 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper11.writer(contextAttributes12);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper11.setSerializerFactory(serializerFactory14);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = xmlMapper11.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = xmlFactory16.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter20 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper19.setDefaultPrettyPrinter(prettyPrinter20);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup22 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider23 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup22);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = xmlSerializerProvider23._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory25, xMLOutputFactory26);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass28 = xmlFactory27.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider23.getUnknownTypeSerializer(featureClass28);
        boolean boolean30 = objectMapper21.canSerialize(featureClass28);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature31 = objectMapper6.treeToValue(treeNode8, featureClass28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNull(serializerFactory7);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(xmlFactory16);
        org.junit.Assert.assertNotNull(xMLInputFactory17);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNull(xmlRootNameLookup24);
        org.junit.Assert.assertNotNull(featureClass28);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode5 = xmlMapper2.createObjectNode();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature6 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper7 = xmlMapper2.disable(serializationFeature6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectNode5);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper12.copy();
        com.fasterxml.jackson.core.JsonParser jsonParser15 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(contextAttributes19);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value21 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper18.setDefaultVisibility(value21);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray23 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper18.registerSubtypes(namedTypeArray23);
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory25, xMLOutputFactory26);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper27.writer(contextAttributes28);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value30 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper27.setDefaultVisibility(value30);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray32 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper27.registerSubtypes(namedTypeArray32);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper27.writer(characterEscapes34);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value36 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = xmlMapper27.setDefaultVisibility(value36);
        javax.xml.stream.XMLInputFactory xMLInputFactory38 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory39 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory38, xMLOutputFactory39);
        com.fasterxml.jackson.core.ObjectCodec objectCodec41 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory42 = xmlFactory40.setCodec(objectCodec41);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass43 = xmlFactory40.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectReader objectReader44 = xmlMapper27.reader(featureClass43);
        com.fasterxml.jackson.databind.jsonschema.JsonSchema jsonSchema45 = xmlMapper18.generateJsonSchema(featureClass43);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature46 = xmlMapper14.readValue(jsonParser15, featureClass43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(namedTypeArray23);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(namedTypeArray32);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(jsonFactory42);
        org.junit.Assert.assertNotNull(featureClass43);
        org.junit.Assert.assertNotNull(objectReader44);
        org.junit.Assert.assertNotNull(jsonSchema45);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setNodeFactory(jsonNodeFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper2);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(filterProvider8);
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = xmlMapper12.writer(contextAttributes13);
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory15, xMLOutputFactory16);
        java.lang.Class<?> wildcardClass18 = xmlMapper17.getClass();
        java.lang.Class[] classArray20 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray21 = (java.lang.Class<?>[]) classArray20;
        wildcardClassArray21[0] = wildcardClass18;
        xmlMapper12.registerSubtypes(wildcardClassArray21);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = xmlMapper12.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory26 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper25.setSerializerFactory(serializerFactory26);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver28 = xmlMapper25.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair31 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector29, annotationIntrospector30);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector32, annotationIntrospector33);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair35 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector30, annotationIntrospector32);
        com.fasterxml.jackson.databind.introspect.Annotated annotated36 = null;
        java.lang.String str37 = pair35.findNamespace(annotated36);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector38 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector39 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair40 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector38, annotationIntrospector39);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector41 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair43 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector41, annotationIntrospector42);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair44 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector39, annotationIntrospector41);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper25.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair35, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair44);
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory46 = objectMapper45.getTypeFactory();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper47 = xmlMapper2.setTypeFactory(typeFactory46);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectWriter14);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(classArray20);
        org.junit.Assert.assertNotNull(wildcardClassArray21);
        org.junit.Assert.assertNotNull(xmlMapper25);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(subtypeResolver28);
        org.junit.Assert.assertNotNull(pair31);
        org.junit.Assert.assertNotNull(pair34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(pair40);
        org.junit.Assert.assertNotNull(pair43);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertNotNull(typeFactory46);
        org.junit.Assert.assertNotNull(objectMapper47);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setNodeFactory(jsonNodeFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper2);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(filterProvider8);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory11, xMLOutputFactory12);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes14 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter15 = xmlMapper13.writer(contextAttributes14);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode16 = xmlMapper13.createObjectNode();
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper2.writeTree(jsonGenerator10, (com.fasterxml.jackson.core.TreeNode) objectNode16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectWriter15);
        org.junit.Assert.assertNotNull(objectNode16);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod annotatedMethod36 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean37 = pair34.hasAsValueAnnotation(annotatedMethod36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setNodeFactory(jsonNodeFactory5);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver7 = xmlMapper2.getSubtypeResolver();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(subtypeResolver7);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator3 = null;
        javax.xml.namespace.QName qName4 = com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider.ROOT_NAME_FOR_NULL;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1._startRootArray(toXmlGenerator3, qName4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(qName4);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver mixInResolver7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper2.setMixInResolver(mixInResolver7);
        com.fasterxml.jackson.annotation.JsonSetter.Value value9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper2.setDefaultSetterInfo(value9);
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = objectMapper10.writerWithType(javaType11);
        java.io.InputStream inputStream13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.core.ObjectCodec objectCodec17 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory18 = xmlFactory16.setCodec(objectCodec17);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass19 = xmlFactory16.getFormatReadFeatureType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature20 = objectMapper10.readValue(inputStream13, featureClass19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(jsonFactory18);
        org.junit.Assert.assertNotNull(featureClass19);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setDefaultVisibility(value18);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray20 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper15.registerSubtypes(namedTypeArray20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper15.writer(characterEscapes22);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.setDefaultVisibility(value24);
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(contextAttributes29);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper28.setSerializerFactory(serializerFactory31);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlMapper28.getFactory();
        java.text.DateFormat dateFormat34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper28.writer(dateFormat34);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature36 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper28.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper15.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper2.configure(feature36, false);
        java.text.DateFormat dateFormat43 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter44 = objectMapper42.writer(dateFormat43);
        com.fasterxml.jackson.core.Base64Variant base64Variant45 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader46 = objectMapper42.reader(base64Variant45);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(namedTypeArray20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertTrue("'" + feature36 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature36.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectWriter44);
        org.junit.Assert.assertNotNull(objectReader46);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        java.util.Locale locale10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper2.setLocale(locale10);
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes15 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter16 = xmlMapper14.writer(contextAttributes15);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory17 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = xmlMapper14.setSerializerFactory(serializerFactory17);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = xmlMapper14.getFactory();
        java.text.DateFormat dateFormat20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper14.writer(dateFormat20);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature22 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper14.configure(feature22, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper2.disable(feature22);
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode27 = objectMapper25.readTree(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectWriter16);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(xmlFactory19);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertTrue("'" + feature22 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature22.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(contextAttributes11);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.setSerializerFactory(serializerFactory13);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = xmlMapper10.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = xmlFactory15.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory17);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = xmlMapper20.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = xmlMapper20.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = xmlMapper22.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper22.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory27 = null;
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider28 = xmlSerializerProvider1.createInstance(serializationConfig26, serializerFactory27);
        java.lang.Class<?> wildcardClass29 = xmlSerializerProvider1.getActiveView();
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes33 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper32.writer(contextAttributes33);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory35 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = xmlMapper32.setSerializerFactory(serializerFactory35);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = xmlMapper32.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory38 = xmlFactory37.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory39 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory38, xMLOutputFactory39);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory41 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper42 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory38, xMLOutputFactory41);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider43 = xmlMapper42.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper44 = xmlMapper42.copy();
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.core.ObjectCodec objectCodec48 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory49 = xmlFactory47.setCodec(objectCodec48);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass50 = xmlFactory47.getFormatReadFeatureType();
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference51 = null;
        boolean boolean52 = xmlMapper44.canSerialize(featureClass50, throwableAtomicReference51);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.GenericDeclaration genericDeclaration54 = xmlSerializerProvider1.reportBadDefinition(featureClass50, "unknown");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(xmlFactory15);
        org.junit.Assert.assertNotNull(xMLInputFactory16);
        org.junit.Assert.assertNotNull(serializerProvider21);
        org.junit.Assert.assertNotNull(xmlMapper22);
        org.junit.Assert.assertNotNull(xmlMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(defaultSerializerProvider28);
        org.junit.Assert.assertNull(wildcardClass29);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(xmlFactory37);
        org.junit.Assert.assertNotNull(xMLInputFactory38);
        org.junit.Assert.assertNotNull(serializerProvider43);
        org.junit.Assert.assertNotNull(xmlMapper44);
        org.junit.Assert.assertNotNull(jsonFactory49);
        org.junit.Assert.assertNotNull(featureClass50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.databind.introspect.Annotated annotated36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean37 = pair34.hasAnyGetter(annotated36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(contextAttributes7);
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        java.lang.Class<?> wildcardClass12 = xmlMapper11.getClass();
        java.lang.Class[] classArray14 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        wildcardClassArray15[0] = wildcardClass12;
        xmlMapper6.registerSubtypes(wildcardClassArray15);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = xmlMapper6.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory20 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper19.setSerializerFactory(serializerFactory20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider1.serializerInstance(annotated3, (java.lang.Object) serializerFactory20);
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider23 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider1);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass24 = null;
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = xmlSerializerProvider1.hasSerializerFor(featureClass24, throwableAtomicReference25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(xmlMapper19);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNull(objJsonSerializer22);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule2 = jacksonXmlModule0.setSerializerModifier((com.fasterxml.jackson.databind.ser.BeanSerializerModifier) xmlBeanSerializerModifier1);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig3 = null;
        com.fasterxml.jackson.databind.type.MapType mapType4 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription5 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = xmlSerializerProvider9._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = xmlSerializerProvider7.handleSecondaryContextualization(objJsonSerializer11, beanProperty12);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = xmlBeanSerializerModifier1.modifyMapSerializer(serializationConfig3, mapType4, beanDescription5, objJsonSerializer11);
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(contextAttributes18);
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20, xMLOutputFactory21);
        java.lang.Class<?> wildcardClass23 = xmlMapper22.getClass();
        java.lang.Class[] classArray25 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray26 = (java.lang.Class<?>[]) classArray25;
        wildcardClassArray26[0] = wildcardClass23;
        xmlMapper17.registerSubtypes(wildcardClassArray26);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = xmlMapper17.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper30.setSerializerFactory(serializerFactory31);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver33 = xmlMapper30.getSubtypeResolver();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig34 = xmlMapper30.getSerializationConfig();
        com.fasterxml.jackson.databind.type.CollectionType collectionType35 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription36 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup37 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider38 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup37);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup41 = xmlSerializerProvider40._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty43 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer44 = xmlSerializerProvider38.handleSecondaryContextualization(objJsonSerializer42, beanProperty43);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer45 = xmlBeanSerializerModifier1.modifyCollectionSerializer(serializationConfig34, collectionType35, beanDescription36, (com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer44);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup46 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider47 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup46);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup48 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider49 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup48);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup50 = xmlSerializerProvider49._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer51 = xmlSerializerProvider49.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer53 = xmlSerializerProvider47.handleSecondaryContextualization(objJsonSerializer51, beanProperty52);
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper56 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes57 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter58 = xmlMapper56.writer(contextAttributes57);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory59 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper60 = xmlMapper56.setSerializerFactory(serializerFactory59);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory61 = xmlMapper56.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory62 = xmlFactory61.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory63 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper64 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory62, xMLOutputFactory63);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory65 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper66 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory62, xMLOutputFactory65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = xmlMapper66.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper68 = xmlMapper66.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper70 = xmlMapper68.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper71 = xmlMapper68.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig72 = objectMapper71.getSerializationConfig();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory73 = null;
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider74 = xmlSerializerProvider47.createInstance(serializationConfig72, serializerFactory73);
        com.fasterxml.jackson.databind.BeanDescription beanDescription75 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory76 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory77 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper78 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory76, xMLOutputFactory77);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes79 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter80 = xmlMapper78.writer(contextAttributes79);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory81 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper82 = xmlMapper78.setSerializerFactory(serializerFactory81);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory83 = xmlMapper78.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory84 = xmlFactory83.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory85 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper86 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory84, xMLOutputFactory85);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory87 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper88 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory84, xMLOutputFactory87);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider89 = xmlMapper88.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup90 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider91 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup90);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup92 = xmlSerializerProvider91._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer93 = xmlSerializerProvider91.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty94 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer95 = serializerProvider89.handlePrimaryContextualization(objJsonSerializer93, beanProperty94);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer96 = xmlBeanSerializerModifier1.modifySerializer(serializationConfig72, beanDescription75, (com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer95);
        org.junit.Assert.assertNotNull(simpleModule2);
        org.junit.Assert.assertNull(xmlRootNameLookup10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(classArray25);
        org.junit.Assert.assertNotNull(wildcardClassArray26);
        org.junit.Assert.assertNotNull(xmlMapper30);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(subtypeResolver33);
        org.junit.Assert.assertNotNull(serializationConfig34);
        org.junit.Assert.assertNull(xmlRootNameLookup41);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer44);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer45);
        org.junit.Assert.assertNull(xmlRootNameLookup50);
        org.junit.Assert.assertNotNull(objJsonSerializer51);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer53);
        org.junit.Assert.assertNotNull(objectWriter58);
        org.junit.Assert.assertNotNull(objectMapper60);
        org.junit.Assert.assertNotNull(xmlFactory61);
        org.junit.Assert.assertNotNull(xMLInputFactory62);
        org.junit.Assert.assertNotNull(serializerProvider67);
        org.junit.Assert.assertNotNull(xmlMapper68);
        org.junit.Assert.assertNotNull(xmlMapper70);
        org.junit.Assert.assertNotNull(objectMapper71);
        org.junit.Assert.assertNotNull(serializationConfig72);
        org.junit.Assert.assertNotNull(defaultSerializerProvider74);
        org.junit.Assert.assertNotNull(objectWriter80);
        org.junit.Assert.assertNotNull(objectMapper82);
        org.junit.Assert.assertNotNull(xmlFactory83);
        org.junit.Assert.assertNotNull(xMLInputFactory84);
        org.junit.Assert.assertNotNull(serializerProvider89);
        org.junit.Assert.assertNull(xmlRootNameLookup92);
        org.junit.Assert.assertNotNull(objJsonSerializer93);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer95);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer96);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setNodeFactory(jsonNodeFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper2);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser9 = xmlFactory7.createJsonParser("");
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonParseException; message: Unexpected EOF in prolog? at [row,col {unknown-source}]: [1,0]");
        } catch (com.fasterxml.jackson.core.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature36 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str37 = pair25.findEnumValue((java.lang.Enum<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature>) feature36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertTrue("'" + feature36 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature36.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        javax.xml.stream.XMLInputFactory xMLInputFactory36 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper38 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory36, xMLOutputFactory37);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes39 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper38.writer(contextAttributes39);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper38.setSerializerFactory(serializerFactory41);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory43 = xmlMapper38.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory44 = xmlFactory43.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper46 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory44, xMLOutputFactory45);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper48 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory44, xMLOutputFactory47);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider49 = xmlMapper48.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper50 = xmlMapper48.copy();
        javax.xml.stream.XMLInputFactory xMLInputFactory51 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory52 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory51, xMLOutputFactory52);
        com.fasterxml.jackson.core.ObjectCodec objectCodec54 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory55 = xmlFactory53.setCodec(objectCodec54);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass56 = xmlFactory53.getFormatReadFeatureType();
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference57 = null;
        boolean boolean58 = xmlMapper50.canSerialize(featureClass56, throwableAtomicReference57);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = xmlMapper15.canSerialize(featureClass56, throwableAtomicReference59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectWriter40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(xmlFactory43);
        org.junit.Assert.assertNotNull(xMLInputFactory44);
        org.junit.Assert.assertNotNull(serializerProvider49);
        org.junit.Assert.assertNotNull(xmlMapper50);
        org.junit.Assert.assertNotNull(jsonFactory55);
        org.junit.Assert.assertNotNull(featureClass56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory2 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory4 = xmlFactory2.setCodec(objectCodec3);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass5 = xmlFactory2.getFormatReadFeatureType();
        java.lang.String str6 = xmlFactory2.getXMLTextElementName();
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper9.writer(contextAttributes10);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value12 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper9.setDefaultVisibility(value12);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray14 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper9.registerSubtypes(namedTypeArray14);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper9.writer(characterEscapes16);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper9.setDefaultVisibility(value18);
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(contextAttributes23);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory25 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.setSerializerFactory(serializerFactory25);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = xmlMapper22.getFactory();
        java.text.DateFormat dateFormat28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper22.writer(dateFormat28);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature30 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper22.configure(feature30, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = xmlMapper9.configure(feature30, false);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = xmlFactory2.configure(feature30, true);
        boolean boolean37 = xmlFactory2.canHandleBinaryNatively();
        org.junit.Assert.assertNotNull(jsonFactory4);
        org.junit.Assert.assertNotNull(featureClass5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(objectWriter11);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(namedTypeArray14);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(xmlFactory27);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertTrue("'" + feature30 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature30.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(xmlFactory36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule2 = jacksonXmlModule0.setSerializerModifier((com.fasterxml.jackson.databind.ser.BeanSerializerModifier) xmlBeanSerializerModifier1);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper3 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(jacksonXmlModule0);
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory6 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.core.ObjectCodec objectCodec7 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory8 = xmlFactory6.setCodec(objectCodec7);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass9 = xmlFactory6.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.deser.ValueInstantiator valueInstantiator10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.module.SimpleModule simpleModule11 = jacksonXmlModule0.addValueInstantiator(featureClass9, valueInstantiator10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot pass `null` as value instantiator");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(simpleModule2);
        org.junit.Assert.assertNotNull(jsonFactory8);
        org.junit.Assert.assertNotNull(featureClass9);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.annotation.JsonInclude.Value value7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = objectMapper6.setPropertyInclusion(value7);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = xmlMapper12.writer(contextAttributes13);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode15 = xmlMapper12.createObjectNode();
        // The following exception was thrown during execution in test generation
        try {
            objectMapper6.writeTree(jsonGenerator9, (com.fasterxml.jackson.databind.JsonNode) objectNode15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectWriter14);
        org.junit.Assert.assertNotNull(objectNode15);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper12.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = xmlMapper14.setDefaultUseWrapper(true);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule17 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier18 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule19 = jacksonXmlModule17.setSerializerModifier((com.fasterxml.jackson.databind.ser.BeanSerializerModifier) xmlBeanSerializerModifier18);
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(contextAttributes23);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory25 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.setSerializerFactory(serializerFactory25);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = xmlMapper22.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = xmlFactory27.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory28, xMLOutputFactory29);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory28, xMLOutputFactory31);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider33 = xmlMapper32.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = xmlMapper32.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = xmlMapper34.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = xmlMapper34.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig38 = objectMapper37.getSerializationConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription39 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray40 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList41 = new java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList41, beanPropertyWriterArray40);
        java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList43 = xmlBeanSerializerModifier18.changeProperties(serializationConfig38, beanDescription39, (java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList41);
        java.lang.Object obj44 = null;
        java.util.RandomAccess randomAccess45 = xmlMapper16.updateValue((java.util.RandomAccess) beanPropertyWriterList41, obj44);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(xmlMapper16);
        org.junit.Assert.assertNotNull(simpleModule19);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(xmlFactory27);
        org.junit.Assert.assertNotNull(xMLInputFactory28);
        org.junit.Assert.assertNotNull(serializerProvider33);
        org.junit.Assert.assertNotNull(xmlMapper34);
        org.junit.Assert.assertNotNull(xmlMapper36);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(serializationConfig38);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(beanPropertyWriterList43);
        org.junit.Assert.assertNotNull(randomAccess45);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        int int13 = feature10.getMask();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes7 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader8 = objectMapper6.reader(contextAttributes7);
        com.fasterxml.jackson.core.JsonGenerator.Feature feature9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = objectMapper6.isEnabled(feature9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectReader8);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.core.JsonParser jsonParser15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.node.ObjectNode objectNode16 = xmlMapper2.readTree(jsonParser15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.databind.introspect.Annotated annotated36 = null;
        com.fasterxml.jackson.annotation.JsonInclude.Include include37 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.JsonInclude.Include include38 = pair25.findSerializationInclusionForContent(annotated36, include37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        javax.xml.stream.XMLInputFactory xMLInputFactory2 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory3 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper4 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory2, xMLOutputFactory3);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes5 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter6 = xmlMapper4.writer(contextAttributes5);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper4.setSerializerFactory(serializerFactory7);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = xmlMapper4.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = xmlFactory9.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory10, xMLOutputFactory11);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory10, xMLOutputFactory13);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider15 = xmlMapper14.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider17 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup16);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup18 = xmlSerializerProvider17._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer19 = xmlSerializerProvider17.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty20 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer21 = serializerProvider15.handlePrimaryContextualization(objJsonSerializer19, beanProperty20);
        com.fasterxml.jackson.databind.util.NameTransformer nameTransformer22 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = objJsonSerializer19.unwrappingSerializer(nameTransformer22);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.SerializerProvider serializerProvider25 = xmlSerializerProvider1.setAttribute((java.lang.Object) objJsonSerializer23, (java.lang.Object) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter6);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(xmlFactory9);
        org.junit.Assert.assertNotNull(xMLInputFactory10);
        org.junit.Assert.assertNotNull(serializerProvider15);
        org.junit.Assert.assertNull(xmlRootNameLookup18);
        org.junit.Assert.assertNotNull(objJsonSerializer19);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer21);
        org.junit.Assert.assertNotNull(objJsonSerializer23);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        java.net.URL uRL7 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList9 = objectMapper6.readValue(uRL7, typeReference8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        xmlSerializerProvider1.flushCachedSerializers();
        org.junit.Assert.assertNull(xmlRootNameLookup2);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature36 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = xmlMapper15.enable(deserializationFeature36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver mixInResolver7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper2.setMixInResolver(mixInResolver7);
        int int9 = objectMapper8.mixInCount();
        com.fasterxml.jackson.databind.JavaType javaType10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = objectMapper8.canDeserialize(javaType10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null JavaType passed");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setDefaultVisibility(value18);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray20 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper15.registerSubtypes(namedTypeArray20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper15.writer(characterEscapes22);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.setDefaultVisibility(value24);
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(contextAttributes29);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper28.setSerializerFactory(serializerFactory31);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlMapper28.getFactory();
        java.text.DateFormat dateFormat34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper28.writer(dateFormat34);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature36 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper28.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper15.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper2.configure(feature36, false);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper43 = xmlMapper2.copy();
        byte[] byteArray49 = new byte[] { (byte) 100, (byte) 10, (byte) -1, (byte) 10, (byte) 10 };
        com.fasterxml.jackson.core.type.TypeReference typeReference52 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = xmlMapper43.readValue(byteArray49, (int) (short) 100, 1, typeReference52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: 100");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(namedTypeArray20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertTrue("'" + feature36 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature36.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(xmlMapper43);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[100, 10, -1, 10, 10]");
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.annotation.PropertyAccessor propertyAccessor18 = null;
        com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility visibility19 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = objectMapper17.setVisibility(propertyAccessor18, visibility19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper10.setDefaultPrettyPrinter(prettyPrinter11);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.setDefaultVisibility(value13);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode16 = xmlMapper10.readTree(" ");
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonParseException; message: Unexpected EOF in prolog? at [row,col {unknown-source}]: [1,1]");
        } catch (com.fasterxml.jackson.core.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper14);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper10.setDefaultPrettyPrinter(prettyPrinter11);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass13 = null;
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = objectMapper12.canSerialize(featureClass13, throwableAtomicReference14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper2.writer(characterEscapes9);
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.setConfig(deserializationConfig11);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory18, xMLOutputFactory19);
        java.lang.Class<?> wildcardClass21 = xmlMapper20.getClass();
        java.lang.Class[] classArray23 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray24 = (java.lang.Class<?>[]) classArray23;
        wildcardClassArray24[0] = wildcardClass21;
        xmlMapper15.registerSubtypes(wildcardClassArray24);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = xmlMapper15.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory29 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper30 = xmlMapper28.setSerializerFactory(serializerFactory29);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver31 = xmlMapper28.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector32, annotationIntrospector33);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector35 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair37 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector35, annotationIntrospector36);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair38 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector33, annotationIntrospector35);
        com.fasterxml.jackson.databind.introspect.Annotated annotated39 = null;
        java.lang.String str40 = pair38.findNamespace(annotated39);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector41 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector42 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair43 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector41, annotationIntrospector42);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector44 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair46 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector44, annotationIntrospector45);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair47 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector42, annotationIntrospector44);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper48 = xmlMapper28.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair38, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair47);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup49 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider50 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup49);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper51 = objectMapper48.setSerializerProvider((com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) xmlSerializerProvider50);
        com.fasterxml.jackson.databind.JavaType javaType52 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = xmlMapper2.convertValue((java.lang.Object) xmlSerializerProvider50, javaType52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(classArray23);
        org.junit.Assert.assertNotNull(wildcardClassArray24);
        org.junit.Assert.assertNotNull(xmlMapper28);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(subtypeResolver31);
        org.junit.Assert.assertNotNull(pair34);
        org.junit.Assert.assertNotNull(pair37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(pair43);
        org.junit.Assert.assertNotNull(pair46);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertNotNull(objectMapper51);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(contextAttributes11);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.setSerializerFactory(serializerFactory13);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = xmlMapper10.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = xmlFactory15.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory17);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = xmlMapper20.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = xmlMapper20.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = xmlMapper22.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper22.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory27 = null;
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider28 = xmlSerializerProvider1.createInstance(serializationConfig26, serializerFactory27);
        com.fasterxml.jackson.databind.BeanDescription beanDescription29 = null;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition beanPropertyDefinition30 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray32 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter beanPropertyWriter33 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray34 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] { beanPropertyWriter33 };
        int int35 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray32, beanPropertyWriterArray34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Iterable<com.fasterxml.jackson.databind.JsonNode> jsonNodeIterable36 = defaultSerializerProvider28.reportBadPropertyDefinition(beanDescription29, beanPropertyDefinition30, "com.fasterxml.jackson.dataformat.xml.JacksonXmlModule", (java.lang.Object[]) beanPropertyWriterArray34);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.exc.InvalidDefinitionException; message: Invalid definition for property N/A (of type N/A): com.fasterxml.jackson.dataformat.xml.JacksonXmlModule");
        } catch (com.fasterxml.jackson.databind.exc.InvalidDefinitionException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(xmlFactory15);
        org.junit.Assert.assertNotNull(xMLInputFactory16);
        org.junit.Assert.assertNotNull(serializerProvider21);
        org.junit.Assert.assertNotNull(xmlMapper22);
        org.junit.Assert.assertNotNull(xmlMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(defaultSerializerProvider28);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray32);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper2.setPropertyNamingStrategy(propertyNamingStrategy9);
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.setPropertyNamingStrategy(propertyNamingStrategy11);
        javax.xml.stream.XMLStreamWriter xMLStreamWriter13 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = xmlMapper16.writer(contextAttributes17);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory19 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper16.setSerializerFactory(serializerFactory19);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = xmlMapper16.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory22 = xmlFactory21.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory22, xMLOutputFactory23);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper26 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory22, xMLOutputFactory25);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider27 = xmlMapper26.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = xmlMapper26.copy();
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper2.writeValue(xMLStreamWriter13, (java.lang.Object) xmlMapper28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(xmlFactory21);
        org.junit.Assert.assertNotNull(xMLInputFactory22);
        org.junit.Assert.assertNotNull(serializerProvider27);
        org.junit.Assert.assertNotNull(xmlMapper28);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray9 = new com.fasterxml.jackson.core.JsonParser.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper2.disable(featureArray9);
        com.fasterxml.jackson.databind.MapperFeature mapperFeature11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper2.configure(mapperFeature11, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(featureArray9);
        org.junit.Assert.assertNotNull(objectMapper10);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        java.io.InputStream inputStream19 = null;
        com.fasterxml.jackson.databind.JavaType javaType20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception21 = xmlMapper15.readValue(inputStream19, javaType20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        java.lang.Class<?> wildcardClass3 = xmlSerializerProvider1.getSerializationView();
        com.fasterxml.jackson.databind.JavaType javaType4 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findKeySerializer(javaType4, beanProperty5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNull(wildcardClass3);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setInputDecorator(inputDecorator9);
        javax.xml.stream.XMLStreamReader xMLStreamReader11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser fromXmlParser12 = xmlFactory7.createParser(xMLStreamReader11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        java.io.InputStream inputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode14 = objectMapper12.readTree(inputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature18 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = objectMapper17.writer(serializationFeature18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        java.util.Date date8 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory13 = xmlFactory11.setCodec(objectCodec12);
        java.io.DataOutput dataOutput14 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding15 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = xmlFactory11.createGenerator(dataOutput14, jsonEncoding15);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey(date8, jsonGenerator16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(jsonFactory13);
        org.junit.Assert.assertNotNull(jsonGenerator16);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule2 = jacksonXmlModule0.setSerializerModifier((com.fasterxml.jackson.databind.ser.BeanSerializerModifier) xmlBeanSerializerModifier1);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig3 = null;
        com.fasterxml.jackson.databind.type.MapType mapType4 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription5 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider7 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = xmlSerializerProvider9._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = xmlSerializerProvider9.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty12 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer13 = xmlSerializerProvider7.handleSecondaryContextualization(objJsonSerializer11, beanProperty12);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer14 = xmlBeanSerializerModifier1.modifyMapSerializer(serializationConfig3, mapType4, beanDescription5, objJsonSerializer11);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule15 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier16 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule17 = jacksonXmlModule15.setSerializerModifier((com.fasterxml.jackson.databind.ser.BeanSerializerModifier) xmlBeanSerializerModifier16);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig18 = null;
        com.fasterxml.jackson.databind.type.MapType mapType19 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription20 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup21 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider22 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup21);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup23 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider24 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup23);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup25 = xmlSerializerProvider24._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer26 = xmlSerializerProvider24.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty27 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer28 = xmlSerializerProvider22.handleSecondaryContextualization(objJsonSerializer26, beanProperty27);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer29 = xmlBeanSerializerModifier16.modifyMapSerializer(serializationConfig18, mapType19, beanDescription20, objJsonSerializer26);
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes33 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper32.writer(contextAttributes33);
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper37 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory35, xMLOutputFactory36);
        java.lang.Class<?> wildcardClass38 = xmlMapper37.getClass();
        java.lang.Class[] classArray40 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray41 = (java.lang.Class<?>[]) classArray40;
        wildcardClassArray41[0] = wildcardClass38;
        xmlMapper32.registerSubtypes(wildcardClassArray41);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper45 = xmlMapper32.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory46 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper47 = xmlMapper45.setSerializerFactory(serializerFactory46);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver48 = xmlMapper45.getSubtypeResolver();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig49 = xmlMapper45.getSerializationConfig();
        com.fasterxml.jackson.databind.type.CollectionType collectionType50 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription51 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup52 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider53 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup52);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup54 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider55 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup54);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup56 = xmlSerializerProvider55._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = xmlSerializerProvider55.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = xmlSerializerProvider53.handleSecondaryContextualization(objJsonSerializer57, beanProperty58);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer60 = xmlBeanSerializerModifier16.modifyCollectionSerializer(serializationConfig49, collectionType50, beanDescription51, (com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer59);
        com.fasterxml.jackson.databind.type.ArrayType arrayType61 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription62 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory63 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory64 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper65 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory63, xMLOutputFactory64);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes66 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter67 = xmlMapper65.writer(contextAttributes66);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory68 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper69 = xmlMapper65.setSerializerFactory(serializerFactory68);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory70 = xmlMapper65.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory71 = xmlFactory70.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory72 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper73 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory71, xMLOutputFactory72);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory74 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper75 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory71, xMLOutputFactory74);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider76 = xmlMapper75.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup77 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider78 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup77);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup79 = xmlSerializerProvider78._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer80 = xmlSerializerProvider78.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty81 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer82 = serializerProvider76.handlePrimaryContextualization(objJsonSerializer80, beanProperty81);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer83 = xmlBeanSerializerModifier1.modifyArraySerializer(serializationConfig49, arrayType61, beanDescription62, objJsonSerializer80);
        org.junit.Assert.assertNotNull(simpleModule2);
        org.junit.Assert.assertNull(xmlRootNameLookup10);
        org.junit.Assert.assertNotNull(objJsonSerializer11);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer13);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer14);
        org.junit.Assert.assertNotNull(simpleModule17);
        org.junit.Assert.assertNull(xmlRootNameLookup25);
        org.junit.Assert.assertNotNull(objJsonSerializer26);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer28);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer29);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(classArray40);
        org.junit.Assert.assertNotNull(wildcardClassArray41);
        org.junit.Assert.assertNotNull(xmlMapper45);
        org.junit.Assert.assertNotNull(objectMapper47);
        org.junit.Assert.assertNotNull(subtypeResolver48);
        org.junit.Assert.assertNotNull(serializationConfig49);
        org.junit.Assert.assertNull(xmlRootNameLookup56);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer60);
        org.junit.Assert.assertNotNull(objectWriter67);
        org.junit.Assert.assertNotNull(objectMapper69);
        org.junit.Assert.assertNotNull(xmlFactory70);
        org.junit.Assert.assertNotNull(xMLInputFactory71);
        org.junit.Assert.assertNotNull(serializerProvider76);
        org.junit.Assert.assertNull(xmlRootNameLookup79);
        org.junit.Assert.assertNotNull(objJsonSerializer80);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer82);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer83);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.JavaType javaType7 = null;
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper8 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper6.acceptJsonFormatVisitor(javaType7, jsonFormatVisitorWrapper8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type must be provided");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper10.setDefaultPrettyPrinter(prettyPrinter11);
        com.fasterxml.jackson.core.JsonParser jsonParser13 = null;
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor15 = objectMapper12.readValues(jsonParser13, featureClass14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unrecognized Type: [null]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper10.setDefaultPrettyPrinter(prettyPrinter11);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.setDefaultVisibility(value13);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader16 = objectMapper14.reader(deserializationFeature15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper14);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        java.lang.Class<?> wildcardClass3 = xmlSerializerProvider1.getSerializationView();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass4 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty5 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer6 = xmlSerializerProvider1.findPrimaryPropertySerializer(featureClass4, beanProperty5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNull(wildcardClass3);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup9 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider10 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup9);
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes15 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter16 = xmlMapper14.writer(contextAttributes15);
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory17, xMLOutputFactory18);
        java.lang.Class<?> wildcardClass20 = xmlMapper19.getClass();
        java.lang.Class[] classArray22 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray23 = (java.lang.Class<?>[]) classArray22;
        wildcardClassArray23[0] = wildcardClass20;
        xmlMapper14.registerSubtypes(wildcardClassArray23);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException27 = xmlSerializerProvider10.mappingException("", (java.lang.Object[]) wildcardClassArray23);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.reportMappingProblem("hi!", (java.lang.Object[]) wildcardClassArray23);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(objectWriter16);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(classArray22);
        org.junit.Assert.assertNotNull(wildcardClassArray23);
        org.junit.Assert.assertNotNull(jsonMappingException27);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory3, xMLOutputFactory4);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass6 = xmlFactory5.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.getUnknownTypeSerializer(featureClass6);
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.ObjectCodec objectCodec11 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory12 = xmlFactory10.setCodec(objectCodec11);
        java.io.DataOutput dataOutput13 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding14 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator15 = xmlFactory10.createGenerator(dataOutput13, jsonEncoding14);
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes19 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter20 = xmlMapper18.writer(contextAttributes19);
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21, xMLOutputFactory22);
        java.lang.Class<?> wildcardClass24 = xmlMapper23.getClass();
        java.lang.Class[] classArray26 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray27 = (java.lang.Class<?>[]) classArray26;
        wildcardClassArray27[0] = wildcardClass24;
        xmlMapper18.registerSubtypes(wildcardClassArray27);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = xmlMapper18.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory32 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper33 = xmlMapper31.setSerializerFactory(serializerFactory32);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver34 = xmlMapper31.getSubtypeResolver();
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator15, (java.lang.Object) subtypeResolver34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(featureClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(jsonFactory12);
        org.junit.Assert.assertNotNull(jsonGenerator15);
        org.junit.Assert.assertNotNull(objectWriter20);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(classArray26);
        org.junit.Assert.assertNotNull(wildcardClassArray27);
        org.junit.Assert.assertNotNull(xmlMapper31);
        org.junit.Assert.assertNotNull(objectMapper33);
        org.junit.Assert.assertNotNull(subtypeResolver34);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory3, xMLOutputFactory4);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass6 = xmlFactory5.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.getUnknownTypeSerializer(featureClass6);
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider8 = xmlSerializerProvider1.copy();
        com.fasterxml.jackson.databind.JavaType javaType9 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer11 = defaultSerializerProvider8.findKeySerializer(javaType9, beanProperty10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(featureClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(defaultSerializerProvider8);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver mixInResolver7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper2.setMixInResolver(mixInResolver7);
        com.fasterxml.jackson.core.JsonGenerator.Feature feature9 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = objectMapper8.isEnabled(feature9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper8);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.databind.introspect.AnnotatedMethod annotatedMethod36 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean37 = pair34.hasAnyGetterAnnotation(annotatedMethod36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = xmlSerializerProvider15._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer17 = xmlSerializerProvider15.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty18 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer19 = serializerProvider13.handlePrimaryContextualization(objJsonSerializer17, beanProperty18);
        com.fasterxml.jackson.databind.JavaType javaType20 = null;
        com.fasterxml.jackson.databind.BeanProperty beanProperty21 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = serializerProvider13.findNullKeySerializer(javaType20, beanProperty21);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNull(xmlRootNameLookup16);
        org.junit.Assert.assertNotNull(objJsonSerializer17);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer19);
        org.junit.Assert.assertNotNull(objJsonSerializer22);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper2);
        javax.xml.stream.XMLStreamReader xMLStreamReader10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser fromXmlParser11 = xmlFactory9.createParser(xMLStreamReader10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup36 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider37 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup36);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper35.setSerializerProvider((com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) xmlSerializerProvider37);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter39 = objectMapper38.writer();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectWriter39);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup36 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider37 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup36);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper35.setSerializerProvider((com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) xmlSerializerProvider37);
        java.io.DataInput dataInput39 = null;
        com.fasterxml.jackson.databind.JavaType javaType40 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.node.ContainerNode<com.fasterxml.jackson.databind.node.ObjectNode> objectNodeContainerNode41 = objectMapper38.readValue(dataInput39, javaType40);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: InputData source not (yet?) support for this format (XML)");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectMapper38);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector36 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair38 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector36, annotationIntrospector37);
        com.fasterxml.jackson.databind.introspect.Annotated annotated39 = null;
        java.lang.Boolean boolean40 = pair38.isOutputAsText(annotated39);
        com.fasterxml.jackson.databind.introspect.Annotated annotated41 = null;
        java.lang.Boolean boolean42 = pair38.isOutputAsAttribute(annotated41);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector43 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair45 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector43, annotationIntrospector44);
        com.fasterxml.jackson.databind.introspect.Annotated annotated46 = null;
        java.lang.Boolean boolean47 = pair45.isOutputAsText(annotated46);
        com.fasterxml.jackson.databind.introspect.Annotated annotated48 = null;
        java.lang.Boolean boolean49 = pair45.isOutputAsAttribute(annotated48);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector50 = com.fasterxml.jackson.databind.AnnotationIntrospector.pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair38, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair45);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper51 = objectMapper35.setAnnotationIntrospector(annotationIntrospector50);
        com.fasterxml.jackson.core.JsonFactory jsonFactory52 = objectMapper35.getJsonFactory();
        com.fasterxml.jackson.core.JsonParser.Feature[] featureArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper54 = objectMapper35.disable(featureArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(pair38);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(pair45);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(annotationIntrospector50);
        org.junit.Assert.assertNotNull(objectMapper51);
        org.junit.Assert.assertNotNull(jsonFactory52);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.databind.JavaType javaType11 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader12 = xmlMapper10.readerFor(javaType11);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass13 = null;
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper14 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper10.acceptJsonFormatVisitor(featureClass13, jsonFormatVisitorWrapper14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unrecognized Type: [null]");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectReader12);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setDefaultVisibility(value18);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray20 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper15.registerSubtypes(namedTypeArray20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper15.writer(characterEscapes22);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.setDefaultVisibility(value24);
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(contextAttributes29);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper28.setSerializerFactory(serializerFactory31);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlMapper28.getFactory();
        java.text.DateFormat dateFormat34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper28.writer(dateFormat34);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature36 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper28.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper15.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper2.configure(feature36, false);
        com.fasterxml.jackson.databind.InjectableValues injectableValues43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper2.setInjectableValues(injectableValues43);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper46 = xmlMapper2.enable(featureArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(namedTypeArray20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertTrue("'" + feature36 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature36.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectMapper44);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        com.fasterxml.jackson.core.Version version8 = xmlFactory7.version();
        java.io.Writer writer9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonGenerator jsonGenerator10 = xmlFactory7.createJsonGenerator(writer9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null Writer is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(version8);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(contextAttributes11);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.setSerializerFactory(serializerFactory13);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = xmlMapper10.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = xmlFactory15.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory17);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = xmlMapper20.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = xmlMapper20.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = xmlMapper22.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper22.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory27 = null;
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider28 = xmlSerializerProvider1.createInstance(serializationConfig26, serializerFactory27);
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(contextAttributes32);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory34 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper31.setSerializerFactory(serializerFactory34);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = xmlMapper31.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory37 = xmlFactory36.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory37, xMLOutputFactory38);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter40 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = xmlMapper39.setDefaultPrettyPrinter(prettyPrinter40);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup42 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider43 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup42);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup44 = xmlSerializerProvider43._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory45, xMLOutputFactory46);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass48 = xmlFactory47.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer49 = xmlSerializerProvider43.getUnknownTypeSerializer(featureClass48);
        boolean boolean50 = objectMapper41.canSerialize(featureClass48);
        com.fasterxml.jackson.databind.BeanProperty beanProperty51 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer52 = xmlSerializerProvider1.findKeySerializer(featureClass48, beanProperty51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(xmlFactory15);
        org.junit.Assert.assertNotNull(xMLInputFactory16);
        org.junit.Assert.assertNotNull(serializerProvider21);
        org.junit.Assert.assertNotNull(xmlMapper22);
        org.junit.Assert.assertNotNull(xmlMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(defaultSerializerProvider28);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(xmlFactory36);
        org.junit.Assert.assertNotNull(xMLInputFactory37);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNull(xmlRootNameLookup44);
        org.junit.Assert.assertNotNull(featureClass48);
        org.junit.Assert.assertNotNull(objJsonSerializer49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setInputDecorator(inputDecorator9);
        boolean boolean11 = xmlFactory7.canParseAsync();
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory14 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.core.ObjectCodec objectCodec15 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory16 = xmlFactory14.setCodec(objectCodec15);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass17 = xmlFactory14.getFormatReadFeatureType();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature18 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean19 = xmlFactory14.isEnabled(feature18);
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory22 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.core.ObjectCodec objectCodec23 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory24 = xmlFactory22.setCodec(objectCodec23);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass25 = xmlFactory22.getFormatReadFeatureType();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature26 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean27 = xmlFactory22.isEnabled(feature26);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory29 = xmlFactory14.configure(feature26, true);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = xmlFactory7.disable(feature26);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(jsonFactory16);
        org.junit.Assert.assertNotNull(featureClass17);
        org.junit.Assert.assertTrue("'" + feature18 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature18.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(jsonFactory24);
        org.junit.Assert.assertNotNull(featureClass25);
        org.junit.Assert.assertTrue("'" + feature26 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature26.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(xmlFactory29);
        org.junit.Assert.assertNotNull(xmlFactory30);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory3, xMLOutputFactory4);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass6 = xmlFactory5.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.getUnknownTypeSerializer(featureClass6);
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider8 = xmlSerializerProvider1.copy();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider9 = defaultSerializerProvider8.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(featureClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(defaultSerializerProvider8);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(contextAttributes7);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper6.setSerializerFactory(serializerFactory9);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = xmlMapper6.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = xmlFactory11.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory12, xMLOutputFactory13);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory12, xMLOutputFactory15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = xmlMapper16.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = xmlMapper16.copy();
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory23 = xmlFactory21.setCodec(objectCodec22);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass24 = xmlFactory21.getFormatReadFeatureType();
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference25 = null;
        boolean boolean26 = xmlMapper18.canSerialize(featureClass24, throwableAtomicReference25);
        com.fasterxml.jackson.databind.BeanProperty beanProperty27 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer28 = xmlSerializerProvider1.findKeySerializer(featureClass24, beanProperty27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(xmlFactory11);
        org.junit.Assert.assertNotNull(xMLInputFactory12);
        org.junit.Assert.assertNotNull(serializerProvider17);
        org.junit.Assert.assertNotNull(xmlMapper18);
        org.junit.Assert.assertNotNull(jsonFactory23);
        org.junit.Assert.assertNotNull(featureClass24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setInputDecorator(inputDecorator9);
        boolean boolean11 = xmlFactory7.canParseAsync();
        com.fasterxml.jackson.core.JsonFactory jsonFactory13 = xmlFactory7.setRootValueSeparator("XML");
        com.fasterxml.jackson.core.Version version14 = xmlFactory7.version();
        java.io.DataInput dataInput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser16 = xmlFactory7.createParser(dataInput15);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: InputData source not (yet?) support for this format (XML)");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(jsonFactory13);
        org.junit.Assert.assertNotNull(version14);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        com.fasterxml.jackson.dataformat.xml.deser.XmlStringDeserializer xmlStringDeserializer0 = new com.fasterxml.jackson.dataformat.xml.deser.XmlStringDeserializer();
        com.fasterxml.jackson.core.JsonParser jsonParser1 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory2 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory3 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper4 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory2, xMLOutputFactory3);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes5 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter6 = xmlMapper4.writer(contextAttributes5);
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory7, xMLOutputFactory8);
        java.lang.Class<?> wildcardClass10 = xmlMapper9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass10;
        xmlMapper4.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = xmlMapper4.copy();
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext18 = xmlMapper4.getDeserializationContext();
        com.fasterxml.jackson.databind.jsontype.TypeDeserializer typeDeserializer19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = xmlStringDeserializer0.deserializeWithType(jsonParser1, deserializationContext18, typeDeserializer19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter6);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(xmlMapper17);
        org.junit.Assert.assertNotNull(deserializationContext18);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        java.lang.Class<?> wildcardClass3 = xmlSerializerProvider1.getSerializationView();
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(contextAttributes7);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper6.setDefaultVisibility(value9);
        com.fasterxml.jackson.annotation.JsonInclude.Value value11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper10.setPropertyInclusion(value11);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setSerializerFactory(serializerFactory18);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = xmlMapper15.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = xmlFactory20.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper23.setDefaultPrettyPrinter(prettyPrinter24);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = xmlSerializerProvider27._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory29, xMLOutputFactory30);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass32 = xmlFactory31.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer33 = xmlSerializerProvider27.getUnknownTypeSerializer(featureClass32);
        boolean boolean34 = objectMapper25.canSerialize(featureClass32);
        boolean boolean35 = objectMapper10.canSerialize(featureClass32);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.annotation.JsonFormat.Value value36 = xmlSerializerProvider1.getDefaultPropertyFormat(featureClass32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNull(wildcardClass3);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(xmlFactory20);
        org.junit.Assert.assertNotNull(xMLInputFactory21);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNull(xmlRootNameLookup28);
        org.junit.Assert.assertNotNull(featureClass32);
        org.junit.Assert.assertNotNull(objJsonSerializer33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper3 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes4 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter5 = xmlMapper3.writer(contextAttributes4);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory6 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper7 = xmlMapper3.setSerializerFactory(serializerFactory6);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory8 = xmlMapper3.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = xmlFactory8.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory12);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider14 = xmlMapper13.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper13.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = xmlMapper15.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = xmlMapper15.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig19 = objectMapper18.getSerializationConfig();
        com.fasterxml.jackson.databind.introspect.AnnotatedClass annotatedClass20 = null;
        com.fasterxml.jackson.databind.JavaType javaType21 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder<?> wildcardTypeResolverBuilder22 = jacksonXmlAnnotationIntrospector0.findTypeResolver((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig19, annotatedClass20, javaType21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter5);
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNotNull(xmlFactory8);
        org.junit.Assert.assertNotNull(xMLInputFactory9);
        org.junit.Assert.assertNotNull(serializerProvider14);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(xmlMapper17);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(serializationConfig19);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory2 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory4 = xmlFactory2.setCodec(objectCodec3);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass5 = xmlFactory2.getFormatWriteFeatureType();
        boolean boolean6 = xmlFactory2.requiresPropertyOrdering();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory2);
        com.fasterxml.jackson.databind.JavaType javaType8 = null;
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper9 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper7.acceptJsonFormatVisitor(javaType8, jsonFormatVisitorWrapper9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: type must be provided");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jsonFactory4);
        org.junit.Assert.assertNotNull(featureClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(contextAttributes7);
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        java.lang.Class<?> wildcardClass12 = xmlMapper11.getClass();
        java.lang.Class[] classArray14 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        wildcardClassArray15[0] = wildcardClass12;
        xmlMapper6.registerSubtypes(wildcardClassArray15);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = xmlMapper6.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory20 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper19.setSerializerFactory(serializerFactory20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider1.serializerInstance(annotated3, (java.lang.Object) serializerFactory20);
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider23 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider1);
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory28 = xmlFactory26.setCodec(objectCodec27);
        java.io.DataOutput dataOutput29 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding30 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator31 = xmlFactory26.createGenerator(dataOutput29, jsonEncoding30);
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes35 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = xmlMapper34.writer(contextAttributes35);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value37 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper34.setDefaultVisibility(value37);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes39 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader40 = objectMapper38.reader(contextAttributes39);
        com.fasterxml.jackson.databind.JavaType javaType41 = null;
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider23.serializeValue(jsonGenerator31, (java.lang.Object) objectReader40, javaType41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(xmlMapper19);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(jsonFactory28);
        org.junit.Assert.assertNotNull(jsonGenerator31);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectReader40);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature11 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = xmlMapper10.isEnabled(deserializationFeature11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter6 = xmlMapper2.writerFor(javaType5);
        com.fasterxml.jackson.core.JsonParser jsonParser7 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.ObjectCodec objectCodec11 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory12 = xmlFactory10.setCodec(objectCodec11);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass13 = xmlFactory10.getFormatReadFeatureType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature14 = xmlMapper2.readValue(jsonParser7, featureClass13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectWriter6);
        org.junit.Assert.assertNotNull(jsonFactory12);
        org.junit.Assert.assertNotNull(featureClass13);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory2 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory4 = xmlFactory2.setCodec(objectCodec3);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature> featureClass5 = xmlFactory2.getFormatWriteFeatureType();
        boolean boolean6 = xmlFactory2.requiresPropertyOrdering();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xmlFactory2);
        byte[] byteArray8 = new byte[] {};
        com.fasterxml.jackson.core.type.TypeReference typeReference9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper7.readValue(byteArray8, typeReference9);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonParseException; message: Unexpected EOF in prolog? at [row,col {unknown-source}]: [1,0]");
        } catch (com.fasterxml.jackson.core.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jsonFactory4);
        org.junit.Assert.assertNotNull(featureClass5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper2);
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper2.addHandler(deserializationProblemHandler10);
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper2.disable(feature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectMapper11);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.BeanDescription beanDescription2 = null;
        com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition beanPropertyDefinition3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper7.writer(contextAttributes8);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper7.setDefaultVisibility(value10);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray12 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper7.registerSubtypes(namedTypeArray12);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonDeserializer<java.lang.String> strJsonDeserializer14 = xmlSerializerProvider1.reportBadPropertyDefinition(beanDescription2, beanPropertyDefinition3, "xmlInfo", (java.lang.Object[]) namedTypeArray12);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.exc.InvalidDefinitionException; message: Invalid definition for property N/A (of type N/A): xmlInfo");
        } catch (com.fasterxml.jackson.databind.exc.InvalidDefinitionException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(namedTypeArray12);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper10.setDefaultPrettyPrinter(prettyPrinter11);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory13 = objectMapper12.getNodeFactory();
        java.io.File file14 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.XmlTypeResolverBuilder xmlTypeResolverBuilder16 = objectMapper12.readValue(file14, typeReference15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(jsonNodeFactory13);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector0 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair2 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector0, annotationIntrospector1);
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        java.lang.Boolean boolean4 = pair2.isOutputAsText(annotated3);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule5 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier6 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule7 = jacksonXmlModule5.setSerializerModifier((com.fasterxml.jackson.databind.ser.BeanSerializerModifier) xmlBeanSerializerModifier6);
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(contextAttributes11);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.setSerializerFactory(serializerFactory13);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = xmlMapper10.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = xmlFactory15.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory17);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = xmlMapper20.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = xmlMapper20.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = xmlMapper22.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper22.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.BeanDescription beanDescription27 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray28 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList29 = new java.util.ArrayList<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList29, beanPropertyWriterArray28);
        java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter> beanPropertyWriterList31 = xmlBeanSerializerModifier6.changeProperties(serializationConfig26, beanDescription27, (java.util.List<com.fasterxml.jackson.databind.ser.BeanPropertyWriter>) beanPropertyWriterList29);
        com.fasterxml.jackson.databind.introspect.Annotated annotated32 = null;
        com.fasterxml.jackson.databind.JavaType javaType33 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType34 = pair2.refineSerializationType((com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig26, annotated32, javaType33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pair2);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(simpleModule7);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(xmlFactory15);
        org.junit.Assert.assertNotNull(xMLInputFactory16);
        org.junit.Assert.assertNotNull(serializerProvider21);
        org.junit.Assert.assertNotNull(xmlMapper22);
        org.junit.Assert.assertNotNull(xmlMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(beanPropertyWriterList31);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        boolean boolean8 = xmlFactory7.canUseCharArrays();
        boolean boolean9 = xmlFactory7.requiresPropertyOrdering();
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = xmlMapper12.writer(contextAttributes13);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory15 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper12.setSerializerFactory(serializerFactory15);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = xmlMapper12.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = xmlFactory17.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory18, xMLOutputFactory19);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory18, xMLOutputFactory21);
        xmlFactory7.setXMLInputFactory(xMLInputFactory18);
        boolean boolean24 = xmlFactory7.canHandleBinaryNatively();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objectWriter14);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(xmlFactory17);
        org.junit.Assert.assertNotNull(xMLInputFactory18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector36 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair38 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector36, annotationIntrospector37);
        com.fasterxml.jackson.databind.introspect.Annotated annotated39 = null;
        java.lang.Boolean boolean40 = pair38.isOutputAsText(annotated39);
        com.fasterxml.jackson.databind.introspect.Annotated annotated41 = null;
        java.lang.Boolean boolean42 = pair38.isOutputAsAttribute(annotated41);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector43 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair45 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector43, annotationIntrospector44);
        com.fasterxml.jackson.databind.introspect.Annotated annotated46 = null;
        java.lang.Boolean boolean47 = pair45.isOutputAsText(annotated46);
        com.fasterxml.jackson.databind.introspect.Annotated annotated48 = null;
        java.lang.Boolean boolean49 = pair45.isOutputAsAttribute(annotated48);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector50 = com.fasterxml.jackson.databind.AnnotationIntrospector.pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair38, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair45);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper51 = objectMapper35.setAnnotationIntrospector(annotationIntrospector50);
        com.fasterxml.jackson.core.JsonFactory jsonFactory52 = objectMapper35.getJsonFactory();
        java.io.Reader reader53 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper56 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes57 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter58 = xmlMapper56.writer(contextAttributes57);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value59 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper60 = xmlMapper56.setDefaultVisibility(value59);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray61 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper56.registerSubtypes(namedTypeArray61);
        javax.xml.stream.XMLInputFactory xMLInputFactory63 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory64 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper65 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory63, xMLOutputFactory64);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes66 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter67 = xmlMapper65.writer(contextAttributes66);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value68 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper69 = xmlMapper65.setDefaultVisibility(value68);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper65.registerSubtypes(namedTypeArray70);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes72 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter73 = xmlMapper65.writer(characterEscapes72);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value74 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper75 = xmlMapper65.setDefaultVisibility(value74);
        javax.xml.stream.XMLInputFactory xMLInputFactory76 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory77 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory78 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory76, xMLOutputFactory77);
        com.fasterxml.jackson.core.ObjectCodec objectCodec79 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory80 = xmlFactory78.setCodec(objectCodec79);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass81 = xmlFactory78.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectReader objectReader82 = xmlMapper65.reader(featureClass81);
        com.fasterxml.jackson.databind.jsonschema.JsonSchema jsonSchema83 = xmlMapper56.generateJsonSchema(featureClass81);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature84 = objectMapper35.readValue(reader53, featureClass81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(pair38);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(pair45);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(annotationIntrospector50);
        org.junit.Assert.assertNotNull(objectMapper51);
        org.junit.Assert.assertNotNull(jsonFactory52);
        org.junit.Assert.assertNotNull(objectWriter58);
        org.junit.Assert.assertNotNull(objectMapper60);
        org.junit.Assert.assertNotNull(namedTypeArray61);
        org.junit.Assert.assertNotNull(objectWriter67);
        org.junit.Assert.assertNotNull(objectMapper69);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(objectWriter73);
        org.junit.Assert.assertNotNull(objectMapper75);
        org.junit.Assert.assertNotNull(jsonFactory80);
        org.junit.Assert.assertNotNull(featureClass81);
        org.junit.Assert.assertNotNull(objectReader82);
        org.junit.Assert.assertNotNull(jsonSchema83);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setDefaultVisibility(value18);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray20 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper15.registerSubtypes(namedTypeArray20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper15.writer(characterEscapes22);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.setDefaultVisibility(value24);
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(contextAttributes29);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper28.setSerializerFactory(serializerFactory31);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlMapper28.getFactory();
        java.text.DateFormat dateFormat34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper28.writer(dateFormat34);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature36 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper28.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper15.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper2.configure(feature36, false);
        java.net.URL uRL43 = null;
        com.fasterxml.jackson.databind.JavaType javaType44 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.node.ObjectNode objectNode45 = xmlMapper2.readValue(uRL43, javaType44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(namedTypeArray20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertTrue("'" + feature36 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature36.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider5 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup4);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup6 = xmlSerializerProvider5._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider5.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer8 = xmlSerializerProvider5.getDefaultNullValueSerializer();
        xmlSerializerProvider1.setNullKeySerializer(objJsonSerializer8);
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory14 = xmlFactory12.setCodec(objectCodec13);
        java.io.DataOutput dataOutput15 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding16 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator17 = xmlFactory12.createGenerator(dataOutput15, jsonEncoding16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = jsonGenerator17.setHighestNonEscapedChar(0);
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(contextAttributes23);
        com.fasterxml.jackson.databind.JavaType javaType25 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter26 = xmlMapper22.writerFor(javaType25);
        com.fasterxml.jackson.databind.JavaType javaType27 = null;
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule28 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule30 = jacksonXmlModule28.setSerializerModifier((com.fasterxml.jackson.databind.ser.BeanSerializerModifier) xmlBeanSerializerModifier29);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig31 = null;
        com.fasterxml.jackson.databind.type.MapType mapType32 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription33 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup34 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider35 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup34);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup36 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider37 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup36);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup38 = xmlSerializerProvider37._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = xmlSerializerProvider37.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty40 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer41 = xmlSerializerProvider35.handleSecondaryContextualization(objJsonSerializer39, beanProperty40);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer42 = xmlBeanSerializerModifier29.modifyMapSerializer(serializationConfig31, mapType32, beanDescription33, objJsonSerializer39);
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper45 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory43, xMLOutputFactory44);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes46 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter47 = xmlMapper45.writer(contextAttributes46);
        javax.xml.stream.XMLInputFactory xMLInputFactory48 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory49 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper50 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory48, xMLOutputFactory49);
        java.lang.Class<?> wildcardClass51 = xmlMapper50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass51;
        xmlMapper45.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper58 = xmlMapper45.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory59 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper60 = xmlMapper58.setSerializerFactory(serializerFactory59);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver61 = xmlMapper58.getSubtypeResolver();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig62 = xmlMapper58.getSerializationConfig();
        com.fasterxml.jackson.databind.type.CollectionType collectionType63 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription64 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup65 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider66 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup65);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup67 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider68 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup67);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup69 = xmlSerializerProvider68._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer70 = xmlSerializerProvider68.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty71 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer72 = xmlSerializerProvider66.handleSecondaryContextualization(objJsonSerializer70, beanProperty71);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer73 = xmlBeanSerializerModifier29.modifyCollectionSerializer(serializationConfig62, collectionType63, beanDescription64, (com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer72);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.serializeValue(jsonGenerator19, (java.lang.Object) javaType25, javaType27, (com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNull(xmlRootNameLookup6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(objJsonSerializer8);
        org.junit.Assert.assertNotNull(jsonFactory14);
        org.junit.Assert.assertNotNull(jsonGenerator17);
        org.junit.Assert.assertNotNull(jsonGenerator19);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(objectWriter26);
        org.junit.Assert.assertNotNull(simpleModule30);
        org.junit.Assert.assertNull(xmlRootNameLookup38);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer41);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer42);
        org.junit.Assert.assertNotNull(objectWriter47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(xmlMapper58);
        org.junit.Assert.assertNotNull(objectMapper60);
        org.junit.Assert.assertNotNull(subtypeResolver61);
        org.junit.Assert.assertNotNull(serializationConfig62);
        org.junit.Assert.assertNull(xmlRootNameLookup69);
        org.junit.Assert.assertNotNull(objJsonSerializer70);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer72);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer73);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver mixInResolver7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper2.setMixInResolver(mixInResolver7);
        com.fasterxml.jackson.annotation.JsonSetter.Value value9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper2.setDefaultSetterInfo(value9);
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper2.writer(filterProvider11);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectWriter12);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        com.fasterxml.jackson.core.Version version8 = xmlFactory7.version();
        com.fasterxml.jackson.core.Version version9 = xmlFactory7.version();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(version8);
        org.junit.Assert.assertNotNull(version9);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.JavaType javaType2 = null;
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule3 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier4 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule5 = jacksonXmlModule3.setSerializerModifier((com.fasterxml.jackson.databind.ser.BeanSerializerModifier) xmlBeanSerializerModifier4);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig6 = null;
        com.fasterxml.jackson.databind.type.MapType mapType7 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription8 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup9 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider10 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = xmlSerializerProvider12._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider12.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = xmlSerializerProvider10.handleSecondaryContextualization(objJsonSerializer14, beanProperty15);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = xmlBeanSerializerModifier4.modifyMapSerializer(serializationConfig6, mapType7, beanDescription8, objJsonSerializer14);
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(contextAttributes21);
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory23, xMLOutputFactory24);
        java.lang.Class<?> wildcardClass26 = xmlMapper25.getClass();
        java.lang.Class[] classArray28 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray29 = (java.lang.Class<?>[]) classArray28;
        wildcardClassArray29[0] = wildcardClass26;
        xmlMapper20.registerSubtypes(wildcardClassArray29);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper33 = xmlMapper20.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory34 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper33.setSerializerFactory(serializerFactory34);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver36 = xmlMapper33.getSubtypeResolver();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig37 = xmlMapper33.getSerializationConfig();
        com.fasterxml.jackson.databind.type.CollectionType collectionType38 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription39 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup40 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider41 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup40);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup42 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider43 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup42);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup44 = xmlSerializerProvider43._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer45 = xmlSerializerProvider43.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty46 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer47 = xmlSerializerProvider41.handleSecondaryContextualization(objJsonSerializer45, beanProperty46);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer48 = xmlBeanSerializerModifier4.modifyCollectionSerializer(serializationConfig37, collectionType38, beanDescription39, (com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object>) wildcardJsonSerializer47);
        // The following exception was thrown during execution in test generation
        try {
            javax.xml.namespace.QName qName49 = xmlRootNameLookup0.findRootName(javaType2, (com.fasterxml.jackson.databind.cfg.MapperConfig<com.fasterxml.jackson.databind.SerializationConfig>) serializationConfig37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(simpleModule5);
        org.junit.Assert.assertNull(xmlRootNameLookup13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer17);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(classArray28);
        org.junit.Assert.assertNotNull(wildcardClassArray29);
        org.junit.Assert.assertNotNull(xmlMapper33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(subtypeResolver36);
        org.junit.Assert.assertNotNull(serializationConfig37);
        org.junit.Assert.assertNull(xmlRootNameLookup44);
        org.junit.Assert.assertNotNull(objJsonSerializer45);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer47);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer48);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper3 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes4 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter5 = xmlMapper3.writer(contextAttributes4);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory6 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper7 = xmlMapper3.setSerializerFactory(serializerFactory6);
        int int8 = xmlMapper3.mixInCount();
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper11.writer(contextAttributes12);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper11.setSerializerFactory(serializerFactory14);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = xmlMapper11.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = xmlFactory16.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory17, xMLOutputFactory18);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory17, xMLOutputFactory20);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider22 = xmlMapper21.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = xmlMapper21.copy();
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory28 = xmlFactory26.setCodec(objectCodec27);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass29 = xmlFactory26.getFormatReadFeatureType();
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference30 = null;
        boolean boolean31 = xmlMapper23.canSerialize(featureClass29, throwableAtomicReference30);
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory32, xMLOutputFactory33);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass35 = xmlFactory34.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = xmlMapper3.addMixIn(featureClass29, featureClass35);
        com.fasterxml.jackson.databind.deser.ValueInstantiator valueInstantiator37 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.module.SimpleModule simpleModule38 = jacksonXmlModule0.addValueInstantiator(featureClass35, valueInstantiator37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Cannot pass `null` as value instantiator");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter5);
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(xmlFactory16);
        org.junit.Assert.assertNotNull(xMLInputFactory17);
        org.junit.Assert.assertNotNull(serializerProvider22);
        org.junit.Assert.assertNotNull(xmlMapper23);
        org.junit.Assert.assertNotNull(jsonFactory28);
        org.junit.Assert.assertNotNull(featureClass29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(featureClass35);
        org.junit.Assert.assertNotNull(objectMapper36);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setDefaultVisibility(value18);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray20 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper15.registerSubtypes(namedTypeArray20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper15.writer(characterEscapes22);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.setDefaultVisibility(value24);
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(contextAttributes29);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper28.setSerializerFactory(serializerFactory31);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlMapper28.getFactory();
        java.text.DateFormat dateFormat34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper28.writer(dateFormat34);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature36 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper28.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper15.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper2.configure(feature36, false);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper43 = xmlMapper2.copy();
        com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature44 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper43.disable(feature44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(namedTypeArray20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertTrue("'" + feature36 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature36.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(xmlMapper43);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes7 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader8 = objectMapper6.reader(contextAttributes7);
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper11.writer(contextAttributes12);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper11.setDefaultVisibility(value14);
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.ObjectCodec objectCodec19 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory20 = xmlFactory18.setCodec(objectCodec19);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass21 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectReader objectReader22 = objectMapper15.readerFor(featureClass21);
        com.fasterxml.jackson.databind.ObjectReader objectReader23 = objectMapper6.readerFor(featureClass21);
        com.fasterxml.jackson.annotation.JsonInclude.Include include24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = objectMapper6.setSerializationInclusion(include24);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectReader8);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(jsonFactory20);
        org.junit.Assert.assertNotNull(featureClass21);
        org.junit.Assert.assertNotNull(objectReader22);
        org.junit.Assert.assertNotNull(objectReader23);
        org.junit.Assert.assertNotNull(objectMapper25);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.databind.introspect.Annotated annotated36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj37 = pair25.findFilterId(annotated36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper11.disableDefaultTyping();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper12.findAndRegisterModules();
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader15 = objectMapper13.reader(deserializationFeature14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        boolean boolean8 = wildcardJsonSerializer7.isUnwrappingSerializer();
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory3, xMLOutputFactory4);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass6 = xmlFactory5.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.getUnknownTypeSerializer(featureClass6);
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider8 = xmlSerializerProvider1.copy();
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper11.writer(contextAttributes12);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper11.setDefaultVisibility(value14);
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.ObjectCodec objectCodec19 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory20 = xmlFactory18.setCodec(objectCodec19);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass21 = xmlFactory18.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectReader objectReader22 = objectMapper15.readerFor(featureClass21);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer23 = defaultSerializerProvider8.findValueSerializer(featureClass21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(featureClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(defaultSerializerProvider8);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(jsonFactory20);
        org.junit.Assert.assertNotNull(featureClass21);
        org.junit.Assert.assertNotNull(objectReader22);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setInputDecorator(inputDecorator9);
        boolean boolean11 = xmlFactory7.canParseAsync();
        com.fasterxml.jackson.core.JsonFactory jsonFactory13 = xmlFactory7.setRootValueSeparator("XML");
        com.fasterxml.jackson.core.Version version14 = xmlFactory7.version();
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(contextAttributes18);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory20 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper17.setSerializerFactory(serializerFactory20);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory22 = xmlMapper17.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = xmlFactory22.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory23, xMLOutputFactory24);
        xmlFactory7.setXMLInputFactory(xMLInputFactory23);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory23, xMLOutputFactory27);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(jsonFactory13);
        org.junit.Assert.assertNotNull(version14);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(xmlFactory22);
        org.junit.Assert.assertNotNull(xMLInputFactory23);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(contextAttributes7);
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        java.lang.Class<?> wildcardClass12 = xmlMapper11.getClass();
        java.lang.Class[] classArray14 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        wildcardClassArray15[0] = wildcardClass12;
        xmlMapper6.registerSubtypes(wildcardClassArray15);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = xmlMapper6.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory20 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper19.setSerializerFactory(serializerFactory20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider1.serializerInstance(annotated3, (java.lang.Object) serializerFactory20);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ser.FilterProvider filterProvider23 = xmlSerializerProvider1.getFilterProvider();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(xmlMapper19);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNull(objJsonSerializer22);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        boolean boolean8 = xmlFactory7.canUseCharArrays();
        boolean boolean9 = xmlFactory7.requiresPropertyOrdering();
        java.io.OutputStream outputStream10 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding11 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator12 = xmlFactory7.createGenerator(outputStream10, jsonEncoding11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null OutputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper0 = new com.fasterxml.jackson.dataformat.xml.XmlMapper();
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(contextAttributes11);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.setSerializerFactory(serializerFactory13);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = xmlMapper10.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = xmlFactory15.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory17);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = xmlMapper20.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = xmlMapper20.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = xmlMapper22.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper22.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory27 = null;
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider28 = xmlSerializerProvider1.createInstance(serializationConfig26, serializerFactory27);
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory34 = xmlFactory32.setCodec(objectCodec33);
        java.io.DataOutput dataOutput35 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding36 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator37 = xmlFactory32.createGenerator(dataOutput35, jsonEncoding36);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue((long) 100, jsonGenerator37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(xmlFactory15);
        org.junit.Assert.assertNotNull(xMLInputFactory16);
        org.junit.Assert.assertNotNull(serializerProvider21);
        org.junit.Assert.assertNotNull(xmlMapper22);
        org.junit.Assert.assertNotNull(xmlMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(defaultSerializerProvider28);
        org.junit.Assert.assertNotNull(jsonFactory34);
        org.junit.Assert.assertNotNull(jsonGenerator37);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.OutputDecorator outputDecorator9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setOutputDecorator(outputDecorator9);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper12.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = xmlMapper14.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper14.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig18 = objectMapper17.getSerializationConfig();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = objectMapper17.disableDefaultTyping();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(xmlMapper16);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(serializationConfig18);
        org.junit.Assert.assertNotNull(objectMapper19);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase xmlBeanSerializerBase0 = null;
        com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter objectIdWriter1 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory2 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory3 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper4 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory2, xMLOutputFactory3);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes5 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter6 = xmlMapper4.writer(contextAttributes5);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper4.setSerializerFactory(serializerFactory7);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = xmlMapper4.getFactory();
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext10 = xmlMapper4.getDeserializationContext();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer xmlBeanSerializer11 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer(xmlBeanSerializerBase0, objectIdWriter1, (java.lang.Object) xmlMapper4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter6);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(xmlFactory9);
        org.junit.Assert.assertNotNull(deserializationContext10);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode5 = xmlMapper2.createObjectNode();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.node.ObjectNode objectNode7 = xmlMapper2.createObjectNode();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectNode5);
        org.junit.Assert.assertNotNull(xmlMapper6);
        org.junit.Assert.assertNotNull(objectNode7);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule2 = jacksonXmlModule0.setSerializerModifier((com.fasterxml.jackson.databind.ser.BeanSerializerModifier) xmlBeanSerializerModifier1);
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory3, xMLOutputFactory4);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(contextAttributes6);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setSerializerFactory(serializerFactory8);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = xmlMapper5.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = xmlFactory10.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory11, xMLOutputFactory12);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory11, xMLOutputFactory14);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider16 = xmlMapper15.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = xmlMapper15.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = xmlMapper17.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper17.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig21 = objectMapper20.getSerializationConfig();
        com.fasterxml.jackson.databind.type.CollectionType collectionType22 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription23 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider25 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup24);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = xmlSerializerProvider25._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer27 = xmlSerializerProvider25.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider29 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup28);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup30 = xmlSerializerProvider29._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer31 = xmlSerializerProvider29.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer32 = xmlSerializerProvider29.getDefaultNullValueSerializer();
        xmlSerializerProvider25.setNullKeySerializer(objJsonSerializer32);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer34 = xmlBeanSerializerModifier1.modifyCollectionSerializer(serializationConfig21, collectionType22, beanDescription23, objJsonSerializer32);
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper37 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes38 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter39 = xmlMapper37.writer(contextAttributes38);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory40 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = xmlMapper37.setSerializerFactory(serializerFactory40);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory42 = xmlMapper37.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = xmlFactory42.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper45 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory43, xMLOutputFactory44);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper47 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory43, xMLOutputFactory46);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider48 = xmlMapper47.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper49 = xmlMapper47.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper51 = xmlMapper49.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper52 = xmlMapper49.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig53 = objectMapper52.getSerializationConfig();
        com.fasterxml.jackson.databind.type.MapType mapType54 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription55 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup56 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider57 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup56);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup58 = xmlSerializerProvider57._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer59 = xmlSerializerProvider57.getDefaultNullKeySerializer();
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup60 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider61 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup60);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup62 = xmlSerializerProvider61._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer63 = xmlSerializerProvider61.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer64 = xmlSerializerProvider61.getDefaultNullValueSerializer();
        xmlSerializerProvider57.setNullKeySerializer(objJsonSerializer64);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer66 = xmlBeanSerializerModifier1.modifyMapSerializer(serializationConfig53, mapType54, beanDescription55, objJsonSerializer64);
        org.junit.Assert.assertNotNull(simpleModule2);
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(xmlFactory10);
        org.junit.Assert.assertNotNull(xMLInputFactory11);
        org.junit.Assert.assertNotNull(serializerProvider16);
        org.junit.Assert.assertNotNull(xmlMapper17);
        org.junit.Assert.assertNotNull(xmlMapper19);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(serializationConfig21);
        org.junit.Assert.assertNull(xmlRootNameLookup26);
        org.junit.Assert.assertNotNull(objJsonSerializer27);
        org.junit.Assert.assertNull(xmlRootNameLookup30);
        org.junit.Assert.assertNotNull(objJsonSerializer31);
        org.junit.Assert.assertNotNull(objJsonSerializer32);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer34);
        org.junit.Assert.assertNotNull(objectWriter39);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(xmlFactory42);
        org.junit.Assert.assertNotNull(xMLInputFactory43);
        org.junit.Assert.assertNotNull(serializerProvider48);
        org.junit.Assert.assertNotNull(xmlMapper49);
        org.junit.Assert.assertNotNull(xmlMapper51);
        org.junit.Assert.assertNotNull(objectMapper52);
        org.junit.Assert.assertNotNull(serializationConfig53);
        org.junit.Assert.assertNull(xmlRootNameLookup58);
        org.junit.Assert.assertNotNull(objJsonSerializer59);
        org.junit.Assert.assertNull(xmlRootNameLookup62);
        org.junit.Assert.assertNotNull(objJsonSerializer63);
        org.junit.Assert.assertNotNull(objJsonSerializer64);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer66);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext7 = xmlMapper2.getDeserializationContext();
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy8 = xmlMapper2.getPropertyNamingStrategy();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature9 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper2.writer(serializationFeature9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(deserializationContext7);
        org.junit.Assert.assertNull(propertyNamingStrategy8);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory3, xMLOutputFactory4);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass6 = xmlFactory5.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.getUnknownTypeSerializer(featureClass6);
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.core.ObjectCodec objectCodec12 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory13 = xmlFactory11.setCodec(objectCodec12);
        java.io.DataOutput dataOutput14 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding15 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator16 = xmlFactory11.createGenerator(dataOutput14, jsonEncoding15);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator18 = jsonGenerator16.setHighestNonEscapedChar(0);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((long) (short) 0, jsonGenerator16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(featureClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(jsonFactory13);
        org.junit.Assert.assertNotNull(jsonGenerator16);
        org.junit.Assert.assertNotNull(jsonGenerator18);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        com.fasterxml.jackson.core.io.IOContext iOContext0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory3, xMLOutputFactory4);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(contextAttributes6);
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        java.lang.Class<?> wildcardClass11 = xmlMapper10.getClass();
        java.lang.Class[] classArray13 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        wildcardClassArray14[0] = wildcardClass11;
        xmlMapper5.registerSubtypes(wildcardClassArray14);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = xmlMapper5.copy();
        javax.xml.stream.XMLStreamWriter xMLStreamWriter19 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator toXmlGenerator20 = new com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator(iOContext0, 0, 0, (com.fasterxml.jackson.core.ObjectCodec) xmlMapper5, xMLStreamWriter19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(xmlMapper18);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup36 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider37 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup36);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper35.setSerializerProvider((com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) xmlSerializerProvider37);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup39 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider40 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup39);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup41 = xmlSerializerProvider40._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer42 = xmlSerializerProvider40.getDefaultNullKeySerializer();
        xmlSerializerProvider40.flushCachedSerializers();
        javax.xml.stream.XMLInputFactory xMLInputFactory44 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper46 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory44, xMLOutputFactory45);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes47 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter48 = xmlMapper46.writer(contextAttributes47);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value49 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper50 = xmlMapper46.setDefaultVisibility(value49);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray51 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper46.registerSubtypes(namedTypeArray51);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory53 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper46);
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler54 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper46.addHandler(deserializationProblemHandler54);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes56 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader57 = xmlMapper46.reader(contextAttributes56);
        javax.xml.stream.XMLInputFactory xMLInputFactory58 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory59 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory60 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory58, xMLOutputFactory59);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass61 = xmlFactory60.getFormatReadFeatureType();
        boolean boolean62 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass61);
        com.fasterxml.jackson.databind.JavaType javaType63 = xmlMapper46.constructType((java.lang.reflect.Type) featureClass61);
        com.fasterxml.jackson.databind.BeanProperty beanProperty64 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer65 = xmlSerializerProvider40.findNullKeySerializer(javaType63, beanProperty64);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper66 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper38.acceptJsonFormatVisitor(javaType63, jsonFormatVisitorWrapper66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNull(xmlRootNameLookup41);
        org.junit.Assert.assertNotNull(objJsonSerializer42);
        org.junit.Assert.assertNotNull(objectWriter48);
        org.junit.Assert.assertNotNull(objectMapper50);
        org.junit.Assert.assertNotNull(namedTypeArray51);
        org.junit.Assert.assertNotNull(objectMapper55);
        org.junit.Assert.assertNotNull(objectReader57);
        org.junit.Assert.assertNotNull(featureClass61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(javaType63);
        org.junit.Assert.assertNotNull(objJsonSerializer65);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        java.util.Locale locale10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper2.setLocale(locale10);
        com.fasterxml.jackson.databind.ObjectReader objectReader12 = xmlMapper2.reader();
        java.io.Reader reader13 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup14 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider15 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup14);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup16 = xmlSerializerProvider15._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory17, xMLOutputFactory18);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory19.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer21 = xmlSerializerProvider15.getUnknownTypeSerializer(featureClass20);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature22 = xmlMapper2.readValue(reader13, featureClass20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectReader12);
        org.junit.Assert.assertNull(xmlRootNameLookup16);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objJsonSerializer21);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        javax.xml.stream.XMLInputFactory xMLInputFactory2 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory3 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory4 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory2, xMLOutputFactory3);
        com.fasterxml.jackson.core.ObjectCodec objectCodec5 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory6 = xmlFactory4.setCodec(objectCodec5);
        java.io.DataOutput dataOutput7 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding8 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator9 = xmlFactory4.createGenerator(dataOutput7, jsonEncoding8);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator11 = jsonGenerator9.setHighestNonEscapedChar(0);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1._serializeXmlNull(jsonGenerator9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(jsonFactory6);
        org.junit.Assert.assertNotNull(jsonGenerator9);
        org.junit.Assert.assertNotNull(jsonGenerator11);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup36 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider37 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup36);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper35.setSerializerProvider((com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) xmlSerializerProvider37);
        com.fasterxml.jackson.databind.InjectableValues injectableValues39 = objectMapper35.getInjectableValues();
        com.fasterxml.jackson.core.JsonFactory.Feature feature40 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean41 = objectMapper35.isEnabled(feature40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNull(injectableValues39);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.databind.introspect.AnnotatedMember annotatedMember36 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean37 = pair34.hasRequiredMarker(annotatedMember36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setCharacterEscapes(characterEscapes9);
        boolean boolean11 = xmlFactory7.requiresCustomCodec();
        boolean boolean12 = xmlFactory7.requiresPropertyOrdering();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory2 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory4 = xmlFactory2.setCodec(objectCodec3);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass5 = xmlFactory2.getFormatReadFeatureType();
        java.lang.String str6 = xmlFactory2.getXMLTextElementName();
        javax.xml.stream.XMLInputFactory xMLInputFactory7 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper9 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory7, xMLOutputFactory8);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes10 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter11 = xmlMapper9.writer(contextAttributes10);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value12 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper9.setDefaultVisibility(value12);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray14 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper9.registerSubtypes(namedTypeArray14);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper9.writer(characterEscapes16);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper9.setDefaultVisibility(value18);
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(contextAttributes23);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory25 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper22.setSerializerFactory(serializerFactory25);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = xmlMapper22.getFactory();
        java.text.DateFormat dateFormat28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper22.writer(dateFormat28);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature30 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper22.configure(feature30, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper34 = xmlMapper9.configure(feature30, false);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory36 = xmlFactory2.configure(feature30, true);
        boolean boolean37 = xmlFactory36.canParseAsync();
        org.junit.Assert.assertNotNull(jsonFactory4);
        org.junit.Assert.assertNotNull(featureClass5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(objectWriter11);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(namedTypeArray14);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(xmlFactory27);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertTrue("'" + feature30 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature30.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(objectMapper34);
        org.junit.Assert.assertNotNull(xmlFactory36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory3, xMLOutputFactory4);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass6 = xmlFactory5.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.getUnknownTypeSerializer(featureClass6);
        com.fasterxml.jackson.databind.introspect.Annotated annotated8 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory9, xMLOutputFactory10);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass12 = xmlFactory11.getFormatReadFeatureType();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = xmlFactory11.getXMLOutputFactory();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider1.serializerInstance(annotated8, (java.lang.Object) xMLOutputFactory13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(featureClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(featureClass12);
        org.junit.Assert.assertNotNull(xMLOutputFactory13);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        com.fasterxml.jackson.annotation.JsonInclude.Include include13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper12.setSerializationInclusion(include13);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature15 = null;
        com.fasterxml.jackson.databind.DeserializationFeature[] deserializationFeatureArray16 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = objectMapper14.enable(deserializationFeature15, deserializationFeatureArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper14);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper2);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper2.reader(deserializationFeature10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter6 = xmlMapper2.writerFor(javaType5);
        javax.xml.stream.XMLStreamReader xMLStreamReader7 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(contextAttributes11);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.setDefaultVisibility(value13);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes15 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader16 = objectMapper14.reader(contextAttributes15);
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper19.writer(contextAttributes20);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value22 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = xmlMapper19.setDefaultVisibility(value22);
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory28 = xmlFactory26.setCodec(objectCodec27);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass29 = xmlFactory26.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectReader objectReader30 = objectMapper23.readerFor(featureClass29);
        com.fasterxml.jackson.databind.ObjectReader objectReader31 = objectMapper14.readerFor(featureClass29);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature32 = xmlMapper2.readValue(xMLStreamReader7, featureClass29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectWriter6);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(objectReader16);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(jsonFactory28);
        org.junit.Assert.assertNotNull(featureClass29);
        org.junit.Assert.assertNotNull(objectReader30);
        org.junit.Assert.assertNotNull(objectReader31);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.introspect.Annotated annotated3 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory4 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory5 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory4, xMLOutputFactory5);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes7 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter8 = xmlMapper6.writer(contextAttributes7);
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        java.lang.Class<?> wildcardClass12 = xmlMapper11.getClass();
        java.lang.Class[] classArray14 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        wildcardClassArray15[0] = wildcardClass12;
        xmlMapper6.registerSubtypes(wildcardClassArray15);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = xmlMapper6.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory20 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper19.setSerializerFactory(serializerFactory20);
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer22 = xmlSerializerProvider1.serializerInstance(annotated3, (java.lang.Object) serializerFactory20);
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider23 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlSerializerProvider1);
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.core.ObjectCodec objectCodec27 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory28 = xmlFactory26.setCodec(objectCodec27);
        java.io.DataOutput dataOutput29 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding30 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator31 = xmlFactory26.createGenerator(dataOutput29, jsonEncoding30);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator33 = jsonGenerator31.setHighestNonEscapedChar(0);
        javax.xml.stream.XMLInputFactory xMLInputFactory34 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory34, xMLOutputFactory35);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes37 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter38 = xmlMapper36.writer(contextAttributes37);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper36.setSerializerFactory(serializerFactory39);
        com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver mixInResolver41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper36.setMixInResolver(mixInResolver41);
        com.fasterxml.jackson.annotation.JsonInclude.Include include43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = objectMapper42.setDefaultPropertyInclusion(include43);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup45 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider46 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup45);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup47 = xmlSerializerProvider46._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer48 = xmlSerializerProvider46.getDefaultNullKeySerializer();
        xmlSerializerProvider46.flushCachedSerializers();
        javax.xml.stream.XMLInputFactory xMLInputFactory50 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory51 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper52 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory50, xMLOutputFactory51);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes53 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter54 = xmlMapper52.writer(contextAttributes53);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value55 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper56 = xmlMapper52.setDefaultVisibility(value55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray57 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper52.registerSubtypes(namedTypeArray57);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory59 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper52);
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler60 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper61 = xmlMapper52.addHandler(deserializationProblemHandler60);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes62 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader63 = xmlMapper52.reader(contextAttributes62);
        javax.xml.stream.XMLInputFactory xMLInputFactory64 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory65 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory66 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory64, xMLOutputFactory65);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass67 = xmlFactory66.getFormatReadFeatureType();
        boolean boolean68 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass67);
        com.fasterxml.jackson.databind.JavaType javaType69 = xmlMapper52.constructType((java.lang.reflect.Type) featureClass67);
        com.fasterxml.jackson.databind.BeanProperty beanProperty70 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer71 = xmlSerializerProvider46.findNullKeySerializer(javaType69, beanProperty70);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider23.serializeValue(jsonGenerator31, (java.lang.Object) objectMapper42, javaType69);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.exc.InvalidDefinitionException; message: Incompatible types: declared root type ([simple type, class com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature]) vs `com.fasterxml.jackson.dataformat.xml.XmlMapper`");
        } catch (com.fasterxml.jackson.databind.exc.InvalidDefinitionException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(objectWriter8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(xmlMapper19);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNull(objJsonSerializer22);
        org.junit.Assert.assertNotNull(jsonFactory28);
        org.junit.Assert.assertNotNull(jsonGenerator31);
        org.junit.Assert.assertNotNull(jsonGenerator33);
        org.junit.Assert.assertNotNull(objectWriter38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNull(xmlRootNameLookup47);
        org.junit.Assert.assertNotNull(objJsonSerializer48);
        org.junit.Assert.assertNotNull(objectWriter54);
        org.junit.Assert.assertNotNull(objectMapper56);
        org.junit.Assert.assertNotNull(namedTypeArray57);
        org.junit.Assert.assertNotNull(objectMapper61);
        org.junit.Assert.assertNotNull(objectReader63);
        org.junit.Assert.assertNotNull(featureClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(javaType69);
        org.junit.Assert.assertNotNull(objJsonSerializer71);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper12.enableDefaultTyping(defaultTyping13);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature15 = null;
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature16 = null;
        com.fasterxml.jackson.databind.DeserializationFeature[] deserializationFeatureArray17 = new com.fasterxml.jackson.databind.DeserializationFeature[] { deserializationFeature16 };
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = objectMapper14.enable(deserializationFeature15, deserializationFeatureArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(deserializationFeatureArray17);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper11.disableDefaultTyping();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper12.findAndRegisterModules();
        java.net.URL uRL14 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper17 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes18 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter19 = xmlMapper17.writer(contextAttributes18);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory20 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper17.setSerializerFactory(serializerFactory20);
        int int22 = xmlMapper17.mixInCount();
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes26 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter27 = xmlMapper25.writer(contextAttributes26);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory28 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = xmlMapper25.setSerializerFactory(serializerFactory28);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = xmlMapper25.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = xmlFactory30.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper33 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory31, xMLOutputFactory32);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper35 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory31, xMLOutputFactory34);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider36 = xmlMapper35.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper37 = xmlMapper35.copy();
        javax.xml.stream.XMLInputFactory xMLInputFactory38 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory39 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory38, xMLOutputFactory39);
        com.fasterxml.jackson.core.ObjectCodec objectCodec41 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory42 = xmlFactory40.setCodec(objectCodec41);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass43 = xmlFactory40.getFormatReadFeatureType();
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference44 = null;
        boolean boolean45 = xmlMapper37.canSerialize(featureClass43, throwableAtomicReference44);
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory46, xMLOutputFactory47);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass49 = xmlFactory48.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper50 = xmlMapper17.addMixIn(featureClass43, featureClass49);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature51 = objectMapper12.readValue(uRL14, featureClass49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectWriter19);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(objectWriter27);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(xmlFactory30);
        org.junit.Assert.assertNotNull(xMLInputFactory31);
        org.junit.Assert.assertNotNull(serializerProvider36);
        org.junit.Assert.assertNotNull(xmlMapper37);
        org.junit.Assert.assertNotNull(jsonFactory42);
        org.junit.Assert.assertNotNull(featureClass43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(featureClass49);
        org.junit.Assert.assertNotNull(objectMapper50);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext7 = xmlMapper2.getDeserializationContext();
        com.fasterxml.jackson.databind.InjectableValues injectableValues8 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader9 = xmlMapper2.reader(injectableValues8);
        com.fasterxml.jackson.core.TreeNode treeNode10 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory11, xMLOutputFactory12);
        com.fasterxml.jackson.core.ObjectCodec objectCodec14 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory15 = xmlFactory13.setCodec(objectCodec14);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass16 = xmlFactory13.getFormatReadFeatureType();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature17 = xmlMapper2.treeToValue(treeNode10, featureClass16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(deserializationContext7);
        org.junit.Assert.assertNotNull(objectReader9);
        org.junit.Assert.assertNotNull(jsonFactory15);
        org.junit.Assert.assertNotNull(featureClass16);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory3, xMLOutputFactory4);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass6 = xmlFactory5.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.getUnknownTypeSerializer(featureClass6);
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider8 = xmlSerializerProvider1.copy();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.type.TypeFactory typeFactory9 = xmlSerializerProvider1.getTypeFactory();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(featureClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNotNull(defaultSerializerProvider8);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode5 = xmlMapper2.createObjectNode();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector7 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair9 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector7, annotationIntrospector8);
        com.fasterxml.jackson.databind.introspect.Annotated annotated10 = null;
        java.lang.Boolean boolean11 = pair9.isOutputAsText(annotated10);
        com.fasterxml.jackson.databind.introspect.Annotated annotated12 = null;
        java.lang.Boolean boolean13 = pair9.isOutputAsAttribute(annotated12);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector14 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair16 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector14, annotationIntrospector15);
        com.fasterxml.jackson.databind.introspect.Annotated annotated17 = null;
        java.lang.Boolean boolean18 = pair16.isOutputAsText(annotated17);
        com.fasterxml.jackson.databind.introspect.Annotated annotated19 = null;
        java.lang.Boolean boolean20 = pair16.isOutputAsAttribute(annotated19);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector21 = com.fasterxml.jackson.databind.AnnotationIntrospector.pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair9, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair16);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper6.setAnnotationIntrospector(annotationIntrospector21);
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory23, xMLOutputFactory24);
        com.fasterxml.jackson.core.ObjectCodec objectCodec26 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory27 = xmlFactory25.setCodec(objectCodec26);
        java.io.DataOutput dataOutput28 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding29 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator30 = xmlFactory25.createGenerator(dataOutput28, jsonEncoding29);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator32 = jsonGenerator30.setHighestNonEscapedChar(0);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator34 = jsonGenerator32.setHighestNonEscapedChar((int) (short) 0);
        javax.xml.stream.XMLInputFactory xMLInputFactory35 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory36 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper37 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory35, xMLOutputFactory36);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes38 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter39 = xmlMapper37.writer(contextAttributes38);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode40 = xmlMapper37.createObjectNode();
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper6.writeTree(jsonGenerator32, (com.fasterxml.jackson.databind.JsonNode) objectNode40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectNode5);
        org.junit.Assert.assertNotNull(xmlMapper6);
        org.junit.Assert.assertNotNull(pair9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(pair16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(annotationIntrospector21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(jsonFactory27);
        org.junit.Assert.assertNotNull(jsonGenerator30);
        org.junit.Assert.assertNotNull(jsonGenerator32);
        org.junit.Assert.assertNotNull(jsonGenerator34);
        org.junit.Assert.assertNotNull(objectWriter39);
        org.junit.Assert.assertNotNull(objectNode40);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8);
        byte[] byteArray18 = new byte[] { (byte) 1, (byte) 0, (byte) 100, (byte) 1, (byte) 0, (byte) -1 };
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper21 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper21.writer(contextAttributes22);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper21.setDefaultVisibility(value24);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray26 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper21.registerSubtypes(namedTypeArray26);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper21);
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler29 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper30 = xmlMapper21.addHandler(deserializationProblemHandler29);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes31 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader32 = xmlMapper21.reader(contextAttributes31);
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory33, xMLOutputFactory34);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass36 = xmlFactory35.getFormatReadFeatureType();
        boolean boolean37 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass36);
        com.fasterxml.jackson.databind.JavaType javaType38 = xmlMapper21.constructType((java.lang.reflect.Type) featureClass36);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.Module module39 = xmlMapper11.readValue(byteArray18, javaType38);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonParseException; message: Invalid UTF-8 start byte 0xff (at char #6, byte #-1)");
        } catch (com.fasterxml.jackson.core.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[1, 0, 100, 1, 0, -1]");
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(namedTypeArray26);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(objectReader32);
        org.junit.Assert.assertNotNull(featureClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(javaType38);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator9 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory10 = xmlFactory7.setInputDecorator(inputDecorator9);
        boolean boolean11 = xmlFactory7.canParseAsync();
        com.fasterxml.jackson.core.io.InputDecorator inputDecorator12 = xmlFactory7.getInputDecorator();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(jsonFactory10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(inputDecorator12);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper2);
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper2.addHandler(deserializationProblemHandler10);
        com.fasterxml.jackson.core.JsonParser jsonParser12 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setSerializerFactory(serializerFactory18);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = xmlMapper15.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = xmlFactory20.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21);
        com.fasterxml.jackson.core.JsonParser jsonParser26 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = xmlSerializerProvider28._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider28.getDefaultNullKeySerializer();
        xmlSerializerProvider28.flushCachedSerializers();
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes35 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = xmlMapper34.writer(contextAttributes35);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value37 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper34.setDefaultVisibility(value37);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray39 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper34.registerSubtypes(namedTypeArray39);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper34);
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper34.addHandler(deserializationProblemHandler42);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes44 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader45 = xmlMapper34.reader(contextAttributes44);
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory46, xMLOutputFactory47);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass49 = xmlFactory48.getFormatReadFeatureType();
        boolean boolean50 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass49);
        com.fasterxml.jackson.databind.JavaType javaType51 = xmlMapper34.constructType((java.lang.reflect.Type) featureClass49);
        com.fasterxml.jackson.databind.BeanProperty beanProperty52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = xmlSerializerProvider28.findNullKeySerializer(javaType51, beanProperty52);
        com.fasterxml.jackson.databind.MappingIterator<java.io.Closeable> closeableItor54 = xmlMapper25.readValues(jsonParser26, javaType51);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.MapperFeature[] mapperFeatureArray55 = objectMapper11.readValue(jsonParser12, (com.fasterxml.jackson.core.type.ResolvedType) javaType51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(xmlFactory20);
        org.junit.Assert.assertNotNull(xMLInputFactory21);
        org.junit.Assert.assertNull(xmlRootNameLookup29);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(namedTypeArray39);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectReader45);
        org.junit.Assert.assertNotNull(featureClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(javaType51);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(closeableItor54);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper2.writer(characterEscapes9);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.setDefaultVisibility(value11);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.core.ObjectCodec objectCodec16 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory17 = xmlFactory15.setCodec(objectCodec16);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass18 = xmlFactory15.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectReader objectReader19 = xmlMapper2.reader(featureClass18);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature20 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper2.configure(deserializationFeature20, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(jsonFactory17);
        org.junit.Assert.assertNotNull(featureClass18);
        org.junit.Assert.assertNotNull(objectReader19);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        java.util.Locale locale10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper2.setLocale(locale10);
        java.io.InputStream inputStream12 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Collection<java.lang.Object> objCollection14 = objectMapper11.readValue(inputStream12, typeReference13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper11);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(contextAttributes11);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.setSerializerFactory(serializerFactory13);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = xmlMapper10.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = xmlFactory15.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory17);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = xmlMapper20.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = xmlMapper20.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = xmlMapper22.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper22.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory27 = null;
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider28 = xmlSerializerProvider1.createInstance(serializationConfig26, serializerFactory27);
        java.util.Date date29 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.core.ObjectCodec objectCodec33 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory34 = xmlFactory32.setCodec(objectCodec33);
        java.io.DataOutput dataOutput35 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding36 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator37 = xmlFactory32.createGenerator(dataOutput35, jsonEncoding36);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator39 = jsonGenerator37.setHighestNonEscapedChar(0);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateValue(date29, jsonGenerator39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(xmlFactory15);
        org.junit.Assert.assertNotNull(xMLInputFactory16);
        org.junit.Assert.assertNotNull(serializerProvider21);
        org.junit.Assert.assertNotNull(xmlMapper22);
        org.junit.Assert.assertNotNull(xmlMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(defaultSerializerProvider28);
        org.junit.Assert.assertNotNull(jsonFactory34);
        org.junit.Assert.assertNotNull(jsonGenerator37);
        org.junit.Assert.assertNotNull(jsonGenerator39);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.databind.introspect.Annotated annotated36 = null;
        java.lang.Boolean boolean37 = pair25.isOutputAsAttribute(annotated36);
        com.fasterxml.jackson.databind.introspect.AnnotatedMember annotatedMember38 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.AnnotationIntrospector.ReferenceProperty referenceProperty39 = pair25.findReferenceType(annotatedMember38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = objectMapper12.enableDefaultTyping(defaultTyping13);
        java.net.URL uRL15 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference16 = null;
        // The following exception was thrown during execution in test generation
        try {
            javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = objectMapper14.readValue(uRL15, typeReference16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectMapper14);
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory3, xMLOutputFactory4);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass6 = xmlFactory5.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.getUnknownTypeSerializer(featureClass6);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig8 = xmlSerializerProvider1.getConfig();
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.core.ObjectCodec objectCodec13 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory14 = xmlFactory12.setCodec(objectCodec13);
        java.io.DataOutput dataOutput15 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding16 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator17 = xmlFactory12.createGenerator(dataOutput15, jsonEncoding16);
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator19 = jsonGenerator17.setHighestNonEscapedChar(0);
        // The following exception was thrown during execution in test generation
        try {
            xmlSerializerProvider1.defaultSerializeDateKey((long) 56319, jsonGenerator19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(featureClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(serializationConfig8);
        org.junit.Assert.assertNotNull(jsonFactory14);
        org.junit.Assert.assertNotNull(jsonGenerator17);
        org.junit.Assert.assertNotNull(jsonGenerator19);
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper2.findAndRegisterModules();
        java.util.Set<java.lang.Object> objSet11 = xmlMapper2.getRegisteredModuleIds();
        com.fasterxml.jackson.databind.node.ObjectNode objectNode12 = xmlMapper2.createObjectNode();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objSet11);
        org.junit.Assert.assertNotNull(objectNode12);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper2.setPropertyNamingStrategy(propertyNamingStrategy9);
        java.io.DataInput dataInput11 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes15 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter16 = xmlMapper14.writer(contextAttributes15);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory17 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = xmlMapper14.setSerializerFactory(serializerFactory17);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = xmlMapper14.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = xmlFactory19.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20);
        com.fasterxml.jackson.core.JsonParser jsonParser25 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = xmlSerializerProvider27._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider27.getDefaultNullKeySerializer();
        xmlSerializerProvider27.flushCachedSerializers();
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper33 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper33.writer(contextAttributes34);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value36 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = xmlMapper33.setDefaultVisibility(value36);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray38 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper33.registerSubtypes(namedTypeArray38);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper33);
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper33.addHandler(deserializationProblemHandler41);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes43 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader44 = xmlMapper33.reader(contextAttributes43);
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory45, xMLOutputFactory46);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass48 = xmlFactory47.getFormatReadFeatureType();
        boolean boolean49 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass48);
        com.fasterxml.jackson.databind.JavaType javaType50 = xmlMapper33.constructType((java.lang.reflect.Type) featureClass48);
        com.fasterxml.jackson.databind.BeanProperty beanProperty51 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer52 = xmlSerializerProvider27.findNullKeySerializer(javaType50, beanProperty51);
        com.fasterxml.jackson.databind.MappingIterator<java.io.Closeable> closeableItor53 = xmlMapper24.readValues(jsonParser25, javaType50);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType54 = xmlMapper2.readValue(dataInput11, javaType50);
            org.junit.Assert.fail("Expected exception of type java.lang.UnsupportedOperationException; message: InputData source not (yet?) support for this format (XML)");
        } catch (java.lang.UnsupportedOperationException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectWriter16);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(xmlFactory19);
        org.junit.Assert.assertNotNull(xMLInputFactory20);
        org.junit.Assert.assertNull(xmlRootNameLookup28);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(namedTypeArray38);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectReader44);
        org.junit.Assert.assertNotNull(featureClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(javaType50);
        org.junit.Assert.assertNotNull(objJsonSerializer52);
        org.junit.Assert.assertNotNull(closeableItor53);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup36 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider37 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup36);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper35.setSerializerProvider((com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) xmlSerializerProvider37);
        java.io.InputStream inputStream39 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference40 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.introspect.VisibilityChecker<?> wildcardVisibilityChecker41 = objectMapper35.readValue(inputStream39, typeReference40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectMapper38);
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setNodeFactory(jsonNodeFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper2);
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(contextAttributes11);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.setSerializerFactory(serializerFactory13);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = xmlMapper10.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = xmlFactory15.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory17);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter19 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper18.setDefaultPrettyPrinter(prettyPrinter19);
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes24 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter25 = xmlMapper23.writer(contextAttributes24);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory26 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper23.setSerializerFactory(serializerFactory26);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory28 = xmlMapper23.getFactory();
        java.text.DateFormat dateFormat29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper23.writer(dateFormat29);
        java.util.Locale locale31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper23.setLocale(locale31);
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper35 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes36 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter37 = xmlMapper35.writer(contextAttributes36);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory38 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper39 = xmlMapper35.setSerializerFactory(serializerFactory38);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = xmlMapper35.getFactory();
        java.text.DateFormat dateFormat41 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter42 = xmlMapper35.writer(dateFormat41);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature43 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper35.configure(feature43, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper46 = xmlMapper23.disable(feature43);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper48 = xmlMapper18.configure(feature43, true);
        com.fasterxml.jackson.core.JsonGenerator.Feature[] featureArray49 = new com.fasterxml.jackson.core.JsonGenerator.Feature[] {};
        com.fasterxml.jackson.databind.ObjectMapper objectMapper50 = objectMapper48.disable(featureArray49);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper51 = xmlMapper2.enable(featureArray49);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(xmlFactory15);
        org.junit.Assert.assertNotNull(xMLInputFactory16);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(objectWriter25);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(xmlFactory28);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(objectWriter37);
        org.junit.Assert.assertNotNull(objectMapper39);
        org.junit.Assert.assertNotNull(xmlFactory40);
        org.junit.Assert.assertNotNull(objectWriter42);
        org.junit.Assert.assertTrue("'" + feature43 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature43.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertNotNull(objectMapper46);
        org.junit.Assert.assertNotNull(objectMapper48);
        org.junit.Assert.assertNotNull(featureArray49);
        org.junit.Assert.assertNotNull(objectMapper50);
        org.junit.Assert.assertNotNull(objectMapper51);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider2 = xmlSerializerProvider1.copy();
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray4 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] {};
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter beanPropertyWriter5 = null;
        com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] beanPropertyWriterArray6 = new com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] { beanPropertyWriter5 };
        int int7 = com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerBase._orderAttributesFirst(beanPropertyWriterArray4, beanPropertyWriterArray6);
        // The following exception was thrown during execution in test generation
        try {
            defaultSerializerProvider2.reportMappingProblem("hi!", (java.lang.Object[]) beanPropertyWriterArray6);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.JsonMappingException; message: hi!");
        } catch (com.fasterxml.jackson.databind.JsonMappingException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(defaultSerializerProvider2);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray4);
        org.junit.Assert.assertNotNull(beanPropertyWriterArray6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory7 = objectMapper6.getSerializerFactory();
        com.fasterxml.jackson.databind.introspect.VisibilityChecker<?> wildcardVisibilityChecker8 = objectMapper6.getVisibilityChecker();
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper11.writer(contextAttributes12);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper11.setSerializerFactory(serializerFactory14);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = xmlMapper11.getFactory();
        java.text.DateFormat dateFormat17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = xmlMapper11.writer(dateFormat17);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature19 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper11.configure(feature19, false);
        com.fasterxml.jackson.annotation.JsonInclude.Include include22 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = objectMapper21.setSerializationInclusion(include22);
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper26 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes27 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter28 = xmlMapper26.writer(contextAttributes27);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory29 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper30 = xmlMapper26.setSerializerFactory(serializerFactory29);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = xmlMapper26.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = xmlFactory31.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory32, xMLOutputFactory33);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory32, xMLOutputFactory35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = xmlMapper36.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper38 = xmlMapper36.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = xmlMapper38.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = xmlMapper38.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig42 = objectMapper41.getSerializationConfig();
        java.text.DateFormat dateFormat43 = objectMapper41.getDateFormat();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = objectMapper21.setDateFormat(dateFormat43);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = objectMapper6.setDateFormat(dateFormat43);
        java.io.File file46 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode47 = objectMapper45.readTree(file46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNull(serializerFactory7);
        org.junit.Assert.assertNotNull(wildcardVisibilityChecker8);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(xmlFactory16);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertTrue("'" + feature19 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature19.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(objectWriter28);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(xmlFactory31);
        org.junit.Assert.assertNotNull(xMLInputFactory32);
        org.junit.Assert.assertNotNull(serializerProvider37);
        org.junit.Assert.assertNotNull(xmlMapper38);
        org.junit.Assert.assertNotNull(xmlMapper40);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(serializationConfig42);
        org.junit.Assert.assertNotNull(dateFormat43);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(objectMapper45);
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper7.writer(contextAttributes8);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper7.setSerializerFactory(serializerFactory10);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory12 = xmlMapper7.getFactory();
        java.text.DateFormat dateFormat13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = xmlMapper7.writer(dateFormat13);
        java.util.Locale locale15 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper7.setLocale(locale15);
        com.fasterxml.jackson.core.Base64Variant base64Variant17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = objectMapper16.writer(base64Variant17);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver19 = objectMapper16.getSubtypeResolver();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper2.setSubtypeResolver(subtypeResolver19);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(xmlFactory12);
        org.junit.Assert.assertNotNull(objectWriter14);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertNotNull(subtypeResolver19);
        org.junit.Assert.assertNotNull(objectMapper20);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper12.copy();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping15 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper12.enableDefaultTyping(defaultTyping15);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider17 = objectMapper16.getSerializerProvider();
        com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder stdTypeResolverBuilder18 = com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder.noTypeInfoBuilder();
        javax.xml.stream.XMLInputFactory xMLInputFactory19 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory19, xMLOutputFactory20);
        com.fasterxml.jackson.core.ObjectCodec objectCodec22 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory23 = xmlFactory21.setCodec(objectCodec22);
        java.io.DataOutput dataOutput24 = null;
        com.fasterxml.jackson.core.JsonEncoding jsonEncoding25 = null;
        com.fasterxml.jackson.core.JsonGenerator jsonGenerator26 = xmlFactory21.createGenerator(dataOutput24, jsonEncoding25);
        // The following exception was thrown during execution in test generation
        try {
            serializerProvider17.defaultSerializeValue((java.lang.Object) stdTypeResolverBuilder18, jsonGenerator26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(serializerProvider17);
        org.junit.Assert.assertNotNull(stdTypeResolverBuilder18);
        org.junit.Assert.assertNotNull(jsonFactory23);
        org.junit.Assert.assertNotNull(jsonGenerator26);
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper12.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = xmlMapper14.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper14.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature18 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = objectMapper17.configure(serializationFeature18, false);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(xmlMapper16);
        org.junit.Assert.assertNotNull(objectMapper17);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper10.setDefaultPrettyPrinter(prettyPrinter11);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory13 = objectMapper12.getNodeFactory();
        java.io.Reader reader14 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference15 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector16 = objectMapper12.readValue(reader14, typeReference15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(jsonNodeFactory13);
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider2 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.BeanProperty beanProperty3 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider2.findNullValueSerializer(beanProperty3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        com.fasterxml.jackson.core.io.IOContext iOContext0 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper5 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory3, xMLOutputFactory4);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes6 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter7 = xmlMapper5.writer(contextAttributes6);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value8 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper5.setDefaultVisibility(value8);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray10 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper5.registerSubtypes(namedTypeArray10);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper5.writer(characterEscapes12);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper5.setDefaultVisibility(value14);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = objectMapper15.clearProblemHandlers();
        javax.xml.stream.XMLStreamReader xMLStreamReader17 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser fromXmlParser18 = new com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser(iOContext0, 100, 56319, (com.fasterxml.jackson.core.ObjectCodec) objectMapper15, xMLStreamReader17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter7);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(namedTypeArray10);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(objectMapper16);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.databind.type.TypeFactory typeFactory36 = objectMapper35.getTypeFactory();
        java.io.File file37 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonNode jsonNode38 = objectMapper35.readTree(file37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(typeFactory36);
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper2.writer(characterEscapes9);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.setDefaultVisibility(value11);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setSerializerFactory(serializerFactory18);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = xmlMapper15.getFactory();
        java.text.DateFormat dateFormat21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper15.writer(dateFormat21);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature23 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.configure(feature23, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper2.configure(feature23, false);
        com.fasterxml.jackson.annotation.JsonInclude.Value value28 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = objectMapper27.setDefaultPropertyInclusion(value28);
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes33 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper32.writer(contextAttributes33);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory35 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = xmlMapper32.setSerializerFactory(serializerFactory35);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = xmlMapper32.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory38 = xmlFactory37.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory39 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory38, xMLOutputFactory39);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper41 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory38);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper42 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory38);
        com.fasterxml.jackson.core.JsonParser jsonParser43 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup44 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider45 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup44);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup46 = xmlSerializerProvider45._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer47 = xmlSerializerProvider45.getDefaultNullKeySerializer();
        xmlSerializerProvider45.flushCachedSerializers();
        javax.xml.stream.XMLInputFactory xMLInputFactory49 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory50 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper51 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory49, xMLOutputFactory50);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes52 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter53 = xmlMapper51.writer(contextAttributes52);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value54 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper55 = xmlMapper51.setDefaultVisibility(value54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray56 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper51.registerSubtypes(namedTypeArray56);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory58 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper51);
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler59 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper60 = xmlMapper51.addHandler(deserializationProblemHandler59);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes61 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader62 = xmlMapper51.reader(contextAttributes61);
        javax.xml.stream.XMLInputFactory xMLInputFactory63 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory64 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory65 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory63, xMLOutputFactory64);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass66 = xmlFactory65.getFormatReadFeatureType();
        boolean boolean67 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass66);
        com.fasterxml.jackson.databind.JavaType javaType68 = xmlMapper51.constructType((java.lang.reflect.Type) featureClass66);
        com.fasterxml.jackson.databind.BeanProperty beanProperty69 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer70 = xmlSerializerProvider45.findNullKeySerializer(javaType68, beanProperty69);
        com.fasterxml.jackson.databind.MappingIterator<java.io.Closeable> closeableItor71 = xmlMapper42.readValues(jsonParser43, javaType68);
        javax.xml.stream.XMLInputFactory xMLInputFactory72 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory73 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory74 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory72, xMLOutputFactory73);
        com.fasterxml.jackson.core.ObjectCodec objectCodec75 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory76 = xmlFactory74.setCodec(objectCodec75);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass77 = xmlFactory74.getFormatReadFeatureType();
        java.lang.String str78 = xmlFactory74.getXMLTextElementName();
        java.lang.String str79 = xmlFactory74.getXMLTextElementName();
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JavaType javaType80 = objectMapper29.updateValue(javaType68, (java.lang.Object) xmlFactory74);
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.exc.InvalidDefinitionException; message: No serializer found for class com.ctc.wstx.api.WstxInputProperties$ParsingMode and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: com.fasterxml.jackson.dataformat.xml.XmlFactory[\"xmlinputFactory\"]->com.ctc.wstx.stax.WstxInputFactory[\"config\"]->com.ctc.wstx.api.ReaderConfig[\"inputParsingMode\"])");
        } catch (com.fasterxml.jackson.databind.exc.InvalidDefinitionException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(xmlFactory20);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertTrue("'" + feature23 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature23.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(xmlFactory37);
        org.junit.Assert.assertNotNull(xMLInputFactory38);
        org.junit.Assert.assertNull(xmlRootNameLookup46);
        org.junit.Assert.assertNotNull(objJsonSerializer47);
        org.junit.Assert.assertNotNull(objectWriter53);
        org.junit.Assert.assertNotNull(objectMapper55);
        org.junit.Assert.assertNotNull(namedTypeArray56);
        org.junit.Assert.assertNotNull(objectMapper60);
        org.junit.Assert.assertNotNull(objectReader62);
        org.junit.Assert.assertNotNull(featureClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(javaType68);
        org.junit.Assert.assertNotNull(objJsonSerializer70);
        org.junit.Assert.assertNotNull(closeableItor71);
        org.junit.Assert.assertNotNull(jsonFactory76);
        org.junit.Assert.assertNotNull(featureClass77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str79);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory9 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper2);
        xmlFactory9.setXMLTextElementName("XML");
        java.io.InputStream inputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.core.JsonParser jsonParser13 = xmlFactory9.createJsonParser(inputStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper12.copy();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping15 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper12.enableDefaultTyping(defaultTyping15);
        com.fasterxml.jackson.core.JsonParser jsonParser17 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(contextAttributes21);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory23 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper20.setSerializerFactory(serializerFactory23);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = xmlMapper20.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = xmlFactory25.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory26, xMLOutputFactory27);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper30 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory26, xMLOutputFactory29);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider31 = xmlMapper30.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = xmlMapper30.copy();
        javax.xml.stream.XMLInputFactory xMLInputFactory33 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory34 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory35 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory33, xMLOutputFactory34);
        com.fasterxml.jackson.core.ObjectCodec objectCodec36 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory37 = xmlFactory35.setCodec(objectCodec36);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass38 = xmlFactory35.getFormatReadFeatureType();
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference39 = null;
        boolean boolean40 = xmlMapper32.canSerialize(featureClass38, throwableAtomicReference39);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.MappingIterator<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureItor41 = objectMapper16.readValues(jsonParser17, featureClass38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(xmlFactory25);
        org.junit.Assert.assertNotNull(xMLInputFactory26);
        org.junit.Assert.assertNotNull(serializerProvider31);
        org.junit.Assert.assertNotNull(xmlMapper32);
        org.junit.Assert.assertNotNull(jsonFactory37);
        org.junit.Assert.assertNotNull(featureClass38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper2.setPropertyNamingStrategy(propertyNamingStrategy9);
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.setPropertyNamingStrategy(propertyNamingStrategy11);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper2.configure(serializationFeature13, true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory2 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.core.ObjectCodec objectCodec3 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory4 = xmlFactory2.setCodec(objectCodec3);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass5 = xmlFactory2.getFormatReadFeatureType();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature6 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean7 = xmlFactory2.isEnabled(feature6);
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory10 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.ObjectCodec objectCodec11 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory12 = xmlFactory10.setCodec(objectCodec11);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass13 = xmlFactory10.getFormatReadFeatureType();
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature14 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        boolean boolean15 = xmlFactory10.isEnabled(feature14);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = xmlFactory2.configure(feature14, true);
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(contextAttributes21);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory23 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper20.setSerializerFactory(serializerFactory23);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = xmlMapper20.getFactory();
        java.text.DateFormat dateFormat26 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter27 = xmlMapper20.writer(dateFormat26);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature28 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper30 = xmlMapper20.configure(feature28, false);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = xmlFactory2.enable(feature28);
        org.junit.Assert.assertNotNull(jsonFactory4);
        org.junit.Assert.assertNotNull(featureClass5);
        org.junit.Assert.assertTrue("'" + feature6 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature6.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(jsonFactory12);
        org.junit.Assert.assertNotNull(featureClass13);
        org.junit.Assert.assertTrue("'" + feature14 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature14.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(xmlFactory17);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(xmlFactory25);
        org.junit.Assert.assertNotNull(objectWriter27);
        org.junit.Assert.assertTrue("'" + feature28 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature28.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(xmlFactory31);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.annotation.JsonInclude.Value value7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = objectMapper6.setPropertyInclusion(value7);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector9 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair11 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector9, annotationIntrospector10);
        com.fasterxml.jackson.databind.introspect.Annotated annotated12 = null;
        java.lang.Boolean boolean13 = pair11.isOutputAsText(annotated12);
        com.fasterxml.jackson.databind.introspect.Annotated annotated14 = null;
        java.lang.Boolean boolean15 = pair11.isOutputAsAttribute(annotated14);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = objectMapper8.setAnnotationIntrospector((com.fasterxml.jackson.databind.AnnotationIntrospector) pair11);
        com.fasterxml.jackson.databind.introspect.Annotated annotated17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj18 = pair11.findDeserializationConverter(annotated17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(pair11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(objectMapper16);
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper10.enableDefaultTypingAsProperty(defaultTyping11, "unknown");
        javax.xml.stream.XMLInputFactory xMLInputFactory14 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory14, xMLOutputFactory15);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = xmlMapper16.writer(contextAttributes17);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory19 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper16.setSerializerFactory(serializerFactory19);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory21 = xmlMapper16.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory22 = xmlFactory21.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory22, xMLOutputFactory23);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter25 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper26 = xmlMapper24.setDefaultPrettyPrinter(prettyPrinter25);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory27 = objectMapper26.getNodeFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader28 = objectMapper13.reader(jsonNodeFactory27);
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(contextAttributes32);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value34 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper31.setDefaultVisibility(value34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray36 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper31.registerSubtypes(namedTypeArray36);
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy38 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper39 = xmlMapper31.setPropertyNamingStrategy(propertyNamingStrategy38);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory40 = objectMapper39.getSerializerFactory();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = objectMapper13.setSerializerFactory(serializerFactory40);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectMapper13);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(xmlFactory21);
        org.junit.Assert.assertNotNull(xMLInputFactory22);
        org.junit.Assert.assertNotNull(objectMapper26);
        org.junit.Assert.assertNotNull(jsonNodeFactory27);
        org.junit.Assert.assertNotNull(objectReader28);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(namedTypeArray36);
        org.junit.Assert.assertNotNull(objectMapper39);
        org.junit.Assert.assertNotNull(serializerFactory40);
        org.junit.Assert.assertNotNull(objectMapper41);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.annotation.JsonInclude.Value value7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = objectMapper6.setPropertyInclusion(value7);
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper11.writer(contextAttributes12);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper11.setSerializerFactory(serializerFactory14);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = xmlMapper11.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = xmlFactory16.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper19 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter20 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper19.setDefaultPrettyPrinter(prettyPrinter20);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup22 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider23 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup22);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup24 = xmlSerializerProvider23._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory25, xMLOutputFactory26);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass28 = xmlFactory27.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider23.getUnknownTypeSerializer(featureClass28);
        boolean boolean30 = objectMapper21.canSerialize(featureClass28);
        boolean boolean31 = objectMapper6.canSerialize(featureClass28);
        com.fasterxml.jackson.core.JsonGenerator.Feature feature32 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = objectMapper6.isEnabled(feature32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(xmlFactory16);
        org.junit.Assert.assertNotNull(xMLInputFactory17);
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNull(xmlRootNameLookup24);
        org.junit.Assert.assertNotNull(featureClass28);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup36 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider37 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup36);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = objectMapper35.setSerializerProvider((com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) xmlSerializerProvider37);
        javax.xml.stream.XMLInputFactory xMLInputFactory39 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory40 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper41 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory39, xMLOutputFactory40);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes42 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter43 = xmlMapper41.writer(contextAttributes42);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory44 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = xmlMapper41.setSerializerFactory(serializerFactory44);
        int int46 = xmlMapper41.mixInCount();
        javax.xml.stream.XMLInputFactory xMLInputFactory47 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper49 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory47, xMLOutputFactory48);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes50 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter51 = xmlMapper49.writer(contextAttributes50);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory52 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper53 = xmlMapper49.setSerializerFactory(serializerFactory52);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory54 = xmlMapper49.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory55 = xmlFactory54.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory56 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper57 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory55, xMLOutputFactory56);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory58 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper59 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory55, xMLOutputFactory58);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider60 = xmlMapper59.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper61 = xmlMapper59.copy();
        javax.xml.stream.XMLInputFactory xMLInputFactory62 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory63 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory64 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory62, xMLOutputFactory63);
        com.fasterxml.jackson.core.ObjectCodec objectCodec65 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory66 = xmlFactory64.setCodec(objectCodec65);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass67 = xmlFactory64.getFormatReadFeatureType();
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference68 = null;
        boolean boolean69 = xmlMapper61.canSerialize(featureClass67, throwableAtomicReference68);
        javax.xml.stream.XMLInputFactory xMLInputFactory70 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory71 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory72 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory70, xMLOutputFactory71);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass73 = xmlFactory72.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper74 = xmlMapper41.addMixIn(featureClass67, featureClass73);
        com.fasterxml.jackson.databind.BeanProperty beanProperty76 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer77 = xmlSerializerProvider37.findTypedValueSerializer(featureClass73, true, beanProperty76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectWriter43);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(objectWriter51);
        org.junit.Assert.assertNotNull(objectMapper53);
        org.junit.Assert.assertNotNull(xmlFactory54);
        org.junit.Assert.assertNotNull(xMLInputFactory55);
        org.junit.Assert.assertNotNull(serializerProvider60);
        org.junit.Assert.assertNotNull(xmlMapper61);
        org.junit.Assert.assertNotNull(jsonFactory66);
        org.junit.Assert.assertNotNull(featureClass67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(featureClass73);
        org.junit.Assert.assertNotNull(objectMapper74);
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        java.io.File file11 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes15 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter16 = xmlMapper14.writer(contextAttributes15);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory17 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = xmlMapper14.setSerializerFactory(serializerFactory17);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = xmlMapper14.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = xmlFactory19.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20);
        com.fasterxml.jackson.core.JsonParser jsonParser25 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup26 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider27 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup26);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup28 = xmlSerializerProvider27._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer29 = xmlSerializerProvider27.getDefaultNullKeySerializer();
        xmlSerializerProvider27.flushCachedSerializers();
        javax.xml.stream.XMLInputFactory xMLInputFactory31 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper33 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory31, xMLOutputFactory32);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper33.writer(contextAttributes34);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value36 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = xmlMapper33.setDefaultVisibility(value36);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray38 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper33.registerSubtypes(namedTypeArray38);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory40 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper33);
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper33.addHandler(deserializationProblemHandler41);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes43 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader44 = xmlMapper33.reader(contextAttributes43);
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory47 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory45, xMLOutputFactory46);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass48 = xmlFactory47.getFormatReadFeatureType();
        boolean boolean49 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass48);
        com.fasterxml.jackson.databind.JavaType javaType50 = xmlMapper33.constructType((java.lang.reflect.Type) featureClass48);
        com.fasterxml.jackson.databind.BeanProperty beanProperty51 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer52 = xmlSerializerProvider27.findNullKeySerializer(javaType50, beanProperty51);
        com.fasterxml.jackson.databind.MappingIterator<java.io.Closeable> closeableItor53 = xmlMapper24.readValues(jsonParser25, javaType50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.Type type54 = xmlMapper10.readValue(file11, javaType50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectWriter16);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(xmlFactory19);
        org.junit.Assert.assertNotNull(xMLInputFactory20);
        org.junit.Assert.assertNull(xmlRootNameLookup28);
        org.junit.Assert.assertNotNull(objJsonSerializer29);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(namedTypeArray38);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectReader44);
        org.junit.Assert.assertNotNull(featureClass48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(javaType50);
        org.junit.Assert.assertNotNull(objJsonSerializer52);
        org.junit.Assert.assertNotNull(closeableItor53);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setSerializerFactory(serializerFactory18);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = xmlMapper15.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = xmlFactory20.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21);
        com.fasterxml.jackson.core.JsonParser jsonParser26 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup27 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider28 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup27);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup29 = xmlSerializerProvider28._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider28.getDefaultNullKeySerializer();
        xmlSerializerProvider28.flushCachedSerializers();
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory32, xMLOutputFactory33);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes35 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter36 = xmlMapper34.writer(contextAttributes35);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value37 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper34.setDefaultVisibility(value37);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray39 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper34.registerSubtypes(namedTypeArray39);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory41 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper34);
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper34.addHandler(deserializationProblemHandler42);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes44 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader45 = xmlMapper34.reader(contextAttributes44);
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory48 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory46, xMLOutputFactory47);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass49 = xmlFactory48.getFormatReadFeatureType();
        boolean boolean50 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass49);
        com.fasterxml.jackson.databind.JavaType javaType51 = xmlMapper34.constructType((java.lang.reflect.Type) featureClass49);
        com.fasterxml.jackson.databind.BeanProperty beanProperty52 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer53 = xmlSerializerProvider28.findNullKeySerializer(javaType51, beanProperty52);
        com.fasterxml.jackson.databind.MappingIterator<java.io.Closeable> closeableItor54 = xmlMapper25.readValues(jsonParser26, javaType51);
        com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper jsonFormatVisitorWrapper55 = null;
        // The following exception was thrown during execution in test generation
        try {
            objectMapper12.acceptJsonFormatVisitor(javaType51, jsonFormatVisitorWrapper55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(xmlFactory20);
        org.junit.Assert.assertNotNull(xMLInputFactory21);
        org.junit.Assert.assertNull(xmlRootNameLookup29);
        org.junit.Assert.assertNotNull(objJsonSerializer30);
        org.junit.Assert.assertNotNull(objectWriter36);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(namedTypeArray39);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectReader45);
        org.junit.Assert.assertNotNull(featureClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(javaType51);
        org.junit.Assert.assertNotNull(objJsonSerializer53);
        org.junit.Assert.assertNotNull(closeableItor54);
    }

    @Test
    public void test311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test311");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass5 = null;
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference6 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = xmlSerializerProvider1.hasSerializerFor(featureClass5, throwableAtomicReference6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test312");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = new com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup();
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider2 = xmlSerializerProvider1.copy();
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule3 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier4 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule5 = jacksonXmlModule3.setSerializerModifier((com.fasterxml.jackson.databind.ser.BeanSerializerModifier) xmlBeanSerializerModifier4);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig6 = null;
        com.fasterxml.jackson.databind.type.MapType mapType7 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription8 = null;
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup9 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider10 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup9);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup11 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider12 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup11);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = xmlSerializerProvider12._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer14 = xmlSerializerProvider12.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty15 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer16 = xmlSerializerProvider10.handleSecondaryContextualization(objJsonSerializer14, beanProperty15);
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer17 = xmlBeanSerializerModifier4.modifyMapSerializer(serializationConfig6, mapType7, beanDescription8, objJsonSerializer14);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = xmlSerializerProvider1.isUnknownTypeSerializer(objJsonSerializer14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(defaultSerializerProvider2);
        org.junit.Assert.assertNotNull(simpleModule5);
        org.junit.Assert.assertNull(xmlRootNameLookup13);
        org.junit.Assert.assertNotNull(objJsonSerializer14);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer16);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer17);
    }

    @Test
    public void test313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test313");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper10.setDefaultPrettyPrinter(prettyPrinter11);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setSerializerFactory(serializerFactory18);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = xmlMapper15.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = xmlFactory20.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21, xMLOutputFactory22);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper25 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21, xMLOutputFactory24);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider26 = xmlMapper25.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = xmlMapper25.copy();
        javax.xml.stream.XMLInputFactory xMLInputFactory28 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory30 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory28, xMLOutputFactory29);
        com.fasterxml.jackson.core.ObjectCodec objectCodec31 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory32 = xmlFactory30.setCodec(objectCodec31);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass33 = xmlFactory30.getFormatReadFeatureType();
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference34 = null;
        boolean boolean35 = xmlMapper27.canSerialize(featureClass33, throwableAtomicReference34);
        com.fasterxml.jackson.databind.cfg.MutableConfigOverride mutableConfigOverride36 = xmlMapper10.configOverride(featureClass33);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(xmlFactory20);
        org.junit.Assert.assertNotNull(xMLInputFactory21);
        org.junit.Assert.assertNotNull(serializerProvider26);
        org.junit.Assert.assertNotNull(xmlMapper27);
        org.junit.Assert.assertNotNull(jsonFactory32);
        org.junit.Assert.assertNotNull(featureClass33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(mutableConfigOverride36);
    }

    @Test
    public void test314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test314");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper10.setDefaultPrettyPrinter(prettyPrinter11);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setSerializerFactory(serializerFactory18);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = xmlMapper15.getFactory();
        java.text.DateFormat dateFormat21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper15.writer(dateFormat21);
        java.util.Locale locale23 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper15.setLocale(locale23);
        javax.xml.stream.XMLInputFactory xMLInputFactory25 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory26 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper27 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory25, xMLOutputFactory26);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes28 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter29 = xmlMapper27.writer(contextAttributes28);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory30 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper31 = xmlMapper27.setSerializerFactory(serializerFactory30);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory32 = xmlMapper27.getFactory();
        java.text.DateFormat dateFormat33 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper27.writer(dateFormat33);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature35 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper37 = xmlMapper27.configure(feature35, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper15.disable(feature35);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper10.configure(feature35, true);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule41 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver simpleAbstractTypeResolver42 = null;
        jacksonXmlModule41.setAbstractTypes(simpleAbstractTypeResolver42);
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier44 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig45 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription46 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder47 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder48 = xmlBeanSerializerModifier44.updateBuilder(serializationConfig45, beanDescription46, beanSerializerBuilder47);
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule49 = jacksonXmlModule41.setSerializerModifier((com.fasterxml.jackson.databind.ser.BeanSerializerModifier) xmlBeanSerializerModifier44);
        com.fasterxml.jackson.databind.Module[] moduleArray50 = new com.fasterxml.jackson.databind.Module[] { simpleModule49 };
        com.fasterxml.jackson.databind.ObjectMapper objectMapper51 = objectMapper40.registerModules(moduleArray50);
        com.fasterxml.jackson.databind.MapperFeature mapperFeature52 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean53 = objectMapper40.isEnabled(mapperFeature52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(xmlFactory20);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectWriter29);
        org.junit.Assert.assertNotNull(objectMapper31);
        org.junit.Assert.assertNotNull(xmlFactory32);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertTrue("'" + feature35 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature35.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper37);
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNull(beanSerializerBuilder48);
        org.junit.Assert.assertNotNull(simpleModule49);
        org.junit.Assert.assertNotNull(moduleArray50);
        org.junit.Assert.assertNotNull(objectMapper51);
    }

    @Test
    public void test315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test315");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory3 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory4 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory5 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory3, xMLOutputFactory4);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass6 = xmlFactory5.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer7 = xmlSerializerProvider1.getUnknownTypeSerializer(featureClass6);
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig8 = xmlSerializerProvider1.getConfig();
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper11.writer(contextAttributes12);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper11.setDefaultVisibility(value14);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray16 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper11.registerSubtypes(namedTypeArray16);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory18 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper11);
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler19 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper20 = xmlMapper11.addHandler(deserializationProblemHandler19);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes21 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader22 = xmlMapper11.reader(contextAttributes21);
        javax.xml.stream.XMLInputFactory xMLInputFactory23 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory24 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory25 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory23, xMLOutputFactory24);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass26 = xmlFactory25.getFormatReadFeatureType();
        boolean boolean27 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass26);
        com.fasterxml.jackson.databind.JavaType javaType28 = xmlMapper11.constructType((java.lang.reflect.Type) featureClass26);
        com.fasterxml.jackson.databind.BeanProperty beanProperty29 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer30 = xmlSerializerProvider1.findKeySerializer(featureClass26, beanProperty29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(featureClass6);
        org.junit.Assert.assertNotNull(objJsonSerializer7);
        org.junit.Assert.assertNull(serializationConfig8);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(namedTypeArray16);
        org.junit.Assert.assertNotNull(objectMapper20);
        org.junit.Assert.assertNotNull(objectReader22);
        org.junit.Assert.assertNotNull(featureClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(javaType28);
    }

    @Test
    public void test316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test316");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        javax.xml.stream.XMLInputFactory xMLInputFactory5 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory6 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper7 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory5, xMLOutputFactory6);
        java.lang.Class<?> wildcardClass8 = xmlMapper7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass8;
        xmlMapper2.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper15.setSerializerFactory(serializerFactory16);
        com.fasterxml.jackson.databind.jsontype.SubtypeResolver subtypeResolver18 = xmlMapper15.getSubtypeResolver();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector19 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector20 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair21 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector19, annotationIntrospector20);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector22 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector23 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair24 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector22, annotationIntrospector23);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair25 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector20, annotationIntrospector22);
        com.fasterxml.jackson.databind.introspect.Annotated annotated26 = null;
        java.lang.String str27 = pair25.findNamespace(annotated26);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector28 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector29 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair30 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector28, annotationIntrospector29);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector31 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector32 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair33 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector31, annotationIntrospector32);
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair34 = new com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair(annotationIntrospector29, annotationIntrospector31);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper15.setAnnotationIntrospectors((com.fasterxml.jackson.databind.AnnotationIntrospector) pair25, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair34);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector36 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector37 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair38 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector36, annotationIntrospector37);
        com.fasterxml.jackson.databind.introspect.Annotated annotated39 = null;
        java.lang.Boolean boolean40 = pair38.isOutputAsText(annotated39);
        com.fasterxml.jackson.databind.introspect.Annotated annotated41 = null;
        java.lang.Boolean boolean42 = pair38.isOutputAsAttribute(annotated41);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector43 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair45 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector43, annotationIntrospector44);
        com.fasterxml.jackson.databind.introspect.Annotated annotated46 = null;
        java.lang.Boolean boolean47 = pair45.isOutputAsText(annotated46);
        com.fasterxml.jackson.databind.introspect.Annotated annotated48 = null;
        java.lang.Boolean boolean49 = pair45.isOutputAsAttribute(annotated48);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector50 = com.fasterxml.jackson.databind.AnnotationIntrospector.pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair38, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair45);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper51 = objectMapper35.setAnnotationIntrospector(annotationIntrospector50);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup52 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider53 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup52);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup54 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider55 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup54);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup56 = xmlSerializerProvider55._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer57 = xmlSerializerProvider55.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty58 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer59 = xmlSerializerProvider53.handleSecondaryContextualization(objJsonSerializer57, beanProperty58);
        byte[] byteArray60 = objectMapper35.writeValueAsBytes((java.lang.Object) beanProperty58);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(xmlMapper15);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(subtypeResolver18);
        org.junit.Assert.assertNotNull(pair21);
        org.junit.Assert.assertNotNull(pair24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(pair30);
        org.junit.Assert.assertNotNull(pair33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(pair38);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(pair45);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(annotationIntrospector50);
        org.junit.Assert.assertNotNull(objectMapper51);
        org.junit.Assert.assertNull(xmlRootNameLookup56);
        org.junit.Assert.assertNotNull(objJsonSerializer57);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[60, 110, 117, 108, 108, 47, 62]");
    }

    @Test
    public void test317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test317");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        com.fasterxml.jackson.databind.ser.FilterProvider filterProvider8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(filterProvider8);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
    }

    @Test
    public void test318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test318");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = xmlSerializerProvider1._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer3 = xmlSerializerProvider1.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer4 = xmlSerializerProvider1.getDefaultNullValueSerializer();
        xmlSerializerProvider1.flushCachedSerializers();
        org.junit.Assert.assertNull(xmlRootNameLookup2);
        org.junit.Assert.assertNotNull(objJsonSerializer3);
        org.junit.Assert.assertNotNull(objJsonSerializer4);
    }

    @Test
    public void test319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test319");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper2.writer(characterEscapes9);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.setDefaultVisibility(value11);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setSerializerFactory(serializerFactory18);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = xmlMapper15.getFactory();
        java.text.DateFormat dateFormat21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper15.writer(dateFormat21);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature23 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.configure(feature23, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper2.configure(feature23, false);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter28 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = objectMapper27.setDefaultPrettyPrinter(prettyPrinter28);
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes33 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper32.writer(contextAttributes33);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory35 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = xmlMapper32.setSerializerFactory(serializerFactory35);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory37 = xmlMapper32.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory38 = xmlFactory37.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory39 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory38, xMLOutputFactory39);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper40.enableDefaultTypingAsProperty(defaultTyping41, "unknown");
        javax.xml.stream.XMLInputFactory xMLInputFactory44 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory45 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper46 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory44, xMLOutputFactory45);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes47 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter48 = xmlMapper46.writer(contextAttributes47);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory49 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper50 = xmlMapper46.setSerializerFactory(serializerFactory49);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory51 = xmlMapper46.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory52 = xmlFactory51.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory53 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper54 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory52, xMLOutputFactory53);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter55 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper56 = xmlMapper54.setDefaultPrettyPrinter(prettyPrinter55);
        com.fasterxml.jackson.databind.node.JsonNodeFactory jsonNodeFactory57 = objectMapper56.getNodeFactory();
        com.fasterxml.jackson.databind.ObjectReader objectReader58 = objectMapper43.reader(jsonNodeFactory57);
        com.fasterxml.jackson.databind.ObjectReader objectReader59 = objectMapper27.reader(jsonNodeFactory57);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(xmlFactory20);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertTrue("'" + feature23 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature23.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(xmlFactory37);
        org.junit.Assert.assertNotNull(xMLInputFactory38);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(objectWriter48);
        org.junit.Assert.assertNotNull(objectMapper50);
        org.junit.Assert.assertNotNull(xmlFactory51);
        org.junit.Assert.assertNotNull(xMLInputFactory52);
        org.junit.Assert.assertNotNull(objectMapper56);
        org.junit.Assert.assertNotNull(jsonNodeFactory57);
        org.junit.Assert.assertNotNull(objectReader58);
        org.junit.Assert.assertNotNull(objectReader59);
    }

    @Test
    public void test320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test320");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode13 = objectMapper12.createObjectNode();
        int int14 = objectMapper12.mixInCount();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectNode13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test321");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup8 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider9 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup8);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup10 = xmlSerializerProvider9._rootNameLookup;
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory13 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory11, xMLOutputFactory12);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass14 = xmlFactory13.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider9.getUnknownTypeSerializer(featureClass14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence17 = xmlSerializerProvider1.reportBadDefinition(featureClass14, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(xmlRootNameLookup10);
        org.junit.Assert.assertNotNull(featureClass14);
        org.junit.Assert.assertNotNull(objJsonSerializer15);
    }

    @Test
    public void test322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test322");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.core.JsonGenerator.Feature feature13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = xmlMapper12.isEnabled(feature13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
    }

    @Test
    public void test323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test323");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setDefaultVisibility(value18);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray20 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper15.registerSubtypes(namedTypeArray20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper15.writer(characterEscapes22);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.setDefaultVisibility(value24);
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(contextAttributes29);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper28.setSerializerFactory(serializerFactory31);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlMapper28.getFactory();
        java.text.DateFormat dateFormat34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper28.writer(dateFormat34);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature36 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper28.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper15.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper2.configure(feature36, false);
        java.text.DateFormat dateFormat43 = objectMapper42.getDateFormat();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(namedTypeArray20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertTrue("'" + feature36 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature36.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(dateFormat43);
    }

    @Test
    public void test324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test324");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.databind.module.SimpleValueInstantiators simpleValueInstantiators1 = null;
        jacksonXmlModule0.setValueInstantiators(simpleValueInstantiators1);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup3 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider4 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup3);
        javax.xml.stream.XMLInputFactory xMLInputFactory6 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory7 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper8 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory6, xMLOutputFactory7);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper8.writer(contextAttributes9);
        javax.xml.stream.XMLInputFactory xMLInputFactory11 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory12 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper13 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory11, xMLOutputFactory12);
        java.lang.Class<?> wildcardClass14 = xmlMapper13.getClass();
        java.lang.Class[] classArray16 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray17 = (java.lang.Class<?>[]) classArray16;
        wildcardClassArray17[0] = wildcardClass14;
        xmlMapper8.registerSubtypes(wildcardClassArray17);
        com.fasterxml.jackson.databind.JsonMappingException jsonMappingException21 = xmlSerializerProvider4.mappingException("", (java.lang.Object[]) wildcardClassArray17);
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule22 = jacksonXmlModule0.registerSubtypes(wildcardClassArray17);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(classArray16);
        org.junit.Assert.assertNotNull(wildcardClassArray17);
        org.junit.Assert.assertNotNull(jsonMappingException21);
        org.junit.Assert.assertNotNull(simpleModule22);
    }

    @Test
    public void test325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test325");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        boolean boolean8 = xmlFactory7.canUseCharArrays();
        boolean boolean9 = xmlFactory7.requiresPropertyOrdering();
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = xmlMapper12.writer(contextAttributes13);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory15 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper12.setSerializerFactory(serializerFactory15);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = xmlMapper12.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = xmlFactory17.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory18, xMLOutputFactory19);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory18, xMLOutputFactory21);
        xmlFactory7.setXMLInputFactory(xMLInputFactory18);
        boolean boolean24 = xmlFactory7.canUseCharArrays();
        com.fasterxml.jackson.core.Version version25 = xmlFactory7.version();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(objectWriter14);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(xmlFactory17);
        org.junit.Assert.assertNotNull(xMLInputFactory18);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(version25);
    }

    @Test
    public void test326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test326");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        java.util.Locale locale10 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper2.setLocale(locale10);
        javax.xml.stream.XMLInputFactory xMLInputFactory12 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory13 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory12, xMLOutputFactory13);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes15 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter16 = xmlMapper14.writer(contextAttributes15);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory17 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper18 = xmlMapper14.setSerializerFactory(serializerFactory17);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = xmlMapper14.getFactory();
        java.text.DateFormat dateFormat20 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter21 = xmlMapper14.writer(dateFormat20);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature22 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper14.configure(feature22, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper2.disable(feature22);
        java.io.Reader reader26 = null;
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass27 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature feature28 = xmlMapper2.readValue(reader26, featureClass27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(objectWriter16);
        org.junit.Assert.assertNotNull(objectMapper18);
        org.junit.Assert.assertNotNull(xmlFactory19);
        org.junit.Assert.assertNotNull(objectWriter21);
        org.junit.Assert.assertTrue("'" + feature22 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature22.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
    }

    @Test
    public void test327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test327");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper12.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = xmlMapper14.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper14.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig18 = objectMapper17.getSerializationConfig();
        java.text.DateFormat dateFormat19 = objectMapper17.getDateFormat();
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(contextAttributes23);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode25 = xmlMapper22.createObjectNode();
        com.fasterxml.jackson.core.JsonParser jsonParser26 = objectMapper17.treeAsTokens((com.fasterxml.jackson.core.TreeNode) objectNode25);
        byte[] byteArray27 = null;
        jsonParser26.setRequestPayloadOnError(byteArray27, "hi!");
        java.lang.String str30 = jsonParser26.nextFieldName();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(xmlMapper16);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(serializationConfig18);
        org.junit.Assert.assertNotNull(dateFormat19);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(objectNode25);
        org.junit.Assert.assertNotNull(jsonParser26);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test328");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper2.writer(characterEscapes9);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.setDefaultVisibility(value11);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setSerializerFactory(serializerFactory18);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = xmlMapper15.getFactory();
        java.text.DateFormat dateFormat21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper15.writer(dateFormat21);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature23 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.configure(feature23, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper27 = xmlMapper2.configure(feature23, false);
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig28 = objectMapper27.getDeserializationConfig();
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(contextAttributes32);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory34 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper31.setSerializerFactory(serializerFactory34);
        int int36 = xmlMapper31.mixInCount();
        javax.xml.stream.XMLInputFactory xMLInputFactory37 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory37, xMLOutputFactory38);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes40 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = xmlMapper39.writer(contextAttributes40);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper39.setSerializerFactory(serializerFactory42);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory44 = xmlMapper39.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = xmlFactory44.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper47 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory45, xMLOutputFactory46);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory48 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper49 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory45, xMLOutputFactory48);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider50 = xmlMapper49.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper51 = xmlMapper49.copy();
        javax.xml.stream.XMLInputFactory xMLInputFactory52 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory53 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory54 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory52, xMLOutputFactory53);
        com.fasterxml.jackson.core.ObjectCodec objectCodec55 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory56 = xmlFactory54.setCodec(objectCodec55);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass57 = xmlFactory54.getFormatReadFeatureType();
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference58 = null;
        boolean boolean59 = xmlMapper51.canSerialize(featureClass57, throwableAtomicReference58);
        javax.xml.stream.XMLInputFactory xMLInputFactory60 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory61 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory60, xMLOutputFactory61);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass63 = xmlFactory62.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper64 = xmlMapper31.addMixIn(featureClass57, featureClass63);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter65 = objectMapper27.writerFor(featureClass63);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(xmlFactory20);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertTrue("'" + feature23 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature23.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectMapper27);
        org.junit.Assert.assertNotNull(deserializationConfig28);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(xmlFactory44);
        org.junit.Assert.assertNotNull(xMLInputFactory45);
        org.junit.Assert.assertNotNull(serializerProvider50);
        org.junit.Assert.assertNotNull(xmlMapper51);
        org.junit.Assert.assertNotNull(jsonFactory56);
        org.junit.Assert.assertNotNull(featureClass57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(featureClass63);
        org.junit.Assert.assertNotNull(objectMapper64);
        org.junit.Assert.assertNotNull(objectWriter65);
    }

    @Test
    public void test329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test329");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(contextAttributes11);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.setDefaultVisibility(value13);
        javax.xml.stream.XMLInputFactory xMLInputFactory15 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory16 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory17 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory15, xMLOutputFactory16);
        com.fasterxml.jackson.core.ObjectCodec objectCodec18 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory19 = xmlFactory17.setCodec(objectCodec18);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass20 = xmlFactory17.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectReader objectReader21 = objectMapper14.readerFor(featureClass20);
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference22 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean23 = xmlSerializerProvider1.hasSerializerFor(featureClass20, throwableAtomicReference22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(jsonFactory19);
        org.junit.Assert.assertNotNull(featureClass20);
        org.junit.Assert.assertNotNull(objectReader21);
    }

    @Test
    public void test330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test330");
        com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector jacksonXmlAnnotationIntrospector0 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector();
        javax.xml.stream.XMLInputFactory xMLInputFactory1 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory2 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper3 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory1, xMLOutputFactory2);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes4 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter5 = xmlMapper3.writer(contextAttributes4);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value6 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper7 = xmlMapper3.setDefaultVisibility(value6);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes8 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader9 = objectMapper7.reader(contextAttributes8);
        javax.xml.stream.XMLInputFactory xMLInputFactory10 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory10, xMLOutputFactory11);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes13 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter14 = xmlMapper12.writer(contextAttributes13);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value15 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper16 = xmlMapper12.setDefaultVisibility(value15);
        javax.xml.stream.XMLInputFactory xMLInputFactory17 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory18 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory19 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory17, xMLOutputFactory18);
        com.fasterxml.jackson.core.ObjectCodec objectCodec20 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory21 = xmlFactory19.setCodec(objectCodec20);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass22 = xmlFactory19.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectReader objectReader23 = objectMapper16.readerFor(featureClass22);
        com.fasterxml.jackson.databind.ObjectReader objectReader24 = objectMapper7.readerFor(featureClass22);
        java.lang.Enum[] enumArray26 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray27 = (java.lang.Enum<?>[]) enumArray26;
        java.lang.String[] strArray28 = null;
        java.lang.String[] strArray29 = jacksonXmlAnnotationIntrospector0.findEnumValues(featureClass22, wildcardEnumArray27, strArray28);
        javax.xml.stream.XMLInputFactory xMLInputFactory30 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory31 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper32 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory30, xMLOutputFactory31);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes33 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter34 = xmlMapper32.writer(contextAttributes33);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value35 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = xmlMapper32.setDefaultVisibility(value35);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray37 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper32.registerSubtypes(namedTypeArray37);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes39 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper32.writer(characterEscapes39);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value41 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper32.setDefaultVisibility(value41);
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory43, xMLOutputFactory44);
        com.fasterxml.jackson.core.ObjectCodec objectCodec46 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory47 = xmlFactory45.setCodec(objectCodec46);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass48 = xmlFactory45.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectReader objectReader49 = xmlMapper32.reader(featureClass48);
        java.lang.Enum[] enumArray51 = new java.lang.Enum[0];
        @SuppressWarnings("unchecked")
        java.lang.Enum<?>[] wildcardEnumArray52 = (java.lang.Enum<?>[]) enumArray51;
        java.lang.String[] strArray56 = new java.lang.String[] { "JSON", "JSON", "JSON" };
        java.lang.String[] strArray57 = jacksonXmlAnnotationIntrospector0.findEnumValues(featureClass48, wildcardEnumArray52, strArray56);
        org.junit.Assert.assertNotNull(objectWriter5);
        org.junit.Assert.assertNotNull(objectMapper7);
        org.junit.Assert.assertNotNull(objectReader9);
        org.junit.Assert.assertNotNull(objectWriter14);
        org.junit.Assert.assertNotNull(objectMapper16);
        org.junit.Assert.assertNotNull(jsonFactory21);
        org.junit.Assert.assertNotNull(featureClass22);
        org.junit.Assert.assertNotNull(objectReader23);
        org.junit.Assert.assertNotNull(objectReader24);
        org.junit.Assert.assertNotNull(enumArray26);
        org.junit.Assert.assertNotNull(wildcardEnumArray27);
        org.junit.Assert.assertNull(strArray29);
        org.junit.Assert.assertNotNull(objectWriter34);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(namedTypeArray37);
        org.junit.Assert.assertNotNull(objectWriter40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(jsonFactory47);
        org.junit.Assert.assertNotNull(featureClass48);
        org.junit.Assert.assertNotNull(objectReader49);
        org.junit.Assert.assertNotNull(enumArray51);
        org.junit.Assert.assertNotNull(wildcardEnumArray52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray57);
    }

    @Test
    public void test331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test331");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper2.findAndRegisterModules();
        java.util.Set<java.lang.Object> objSet11 = xmlMapper2.getRegisteredModuleIds();
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = xmlMapper2.disable(serializationFeature12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objSet11);
    }

    @Test
    public void test332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test332");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext7 = xmlMapper2.getDeserializationContext();
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes8 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader9 = xmlMapper2.reader(contextAttributes8);
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature10 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = xmlMapper2.enable(deserializationFeature10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(deserializationContext7);
        org.junit.Assert.assertNotNull(objectReader9);
    }

    @Test
    public void test333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test333");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper12.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = xmlMapper14.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper14.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig18 = objectMapper17.getSerializationConfig();
        java.text.DateFormat dateFormat19 = objectMapper17.getDateFormat();
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(contextAttributes23);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode25 = xmlMapper22.createObjectNode();
        com.fasterxml.jackson.core.JsonParser jsonParser26 = objectMapper17.treeAsTokens((com.fasterxml.jackson.core.TreeNode) objectNode25);
        java.lang.String str27 = jsonParser26.currentName();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(xmlMapper16);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(serializationConfig18);
        org.junit.Assert.assertNotNull(dateFormat19);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(objectNode25);
        org.junit.Assert.assertNotNull(jsonParser26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test334");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper2.setPropertyNamingStrategy(propertyNamingStrategy9);
        com.fasterxml.jackson.databind.InjectableValues injectableValues11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.setInjectableValues(injectableValues11);
        java.io.InputStream inputStream13 = null;
        com.fasterxml.jackson.core.type.TypeReference typeReference14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.io.Flushable flushable15 = objectMapper12.readValue(inputStream13, typeReference14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Null InputStream is not a valid argument");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test335");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper2.writer(characterEscapes9);
        com.fasterxml.jackson.databind.DeserializationConfig deserializationConfig11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.setConfig(deserializationConfig11);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup13 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider14 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup13);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup15 = xmlSerializerProvider14._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer16 = xmlSerializerProvider14.getDefaultNullKeySerializer();
        xmlSerializerProvider14.flushCachedSerializers();
        javax.xml.stream.XMLInputFactory xMLInputFactory18 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory18, xMLOutputFactory19);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes21 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter22 = xmlMapper20.writer(contextAttributes21);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value23 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper24 = xmlMapper20.setDefaultVisibility(value23);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray25 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper20.registerSubtypes(namedTypeArray25);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory27 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper20);
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler28 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = xmlMapper20.addHandler(deserializationProblemHandler28);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes30 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader31 = xmlMapper20.reader(contextAttributes30);
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory34 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory32, xMLOutputFactory33);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass35 = xmlFactory34.getFormatReadFeatureType();
        boolean boolean36 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass35);
        com.fasterxml.jackson.databind.JavaType javaType37 = xmlMapper20.constructType((java.lang.reflect.Type) featureClass35);
        com.fasterxml.jackson.databind.BeanProperty beanProperty38 = null;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer39 = xmlSerializerProvider14.findNullKeySerializer(javaType37, beanProperty38);
        com.fasterxml.jackson.databind.ObjectWriter objectWriter40 = xmlMapper2.writerWithType(javaType37);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNull(xmlRootNameLookup15);
        org.junit.Assert.assertNotNull(objJsonSerializer16);
        org.junit.Assert.assertNotNull(objectWriter22);
        org.junit.Assert.assertNotNull(objectMapper24);
        org.junit.Assert.assertNotNull(namedTypeArray25);
        org.junit.Assert.assertNotNull(objectMapper29);
        org.junit.Assert.assertNotNull(objectReader31);
        org.junit.Assert.assertNotNull(featureClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(javaType37);
        org.junit.Assert.assertNotNull(objJsonSerializer39);
        org.junit.Assert.assertNotNull(objectWriter40);
    }

    @Test
    public void test336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test336");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes11 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter12 = xmlMapper10.writer(contextAttributes11);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory13 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper10.setSerializerFactory(serializerFactory13);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory15 = xmlMapper10.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory16 = xmlFactory15.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory17 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper18 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory17);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory19 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper20 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory16, xMLOutputFactory19);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider21 = xmlMapper20.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = xmlMapper20.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = xmlMapper22.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper22.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig26 = objectMapper25.getSerializationConfig();
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory27 = null;
        com.fasterxml.jackson.databind.ser.DefaultSerializerProvider defaultSerializerProvider28 = xmlSerializerProvider1.createInstance(serializationConfig26, serializerFactory27);
        javax.xml.stream.XMLInputFactory xMLInputFactory29 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory30 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper31 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory29, xMLOutputFactory30);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper31.writer(contextAttributes32);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value34 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper35 = xmlMapper31.setDefaultVisibility(value34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray36 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper31.registerSubtypes(namedTypeArray36);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory38 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper31);
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler39 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper31.addHandler(deserializationProblemHandler39);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes41 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader42 = xmlMapper31.reader(contextAttributes41);
        javax.xml.stream.XMLInputFactory xMLInputFactory43 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory44 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory45 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory43, xMLOutputFactory44);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass46 = xmlFactory45.getFormatReadFeatureType();
        boolean boolean47 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass46);
        com.fasterxml.jackson.databind.JavaType javaType48 = xmlMapper31.constructType((java.lang.reflect.Type) featureClass46);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory50 = xmlSerializerProvider1.reportBadDefinition(javaType48, "XML");
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.databind.exc.InvalidDefinitionException; message: XML");
        } catch (com.fasterxml.jackson.databind.exc.InvalidDefinitionException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNotNull(objectWriter12);
        org.junit.Assert.assertNotNull(objectMapper14);
        org.junit.Assert.assertNotNull(xmlFactory15);
        org.junit.Assert.assertNotNull(xMLInputFactory16);
        org.junit.Assert.assertNotNull(serializerProvider21);
        org.junit.Assert.assertNotNull(xmlMapper22);
        org.junit.Assert.assertNotNull(xmlMapper24);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(serializationConfig26);
        org.junit.Assert.assertNotNull(defaultSerializerProvider28);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(objectMapper35);
        org.junit.Assert.assertNotNull(namedTypeArray36);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectReader42);
        org.junit.Assert.assertNotNull(featureClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(javaType48);
    }

    @Test
    public void test337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test337");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper2.setPropertyNamingStrategy(propertyNamingStrategy9);
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.setPropertyNamingStrategy(propertyNamingStrategy11);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setSerializerFactory(serializerFactory18);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = xmlMapper15.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = xmlFactory20.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper2, xMLInputFactory21, xMLOutputFactory25);
        com.fasterxml.jackson.databind.SerializationFeature serializationFeature27 = null;
        com.fasterxml.jackson.databind.SerializationFeature[] serializationFeatureArray28 = new com.fasterxml.jackson.databind.SerializationFeature[] {};
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper29 = xmlMapper2.disable(serializationFeature27, serializationFeatureArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(xmlFactory20);
        org.junit.Assert.assertNotNull(xMLInputFactory21);
        org.junit.Assert.assertNotNull(serializationFeatureArray28);
    }

    @Test
    public void test338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test338");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper12.copy();
        java.text.DateFormat dateFormat15 = xmlMapper14.getDateFormat();
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler16 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper14.addHandler(deserializationProblemHandler16);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(dateFormat15);
        org.junit.Assert.assertNotNull(objectMapper17);
    }

    @Test
    public void test339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test339");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setDefaultVisibility(value18);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray20 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper15.registerSubtypes(namedTypeArray20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper15.writer(characterEscapes22);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.setDefaultVisibility(value24);
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(contextAttributes29);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper28.setSerializerFactory(serializerFactory31);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlMapper28.getFactory();
        java.text.DateFormat dateFormat34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper28.writer(dateFormat34);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature36 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper28.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper15.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper2.configure(feature36, false);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory43 = xmlMapper2.getSerializerFactory();
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping44 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper46 = xmlMapper2.enableDefaultTypingAsProperty(defaultTyping44, "com.fasterxml.jackson.dataformat.xml.JacksonXmlModule");
        com.fasterxml.jackson.databind.DeserializationContext deserializationContext47 = objectMapper46.getDeserializationContext();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(namedTypeArray20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertTrue("'" + feature36 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature36.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNull(serializerFactory43);
        org.junit.Assert.assertNotNull(objectMapper46);
        org.junit.Assert.assertNotNull(deserializationContext47);
    }

    @Test
    public void test340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test340");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver mixInResolver7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper2.setMixInResolver(mixInResolver7);
        com.fasterxml.jackson.annotation.JsonInclude.Include include9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = objectMapper8.setDefaultPropertyInclusion(include9);
        com.fasterxml.jackson.annotation.JsonSetter.Value value11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = objectMapper8.setDefaultSetterInfo(value11);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper12);
    }

    @Test
    public void test341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test341");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.introspect.ClassIntrospector.MixInResolver mixInResolver7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper8 = xmlMapper2.setMixInResolver(mixInResolver7);
        com.fasterxml.jackson.annotation.JsonSetter.Value value9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper2.setDefaultSetterInfo(value9);
        com.fasterxml.jackson.annotation.PropertyAccessor propertyAccessor11 = null;
        com.fasterxml.jackson.annotation.JsonAutoDetect.Visibility visibility12 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectMapper objectMapper13 = objectMapper10.setVisibility(propertyAccessor11, visibility12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(objectMapper8);
        org.junit.Assert.assertNotNull(objectMapper10);
    }

    @Test
    public void test342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test342");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy9 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper2.setPropertyNamingStrategy(propertyNamingStrategy9);
        com.fasterxml.jackson.databind.PropertyNamingStrategy propertyNamingStrategy11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.setPropertyNamingStrategy(propertyNamingStrategy11);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setSerializerFactory(serializerFactory18);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory20 = xmlMapper15.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory21 = xmlFactory20.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory22 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper23 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21, xMLOutputFactory22);
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper24 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory21);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory26 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper2, xMLInputFactory21, xMLOutputFactory25);
        javax.xml.stream.XMLInputFactory xMLInputFactory27 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory28 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper29 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory27, xMLOutputFactory28);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes30 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter31 = xmlMapper29.writer(contextAttributes30);
        com.fasterxml.jackson.databind.JavaType javaType32 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter33 = xmlMapper29.writerFor(javaType32);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping34 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper36 = xmlMapper29.enableDefaultTypingAsProperty(defaultTyping34, "");
        javax.xml.stream.XMLInputFactory xMLInputFactory37 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory38 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper39 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory37, xMLOutputFactory38);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes40 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter41 = xmlMapper39.writer(contextAttributes40);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory42 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper43 = xmlMapper39.setSerializerFactory(serializerFactory42);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory44 = xmlMapper39.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory45 = xmlFactory44.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory46 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper47 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory45, xMLOutputFactory46);
        com.fasterxml.jackson.core.PrettyPrinter prettyPrinter48 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper49 = xmlMapper47.setDefaultPrettyPrinter(prettyPrinter48);
        javax.xml.stream.XMLInputFactory xMLInputFactory50 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory51 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper52 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory50, xMLOutputFactory51);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes53 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter54 = xmlMapper52.writer(contextAttributes53);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory55 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper56 = xmlMapper52.setSerializerFactory(serializerFactory55);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory57 = xmlMapper52.getFactory();
        java.text.DateFormat dateFormat58 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter59 = xmlMapper52.writer(dateFormat58);
        java.util.Locale locale60 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper61 = xmlMapper52.setLocale(locale60);
        javax.xml.stream.XMLInputFactory xMLInputFactory62 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory63 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper64 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory62, xMLOutputFactory63);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes65 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter66 = xmlMapper64.writer(contextAttributes65);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory67 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper68 = xmlMapper64.setSerializerFactory(serializerFactory67);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory69 = xmlMapper64.getFactory();
        java.text.DateFormat dateFormat70 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter71 = xmlMapper64.writer(dateFormat70);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature72 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper74 = xmlMapper64.configure(feature72, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper75 = xmlMapper52.disable(feature72);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper77 = xmlMapper47.configure(feature72, true);
        com.fasterxml.jackson.dataformat.xml.JacksonXmlModule jacksonXmlModule78 = new com.fasterxml.jackson.dataformat.xml.JacksonXmlModule();
        com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver simpleAbstractTypeResolver79 = null;
        jacksonXmlModule78.setAbstractTypes(simpleAbstractTypeResolver79);
        com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier xmlBeanSerializerModifier81 = new com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig82 = null;
        com.fasterxml.jackson.databind.BeanDescription beanDescription83 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder84 = null;
        com.fasterxml.jackson.databind.ser.BeanSerializerBuilder beanSerializerBuilder85 = xmlBeanSerializerModifier81.updateBuilder(serializationConfig82, beanDescription83, beanSerializerBuilder84);
        com.fasterxml.jackson.databind.module.SimpleModule simpleModule86 = jacksonXmlModule78.setSerializerModifier((com.fasterxml.jackson.databind.ser.BeanSerializerModifier) xmlBeanSerializerModifier81);
        com.fasterxml.jackson.databind.Module[] moduleArray87 = new com.fasterxml.jackson.databind.Module[] { simpleModule86 };
        com.fasterxml.jackson.databind.ObjectMapper objectMapper88 = objectMapper77.registerModules(moduleArray87);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper89 = xmlMapper29.registerModules(moduleArray87);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper90 = xmlMapper2.registerModules(moduleArray87);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(xmlFactory20);
        org.junit.Assert.assertNotNull(xMLInputFactory21);
        org.junit.Assert.assertNotNull(objectWriter31);
        org.junit.Assert.assertNotNull(objectWriter33);
        org.junit.Assert.assertNotNull(objectMapper36);
        org.junit.Assert.assertNotNull(objectWriter41);
        org.junit.Assert.assertNotNull(objectMapper43);
        org.junit.Assert.assertNotNull(xmlFactory44);
        org.junit.Assert.assertNotNull(xMLInputFactory45);
        org.junit.Assert.assertNotNull(objectMapper49);
        org.junit.Assert.assertNotNull(objectWriter54);
        org.junit.Assert.assertNotNull(objectMapper56);
        org.junit.Assert.assertNotNull(xmlFactory57);
        org.junit.Assert.assertNotNull(objectWriter59);
        org.junit.Assert.assertNotNull(objectMapper61);
        org.junit.Assert.assertNotNull(objectWriter66);
        org.junit.Assert.assertNotNull(objectMapper68);
        org.junit.Assert.assertNotNull(xmlFactory69);
        org.junit.Assert.assertNotNull(objectWriter71);
        org.junit.Assert.assertTrue("'" + feature72 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature72.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper74);
        org.junit.Assert.assertNotNull(objectMapper75);
        org.junit.Assert.assertNotNull(objectMapper77);
        org.junit.Assert.assertNull(beanSerializerBuilder85);
        org.junit.Assert.assertNotNull(simpleModule86);
        org.junit.Assert.assertNotNull(moduleArray87);
        org.junit.Assert.assertNotNull(objectMapper88);
        org.junit.Assert.assertNotNull(objectMapper89);
        org.junit.Assert.assertNotNull(objectMapper90);
    }

    @Test
    public void test343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test343");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper12.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = xmlMapper14.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper14.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig18 = objectMapper17.getSerializationConfig();
        java.text.DateFormat dateFormat19 = objectMapper17.getDateFormat();
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(contextAttributes23);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode25 = xmlMapper22.createObjectNode();
        com.fasterxml.jackson.core.JsonParser jsonParser26 = objectMapper17.treeAsTokens((com.fasterxml.jackson.core.TreeNode) objectNode25);
        byte[] byteArray27 = null;
        jsonParser26.setRequestPayloadOnError(byteArray27, "hi!");
        com.fasterxml.jackson.core.FormatSchema formatSchema30 = jsonParser26.getSchema();
        java.io.OutputStream outputStream31 = null;
        int int32 = jsonParser26.releaseBuffered(outputStream31);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(xmlMapper16);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(serializationConfig18);
        org.junit.Assert.assertNotNull(dateFormat19);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(objectNode25);
        org.junit.Assert.assertNotNull(jsonParser26);
        org.junit.Assert.assertNull(formatSchema30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test344");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper12.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = xmlMapper14.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper14.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig18 = objectMapper17.getSerializationConfig();
        java.text.DateFormat dateFormat19 = objectMapper17.getDateFormat();
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(contextAttributes23);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode25 = xmlMapper22.createObjectNode();
        com.fasterxml.jackson.core.JsonParser jsonParser26 = objectMapper17.treeAsTokens((com.fasterxml.jackson.core.TreeNode) objectNode25);
        java.lang.Object obj27 = jsonParser26.getCurrentValue();
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(xmlMapper16);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(serializationConfig18);
        org.junit.Assert.assertNotNull(dateFormat19);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(objectNode25);
        org.junit.Assert.assertNotNull(jsonParser26);
        org.junit.Assert.assertNull(obj27);
    }

    @Test
    public void test345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test345");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setDefaultVisibility(value5);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray7 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper2.registerSubtypes(namedTypeArray7);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes9 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter10 = xmlMapper2.writer(characterEscapes9);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value11 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.setDefaultVisibility(value11);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature13 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper14 = xmlMapper2.disable(feature13);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(namedTypeArray7);
        org.junit.Assert.assertNotNull(objectWriter10);
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertTrue("'" + feature13 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature13.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper14);
    }

    @Test
    public void test346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test346");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.JavaType javaType5 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter6 = xmlMapper2.writerFor(javaType5);
        com.fasterxml.jackson.databind.ObjectMapper.DefaultTyping defaultTyping7 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper9 = xmlMapper2.enableDefaultTypingAsProperty(defaultTyping7, "");
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes10 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader11 = xmlMapper2.reader(contextAttributes10);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectWriter6);
        org.junit.Assert.assertNotNull(objectMapper9);
        org.junit.Assert.assertNotNull(objectReader11);
    }

    @Test
    public void test347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test347");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature10 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper12 = xmlMapper2.configure(feature10, false);
        javax.xml.stream.XMLInputFactory xMLInputFactory13 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory14 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper15 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory13, xMLOutputFactory14);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes16 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter17 = xmlMapper15.writer(contextAttributes16);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value18 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper19 = xmlMapper15.setDefaultVisibility(value18);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray20 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper15.registerSubtypes(namedTypeArray20);
        com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes22 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter23 = xmlMapper15.writer(characterEscapes22);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value24 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper25 = xmlMapper15.setDefaultVisibility(value24);
        javax.xml.stream.XMLInputFactory xMLInputFactory26 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory27 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper28 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory26, xMLOutputFactory27);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes29 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter30 = xmlMapper28.writer(contextAttributes29);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory31 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper32 = xmlMapper28.setSerializerFactory(serializerFactory31);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory33 = xmlMapper28.getFactory();
        java.text.DateFormat dateFormat34 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter35 = xmlMapper28.writer(dateFormat34);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature36 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper38 = xmlMapper28.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper40 = xmlMapper15.configure(feature36, false);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper42 = xmlMapper2.configure(feature36, false);
        com.fasterxml.jackson.databind.InjectableValues injectableValues43 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = xmlMapper2.setInjectableValues(injectableValues43);
        java.net.URL uRL45 = null;
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper48 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory46, xMLOutputFactory47);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes49 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter50 = xmlMapper48.writer(contextAttributes49);
        com.fasterxml.jackson.annotation.JsonAutoDetect.Value value51 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper52 = xmlMapper48.setDefaultVisibility(value51);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray53 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        xmlMapper48.registerSubtypes(namedTypeArray53);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory55 = new com.fasterxml.jackson.dataformat.xml.XmlFactory((com.fasterxml.jackson.core.ObjectCodec) xmlMapper48);
        com.fasterxml.jackson.databind.deser.DeserializationProblemHandler deserializationProblemHandler56 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper57 = xmlMapper48.addHandler(deserializationProblemHandler56);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes58 = null;
        com.fasterxml.jackson.databind.ObjectReader objectReader59 = xmlMapper48.reader(contextAttributes58);
        javax.xml.stream.XMLInputFactory xMLInputFactory60 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory61 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory62 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory60, xMLOutputFactory61);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass63 = xmlFactory62.getFormatReadFeatureType();
        boolean boolean64 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass63);
        com.fasterxml.jackson.databind.JavaType javaType65 = xmlMapper48.constructType((java.lang.reflect.Type) featureClass63);
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.dataformat.xml.util.XmlInfo xmlInfo66 = objectMapper44.readValue(uRL45, javaType65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertTrue("'" + feature10 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature10.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper12);
        org.junit.Assert.assertNotNull(objectWriter17);
        org.junit.Assert.assertNotNull(objectMapper19);
        org.junit.Assert.assertNotNull(namedTypeArray20);
        org.junit.Assert.assertNotNull(objectWriter23);
        org.junit.Assert.assertNotNull(objectMapper25);
        org.junit.Assert.assertNotNull(objectWriter30);
        org.junit.Assert.assertNotNull(objectMapper32);
        org.junit.Assert.assertNotNull(xmlFactory33);
        org.junit.Assert.assertNotNull(objectWriter35);
        org.junit.Assert.assertTrue("'" + feature36 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature36.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper38);
        org.junit.Assert.assertNotNull(objectMapper40);
        org.junit.Assert.assertNotNull(objectMapper42);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(objectWriter50);
        org.junit.Assert.assertNotNull(objectMapper52);
        org.junit.Assert.assertNotNull(namedTypeArray53);
        org.junit.Assert.assertNotNull(objectMapper57);
        org.junit.Assert.assertNotNull(objectReader59);
        org.junit.Assert.assertNotNull(featureClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(javaType65);
    }

    @Test
    public void test348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test348");
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup0 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider1 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup0);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup2 = null;
        com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider xmlSerializerProvider3 = new com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider(xmlRootNameLookup2);
        com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup xmlRootNameLookup4 = xmlSerializerProvider3._rootNameLookup;
        com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer5 = xmlSerializerProvider3.getDefaultNullKeySerializer();
        com.fasterxml.jackson.databind.BeanProperty beanProperty6 = null;
        com.fasterxml.jackson.databind.JsonSerializer<?> wildcardJsonSerializer7 = xmlSerializerProvider1.handleSecondaryContextualization(objJsonSerializer5, beanProperty6);
        java.lang.Class<?> wildcardClass8 = xmlSerializerProvider1.getActiveView();
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory11 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory9, xMLOutputFactory10);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass12 = xmlFactory11.getFormatReadFeatureType();
        boolean boolean13 = com.fasterxml.jackson.dataformat.xml.util.TypeUtil.isIndexedType(featureClass12);
        com.fasterxml.jackson.databind.BeanProperty beanProperty14 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.JsonSerializer<java.lang.Object> objJsonSerializer15 = xmlSerializerProvider1.findPrimaryPropertySerializer(featureClass12, beanProperty14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(xmlRootNameLookup4);
        org.junit.Assert.assertNotNull(objJsonSerializer5);
        org.junit.Assert.assertNotNull(wildcardJsonSerializer7);
        org.junit.Assert.assertNull(wildcardClass8);
        org.junit.Assert.assertNotNull(featureClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test349");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory8 = xmlFactory7.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory9 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper10 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory9);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory11 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper12 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory8, xMLOutputFactory11);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider13 = xmlMapper12.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper14 = xmlMapper12.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper16 = xmlMapper14.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper17 = xmlMapper14.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig18 = objectMapper17.getSerializationConfig();
        java.text.DateFormat dateFormat19 = objectMapper17.getDateFormat();
        javax.xml.stream.XMLInputFactory xMLInputFactory20 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory21 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper22 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory20, xMLOutputFactory21);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes23 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter24 = xmlMapper22.writer(contextAttributes23);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode25 = xmlMapper22.createObjectNode();
        com.fasterxml.jackson.core.JsonParser jsonParser26 = objectMapper17.treeAsTokens((com.fasterxml.jackson.core.TreeNode) objectNode25);
        byte[] byteArray27 = jsonParser26.getBinaryValue();
        // The following exception was thrown during execution in test generation
        try {
            byte byte28 = jsonParser26.getByteValue();
            org.junit.Assert.fail("Expected exception of type com.fasterxml.jackson.core.JsonParseException; message: Current token (null) not numeric, cannot use numeric value accessors? at [Source: UNKNOWN; line: -1, column: -1]");
        } catch (com.fasterxml.jackson.core.JsonParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(xMLInputFactory8);
        org.junit.Assert.assertNotNull(serializerProvider13);
        org.junit.Assert.assertNotNull(xmlMapper14);
        org.junit.Assert.assertNotNull(xmlMapper16);
        org.junit.Assert.assertNotNull(objectMapper17);
        org.junit.Assert.assertNotNull(serializationConfig18);
        org.junit.Assert.assertNotNull(dateFormat19);
        org.junit.Assert.assertNotNull(objectWriter24);
        org.junit.Assert.assertNotNull(objectNode25);
        org.junit.Assert.assertNotNull(jsonParser26);
        org.junit.Assert.assertNull(byteArray27);
    }

    @Test
    public void test350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test350");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory7 = xmlMapper2.getFactory();
        java.text.DateFormat dateFormat8 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter9 = xmlMapper2.writer(dateFormat8);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper10 = xmlMapper2.findAndRegisterModules();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper11 = objectMapper10.clearProblemHandlers();
        com.fasterxml.jackson.databind.DeserializationFeature deserializationFeature12 = null;
        com.fasterxml.jackson.databind.DeserializationFeature[] deserializationFeatureArray13 = new com.fasterxml.jackson.databind.DeserializationFeature[] {};
        // The following exception was thrown during execution in test generation
        try {
            com.fasterxml.jackson.databind.ObjectReader objectReader14 = objectMapper10.reader(deserializationFeature12, deserializationFeatureArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNotNull(xmlFactory7);
        org.junit.Assert.assertNotNull(objectWriter9);
        org.junit.Assert.assertNotNull(objectMapper10);
        org.junit.Assert.assertNotNull(objectMapper11);
        org.junit.Assert.assertNotNull(deserializationFeatureArray13);
    }

    @Test
    public void test351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test351");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.node.ObjectNode objectNode5 = xmlMapper2.createObjectNode();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper6 = xmlMapper2.copy();
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector7 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector8 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair9 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector7, annotationIntrospector8);
        com.fasterxml.jackson.databind.introspect.Annotated annotated10 = null;
        java.lang.Boolean boolean11 = pair9.isOutputAsText(annotated10);
        com.fasterxml.jackson.databind.introspect.Annotated annotated12 = null;
        java.lang.Boolean boolean13 = pair9.isOutputAsAttribute(annotated12);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector14 = null;
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector15 = null;
        com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair pair16 = com.fasterxml.jackson.dataformat.xml.XmlAnnotationIntrospector.Pair.instance(annotationIntrospector14, annotationIntrospector15);
        com.fasterxml.jackson.databind.introspect.Annotated annotated17 = null;
        java.lang.Boolean boolean18 = pair16.isOutputAsText(annotated17);
        com.fasterxml.jackson.databind.introspect.Annotated annotated19 = null;
        java.lang.Boolean boolean20 = pair16.isOutputAsAttribute(annotated19);
        com.fasterxml.jackson.databind.AnnotationIntrospector annotationIntrospector21 = com.fasterxml.jackson.databind.AnnotationIntrospector.pair((com.fasterxml.jackson.databind.AnnotationIntrospector) pair9, (com.fasterxml.jackson.databind.AnnotationIntrospector) pair16);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper22 = xmlMapper6.setAnnotationIntrospector(annotationIntrospector21);
        javax.xml.stream.XMLStreamWriter xMLStreamWriter23 = null;
        com.fasterxml.jackson.core.io.SerializedString serializedString24 = com.fasterxml.jackson.core.PrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        // The following exception was thrown during execution in test generation
        try {
            xmlMapper6.writeValue(xMLStreamWriter23, (java.lang.Object) serializedString24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectNode5);
        org.junit.Assert.assertNotNull(xmlMapper6);
        org.junit.Assert.assertNotNull(pair9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(pair16);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(annotationIntrospector21);
        org.junit.Assert.assertNotNull(objectMapper22);
        org.junit.Assert.assertNotNull(serializedString24);
    }

    @Test
    public void test352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test352");
        javax.xml.stream.XMLInputFactory xMLInputFactory0 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory1 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper2 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory0, xMLOutputFactory1);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes3 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter4 = xmlMapper2.writer(contextAttributes3);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory5 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper6 = xmlMapper2.setSerializerFactory(serializerFactory5);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory7 = objectMapper6.getSerializerFactory();
        com.fasterxml.jackson.databind.introspect.VisibilityChecker<?> wildcardVisibilityChecker8 = objectMapper6.getVisibilityChecker();
        javax.xml.stream.XMLInputFactory xMLInputFactory9 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory10 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper11 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory9, xMLOutputFactory10);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes12 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter13 = xmlMapper11.writer(contextAttributes12);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory14 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper15 = xmlMapper11.setSerializerFactory(serializerFactory14);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory16 = xmlMapper11.getFactory();
        java.text.DateFormat dateFormat17 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter18 = xmlMapper11.writer(dateFormat17);
        com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature feature19 = com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper21 = xmlMapper11.configure(feature19, false);
        com.fasterxml.jackson.annotation.JsonInclude.Include include22 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper23 = objectMapper21.setSerializationInclusion(include22);
        javax.xml.stream.XMLInputFactory xMLInputFactory24 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory25 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper26 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory24, xMLOutputFactory25);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes27 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter28 = xmlMapper26.writer(contextAttributes27);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory29 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper30 = xmlMapper26.setSerializerFactory(serializerFactory29);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory31 = xmlMapper26.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory32 = xmlFactory31.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory33 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper34 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory32, xMLOutputFactory33);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory35 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper36 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory32, xMLOutputFactory35);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider37 = xmlMapper36.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper38 = xmlMapper36.copy();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper40 = xmlMapper38.setDefaultUseWrapper(true);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper41 = xmlMapper38.clearProblemHandlers();
        com.fasterxml.jackson.databind.SerializationConfig serializationConfig42 = objectMapper41.getSerializationConfig();
        java.text.DateFormat dateFormat43 = objectMapper41.getDateFormat();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper44 = objectMapper21.setDateFormat(dateFormat43);
        com.fasterxml.jackson.databind.ObjectMapper objectMapper45 = objectMapper6.setDateFormat(dateFormat43);
        javax.xml.stream.XMLInputFactory xMLInputFactory46 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory47 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper48 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory46, xMLOutputFactory47);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes49 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter50 = xmlMapper48.writer(contextAttributes49);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory51 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper52 = xmlMapper48.setSerializerFactory(serializerFactory51);
        int int53 = xmlMapper48.mixInCount();
        javax.xml.stream.XMLInputFactory xMLInputFactory54 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory55 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper56 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory54, xMLOutputFactory55);
        com.fasterxml.jackson.databind.cfg.ContextAttributes contextAttributes57 = null;
        com.fasterxml.jackson.databind.ObjectWriter objectWriter58 = xmlMapper56.writer(contextAttributes57);
        com.fasterxml.jackson.databind.ser.SerializerFactory serializerFactory59 = null;
        com.fasterxml.jackson.databind.ObjectMapper objectMapper60 = xmlMapper56.setSerializerFactory(serializerFactory59);
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory61 = xmlMapper56.getFactory();
        javax.xml.stream.XMLInputFactory xMLInputFactory62 = xmlFactory61.getXMLInputFactory();
        javax.xml.stream.XMLOutputFactory xMLOutputFactory63 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper64 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory62, xMLOutputFactory63);
        javax.xml.stream.XMLOutputFactory xMLOutputFactory65 = null;
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper66 = new com.fasterxml.jackson.dataformat.xml.XmlMapper(xMLInputFactory62, xMLOutputFactory65);
        com.fasterxml.jackson.databind.SerializerProvider serializerProvider67 = xmlMapper66.getSerializerProvider();
        com.fasterxml.jackson.dataformat.xml.XmlMapper xmlMapper68 = xmlMapper66.copy();
        javax.xml.stream.XMLInputFactory xMLInputFactory69 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory70 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory71 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory69, xMLOutputFactory70);
        com.fasterxml.jackson.core.ObjectCodec objectCodec72 = null;
        com.fasterxml.jackson.core.JsonFactory jsonFactory73 = xmlFactory71.setCodec(objectCodec72);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass74 = xmlFactory71.getFormatReadFeatureType();
        java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> throwableAtomicReference75 = null;
        boolean boolean76 = xmlMapper68.canSerialize(featureClass74, throwableAtomicReference75);
        javax.xml.stream.XMLInputFactory xMLInputFactory77 = null;
        javax.xml.stream.XMLOutputFactory xMLOutputFactory78 = null;
        com.fasterxml.jackson.dataformat.xml.XmlFactory xmlFactory79 = new com.fasterxml.jackson.dataformat.xml.XmlFactory(xMLInputFactory77, xMLOutputFactory78);
        java.lang.Class<com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser.Feature> featureClass80 = xmlFactory79.getFormatReadFeatureType();
        com.fasterxml.jackson.databind.ObjectMapper objectMapper81 = xmlMapper48.addMixIn(featureClass74, featureClass80);
        com.fasterxml.jackson.databind.ObjectReader objectReader82 = objectMapper45.readerFor(featureClass74);
        org.junit.Assert.assertNotNull(objectWriter4);
        org.junit.Assert.assertNotNull(objectMapper6);
        org.junit.Assert.assertNull(serializerFactory7);
        org.junit.Assert.assertNotNull(wildcardVisibilityChecker8);
        org.junit.Assert.assertNotNull(objectWriter13);
        org.junit.Assert.assertNotNull(objectMapper15);
        org.junit.Assert.assertNotNull(xmlFactory16);
        org.junit.Assert.assertNotNull(objectWriter18);
        org.junit.Assert.assertTrue("'" + feature19 + "' != '" + com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1 + "'", feature19.equals(com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator.Feature.WRITE_XML_1_1));
        org.junit.Assert.assertNotNull(objectMapper21);
        org.junit.Assert.assertNotNull(objectMapper23);
        org.junit.Assert.assertNotNull(objectWriter28);
        org.junit.Assert.assertNotNull(objectMapper30);
        org.junit.Assert.assertNotNull(xmlFactory31);
        org.junit.Assert.assertNotNull(xMLInputFactory32);
        org.junit.Assert.assertNotNull(serializerProvider37);
        org.junit.Assert.assertNotNull(xmlMapper38);
        org.junit.Assert.assertNotNull(xmlMapper40);
        org.junit.Assert.assertNotNull(objectMapper41);
        org.junit.Assert.assertNotNull(serializationConfig42);
        org.junit.Assert.assertNotNull(dateFormat43);
        org.junit.Assert.assertNotNull(objectMapper44);
        org.junit.Assert.assertNotNull(objectMapper45);
        org.junit.Assert.assertNotNull(objectWriter50);
        org.junit.Assert.assertNotNull(objectMapper52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(objectWriter58);
        org.junit.Assert.assertNotNull(objectMapper60);
        org.junit.Assert.assertNotNull(xmlFactory61);
        org.junit.Assert.assertNotNull(xMLInputFactory62);
        org.junit.Assert.assertNotNull(serializerProvider67);
        org.junit.Assert.assertNotNull(xmlMapper68);
        org.junit.Assert.assertNotNull(jsonFactory73);
        org.junit.Assert.assertNotNull(featureClass74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(featureClass80);
        org.junit.Assert.assertNotNull(objectMapper81);
        org.junit.Assert.assertNotNull(objectReader82);
    }
}

