import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test00001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00001");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass1 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test00002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00002");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        java.lang.Class<?> wildcardClass21 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test00003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00003");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test00004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00004");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        java.lang.Class<?> wildcardClass69 = namedTypeArray67.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test00005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00005");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        java.lang.Class<?>[] wildcardClassArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(namedTypeArray67);
    }

    @Test
    public void test00006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00006");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        java.lang.Class<?> wildcardClass67 = wildcardClassArray56.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test00007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00007");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
    }

    @Test
    public void test00008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00008");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class<?> wildcardClass45 = wildcardClassArray33.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test00009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00009");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray76);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
    }

    @Test
    public void test00010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00010");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray76);
        java.lang.Class<?> wildcardClass87 = wildcardClassArray76.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test00011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00011");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray65);
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test00012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00012");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType67 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray68 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType67 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray68);
        java.lang.Class<?> wildcardClass70 = namedTypeArray68.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray68);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test00013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00013");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        java.lang.Class<?> wildcardClass43 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test00014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00014");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray57);
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test00015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00015");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        java.lang.Class<?> wildcardClass45 = namedTypeArray43.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test00016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00016");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test00017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00017");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        java.lang.Class<?> wildcardClass89 = wildcardClassArray77.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00018");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test00019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00019");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray68 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray68);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType70 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray71 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType70 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray71);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray71);
        java.lang.Class<?> wildcardClass74 = namedTypeArray71.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(namedTypeArray68);
        org.junit.Assert.assertNotNull(namedTypeArray71);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test00020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00020");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test00021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00021");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        java.lang.Class<?> wildcardClass48 = namedTypeArray46.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test00022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00022");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray68 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray68);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType70 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray71 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType70 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray71);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray71);
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(namedTypeArray68);
        org.junit.Assert.assertNotNull(namedTypeArray71);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test00023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00023");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray64 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray64);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        java.lang.Class<?> wildcardClass89 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(namedTypeArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00024");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        java.lang.Class<?> wildcardClass21 = wildcardClassArray11.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test00025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00025");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray65);
        java.lang.Class<?> wildcardClass67 = namedTypeArray65.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test00026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00026");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test00027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00027");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray64 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray64);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType90 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType90 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray91);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass94 = namedTypeArray91.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(namedTypeArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00028");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray76);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType88 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType88 };
        stdSubtypeResolver43.registerSubtypes(namedTypeArray89);
        java.lang.Class<?> wildcardClass91 = stdSubtypeResolver43.getClass();
        java.lang.Class[] classArray93 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray94 = (java.lang.Class<?>[]) classArray93;
        wildcardClassArray94[0] = wildcardClass91;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray94);
        java.lang.Class<?> wildcardClass98 = wildcardClassArray94.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(classArray93);
        org.junit.Assert.assertNotNull(wildcardClassArray94);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00029");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray76);
        java.lang.Class<?>[] wildcardClassArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
    }

    @Test
    public void test00030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00030");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray76);
        java.lang.Class<?> wildcardClass87 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test00031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00031");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray57);
        java.lang.Class<?> wildcardClass69 = wildcardClassArray57.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test00032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00032");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass97 = namedTypeArray94.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test00033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00033");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType67 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray68 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType67 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray68);
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray68);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test00034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00034");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        java.lang.Class<?> wildcardClass89 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00035");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test00036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00036");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        java.lang.Class<?> wildcardClass91 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00037");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray76);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType88 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType88 };
        stdSubtypeResolver43.registerSubtypes(namedTypeArray89);
        java.lang.Class<?> wildcardClass91 = stdSubtypeResolver43.getClass();
        java.lang.Class[] classArray93 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray94 = (java.lang.Class<?>[]) classArray93;
        wildcardClassArray94[0] = wildcardClass91;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray94);
        java.lang.Class<?> wildcardClass98 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(classArray93);
        org.junit.Assert.assertNotNull(wildcardClassArray94);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00038");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray64 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray64);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType88 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType88 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray89);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        java.lang.Class<?> wildcardClass92 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(namedTypeArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test00039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00039");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray64 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray64);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType88 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType88 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray89);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        java.lang.Class<?> wildcardClass92 = namedTypeArray89.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(namedTypeArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test00040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00040");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray76);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType88 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType88 };
        stdSubtypeResolver43.registerSubtypes(namedTypeArray89);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        java.lang.Class<?> wildcardClass92 = namedTypeArray89.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test00041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00041");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        java.lang.Class<?> wildcardClass48 = namedTypeArray46.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test00042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00042");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        java.lang.Class<?>[] wildcardClassArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray67);
    }

    @Test
    public void test00043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00043");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        java.lang.Class<?> wildcardClass65 = wildcardClassArray54.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test00044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00044");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray64 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray64);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType90 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType90 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray91);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass94 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(namedTypeArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00045");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray64 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray64);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType89 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType89 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?> wildcardClass92 = namedTypeArray90.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(namedTypeArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test00046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00046");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray64 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray64);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType89 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType89 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?> wildcardClass92 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(namedTypeArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test00047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00047");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test00048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00048");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?> wildcardClass91 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00049");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass97 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test00050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00050");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        java.lang.Class<?> wildcardClass69 = namedTypeArray66.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test00051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00051");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType71 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray72 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType71 };
        stdSubtypeResolver2.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray72);
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(namedTypeArray72);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test00052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00052");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        java.lang.Class<?> wildcardClass89 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00053");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
    }

    @Test
    public void test00054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00054");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray86 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray86);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray86);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        java.lang.Class<?> wildcardClass91 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray86);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00055");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        java.lang.Class<?> wildcardClass91 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00056");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType69 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType69 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray70);
        java.lang.Class<?> wildcardClass72 = namedTypeArray70.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test00057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00057");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray86 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray86);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray86);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        java.lang.Class<?> wildcardClass91 = namedTypeArray89.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray86);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00058");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?>[] wildcardClassArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00059");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class<?> wildcardClass93 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00060");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray64 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray64);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType89 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType89 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(namedTypeArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray90);
    }

    @Test
    public void test00061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00061");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        java.lang.Class<?> wildcardClass89 = wildcardClassArray77.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00062");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType71 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray72 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType71 };
        stdSubtypeResolver2.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray72);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType76 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray77 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType76 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray77);
        java.lang.Class<?> wildcardClass79 = namedTypeArray77.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(namedTypeArray72);
        org.junit.Assert.assertNotNull(namedTypeArray77);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test00063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00063");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        java.lang.Class<?> wildcardClass47 = namedTypeArray45.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test00064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00064");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray68 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray68);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType70 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray71 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType70 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray71);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray71);
        java.lang.Class<?>[] wildcardClassArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(namedTypeArray68);
        org.junit.Assert.assertNotNull(namedTypeArray71);
    }

    @Test
    public void test00065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00065");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        java.lang.Class<?> wildcardClass91 = namedTypeArray89.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00066");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?>[] wildcardClassArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
    }

    @Test
    public void test00067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00067");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?> wildcardClass91 = wildcardClassArray80.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00068");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray76);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType88 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType88 };
        stdSubtypeResolver43.registerSubtypes(namedTypeArray89);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        java.lang.Class<?> wildcardClass92 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test00069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00069");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        java.lang.Class<?>[] wildcardClassArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
    }

    @Test
    public void test00070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00070");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray65);
        java.lang.Class<?>[] wildcardClassArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
    }

    @Test
    public void test00071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00071");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
        java.lang.Class<?> wildcardClass50 = namedTypeArray47.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test00072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00072");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test00073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00073");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType69 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType69 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray70);
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test00074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00074");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?> wildcardClass91 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00075");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray64 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray64);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        java.lang.Class<?> wildcardClass89 = wildcardClassArray77.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(namedTypeArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00076");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?> wildcardClass91 = wildcardClassArray80.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00077");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?> wildcardClass95 = wildcardClassArray80.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00078");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType71 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray72 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType71 };
        stdSubtypeResolver2.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray72);
        java.lang.Class<?> wildcardClass76 = namedTypeArray72.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(namedTypeArray72);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test00079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00079");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass93 = wildcardClassArray81.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00080");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        java.lang.Class<?> wildcardClass91 = wildcardClassArray78.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00081");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver47.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver47.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00082");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test00083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00083");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray86 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray86);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray86);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType89 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType89 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?> wildcardClass92 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray86);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test00084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00084");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray86 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray86);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray86);
        java.lang.Class<?> wildcardClass89 = namedTypeArray86.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray86);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00085");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        java.lang.Class<?> wildcardClass91 = wildcardClassArray78.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00086");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver47.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver47.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass96 = namedTypeArray93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00087");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test00088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00088");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?> wildcardClass92 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test00089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00089");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType71 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray72 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType71 };
        stdSubtypeResolver2.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray72);
        java.lang.Class<?>[] wildcardClassArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(namedTypeArray72);
    }

    @Test
    public void test00090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00090");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test00091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00091");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        java.lang.Class<?> wildcardClass91 = wildcardClassArray78.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00092");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class<?> wildcardClass93 = wildcardClassArray79.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00093");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray86 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray86);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray86);
        java.lang.Class<?> wildcardClass89 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray86);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00094");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver10 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass11 = stdSubtypeResolver10.getClass();
        java.lang.Class[] classArray13 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        wildcardClassArray14[0] = wildcardClass5;
        wildcardClassArray14[1] = wildcardClass7;
        wildcardClassArray14[2] = wildcardClass9;
        wildcardClassArray14[3] = wildcardClass11;
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray14);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver31 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass32 = stdSubtypeResolver31.getClass();
        java.lang.Class[] classArray34 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass26;
        wildcardClassArray35[1] = wildcardClass28;
        wildcardClassArray35[2] = wildcardClass30;
        wildcardClassArray35[3] = wildcardClass32;
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray35);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray35);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver3.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        java.lang.Class<?> wildcardClass95 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00095");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?> wildcardClass93 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00096");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test00097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00097");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray86 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray86);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray86);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray86);
    }

    @Test
    public void test00098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00098");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType71 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray72 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType71 };
        stdSubtypeResolver2.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray72);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType76 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray77 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType76 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray77);
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(namedTypeArray72);
        org.junit.Assert.assertNotNull(namedTypeArray77);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test00099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00099");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray88);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray88);
        java.lang.Class<?> wildcardClass91 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00100");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray88);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray88);
        java.lang.Class<?> wildcardClass91 = namedTypeArray88.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00101");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        java.lang.Class<?>[] wildcardClassArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
    }

    @Test
    public void test00102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00102");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        java.lang.Class<?> wildcardClass71 = namedTypeArray69.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test00103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00103");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass93 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00104");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
    }

    @Test
    public void test00105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00105");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray76);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType88 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType88 };
        stdSubtypeResolver43.registerSubtypes(namedTypeArray89);
        java.lang.Class<?> wildcardClass91 = stdSubtypeResolver43.getClass();
        java.lang.Class[] classArray93 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray94 = (java.lang.Class<?>[]) classArray93;
        wildcardClassArray94[0] = wildcardClass91;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray94);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray98 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(classArray93);
        org.junit.Assert.assertNotNull(wildcardClassArray94);
    }

    @Test
    public void test00106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00106");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test00107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00107");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray94);
    }

    @Test
    public void test00108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00108");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        java.lang.Class<?> wildcardClass50 = namedTypeArray48.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test00109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00109");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray88);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass93 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00110");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class<?>[] wildcardClassArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
    }

    @Test
    public void test00111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00111");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        java.lang.Class<?>[] wildcardClassArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
    }

    @Test
    public void test00112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00112");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
    }

    @Test
    public void test00113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00113");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test00114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00114");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver10 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass11 = stdSubtypeResolver10.getClass();
        java.lang.Class[] classArray13 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        wildcardClassArray14[0] = wildcardClass5;
        wildcardClassArray14[1] = wildcardClass7;
        wildcardClassArray14[2] = wildcardClass9;
        wildcardClassArray14[3] = wildcardClass11;
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray14);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver31 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass32 = stdSubtypeResolver31.getClass();
        java.lang.Class[] classArray34 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass26;
        wildcardClassArray35[1] = wildcardClass28;
        wildcardClassArray35[2] = wildcardClass30;
        wildcardClassArray35[3] = wildcardClass32;
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray35);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray35);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver3.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        java.lang.Class<?> wildcardClass95 = wildcardClassArray82.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00115");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray67);
    }

    @Test
    public void test00116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00116");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass93 = namedTypeArray91.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00117");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?>[] wildcardClassArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray94);
    }

    @Test
    public void test00118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00118");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver48.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass96 = namedTypeArray93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00119");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray86 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray86);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray86);
        java.lang.Class<?>[] wildcardClassArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray86);
    }

    @Test
    public void test00120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00120");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        java.lang.Class<?> wildcardClass89 = wildcardClassArray78.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00121");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        java.lang.Class<?> wildcardClass69 = namedTypeArray67.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test00122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00122");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        java.lang.Class<?> wildcardClass91 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00123");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        java.lang.Class<?> wildcardClass50 = namedTypeArray48.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test00124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00124");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?>[] wildcardClassArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
    }

    @Test
    public void test00125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00125");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver48.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass97 = namedTypeArray94.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test00126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00126");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        java.lang.Class<?> wildcardClass89 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00127");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver48.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00128");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        java.lang.Class<?> wildcardClass89 = wildcardClassArray78.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00129");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        java.lang.Class<?>[] wildcardClassArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
    }

    @Test
    public void test00130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00130");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        java.lang.Class<?> wildcardClass49 = wildcardClassArray47.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test00131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00131");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
    }

    @Test
    public void test00132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00132");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
    }

    @Test
    public void test00133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00133");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        java.lang.Class<?> wildcardClass89 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00134");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray83);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType95 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray96 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType95 };
        stdSubtypeResolver50.registerSubtypes(namedTypeArray96);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray96);
        java.lang.Class<?> wildcardClass99 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(namedTypeArray96);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00135");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?> wildcardClass91 = wildcardClassArray80.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00136");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver48.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass97 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test00137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00137");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        java.lang.Class<?>[] wildcardClassArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
    }

    @Test
    public void test00138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00138");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
    }

    @Test
    public void test00139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00139");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass93 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00140");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType66 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType66 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray69);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test00141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00141");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test00142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00142");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        java.lang.Class<?> wildcardClass43 = wildcardClassArray32.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test00143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00143");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
    }

    @Test
    public void test00144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00144");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        java.lang.Class<?> wildcardClass65 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test00145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00145");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
    }

    @Test
    public void test00146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00146");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver47.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass98 = namedTypeArray94.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00147");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType67 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray68 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType67 };
        stdSubtypeResolver22.registerSubtypes(namedTypeArray68);
        stdSubtypeResolver21.registerSubtypes(namedTypeArray68);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray68);
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray68);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test00148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00148");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        java.lang.Class<?>[] wildcardClassArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(namedTypeArray48);
    }

    @Test
    public void test00149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00149");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray86 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray86);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray86);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType89 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType89 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?> wildcardClass92 = namedTypeArray90.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray86);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test00150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00150");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        java.lang.Class<?>[] wildcardClassArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
    }

    @Test
    public void test00151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00151");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver47.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass98 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00152");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        java.lang.Class<?> wildcardClass91 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00153");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver50.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass96 = namedTypeArray93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00154");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType66 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType66 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray69);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        java.lang.Class<?> wildcardClass72 = namedTypeArray69.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test00155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00155");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass95 = wildcardClassArray81.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00156");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray76);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray87 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray87);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray87);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?> wildcardClass93 = namedTypeArray90.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(namedTypeArray87);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00157");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
    }

    @Test
    public void test00158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00158");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(namedTypeArray48);
    }

    @Test
    public void test00159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00159");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test00160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00160");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType89 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType89 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?>[] wildcardClassArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray90);
    }

    @Test
    public void test00161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00161");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?> wildcardClass91 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00162");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?> wildcardClass92 = wildcardClassArray80.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test00163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00163");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        java.lang.Class<?> wildcardClass50 = namedTypeArray48.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test00164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00164");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
    }

    @Test
    public void test00165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00165");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType91 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType91 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        java.lang.Class<?> wildcardClass94 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray92);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00166");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass95 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00167");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        java.lang.Class<?>[] wildcardClassArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
    }

    @Test
    public void test00168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00168");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType69 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType69 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray70);
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test00169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00169");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray83);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType95 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray96 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType95 };
        stdSubtypeResolver50.registerSubtypes(namedTypeArray96);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray96);
        java.lang.Class<?> wildcardClass99 = namedTypeArray96.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(namedTypeArray96);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00170");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class[] classArray94 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray95 = (java.lang.Class<?>[]) classArray94;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray95);
        java.lang.Class<?> wildcardClass97 = wildcardClassArray95.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(classArray94);
        org.junit.Assert.assertNotNull(wildcardClassArray95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test00171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00171");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType71 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray72 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType71 };
        stdSubtypeResolver2.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray72);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType76 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray77 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType76 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType79 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray80 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType79 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray80);
        java.lang.Class<?> wildcardClass82 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(namedTypeArray72);
        org.junit.Assert.assertNotNull(namedTypeArray77);
        org.junit.Assert.assertNotNull(namedTypeArray80);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test00172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00172");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class[] classArray94 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray95 = (java.lang.Class<?>[]) classArray94;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray95);
        java.lang.Class<?> wildcardClass97 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(classArray94);
        org.junit.Assert.assertNotNull(wildcardClassArray95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test00173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00173");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray76);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray87 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray87);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray87);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?> wildcardClass93 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(namedTypeArray87);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00174");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        java.lang.Class<?>[] wildcardClassArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(namedTypeArray48);
    }

    @Test
    public void test00175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00175");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType69 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType69 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray70);
        java.lang.Class<?> wildcardClass72 = namedTypeArray70.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test00176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00176");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        java.lang.Class<?> wildcardClass47 = wildcardClassArray34.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test00177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00177");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver11 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass12 = stdSubtypeResolver11.getClass();
        java.lang.Class[] classArray14 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        wildcardClassArray15[0] = wildcardClass6;
        wildcardClassArray15[1] = wildcardClass8;
        wildcardClassArray15[2] = wildcardClass10;
        wildcardClassArray15[3] = wildcardClass12;
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray15);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver32 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass33 = stdSubtypeResolver32.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35;
        wildcardClassArray36[0] = wildcardClass27;
        wildcardClassArray36[1] = wildcardClass29;
        wildcardClassArray36[2] = wildcardClass31;
        wildcardClassArray36[3] = wildcardClass33;
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray36);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray36);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray71 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray71);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType73 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray74 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType73 };
        stdSubtypeResolver4.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver3.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver2.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray74);
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(namedTypeArray71);
        org.junit.Assert.assertNotNull(namedTypeArray74);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test00178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00178");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType69 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType69 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray70);
        java.lang.Class<?>[] wildcardClassArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(namedTypeArray70);
    }

    @Test
    public void test00179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00179");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?> wildcardClass95 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00180");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver11 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass12 = stdSubtypeResolver11.getClass();
        java.lang.Class[] classArray14 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        wildcardClassArray15[0] = wildcardClass6;
        wildcardClassArray15[1] = wildcardClass8;
        wildcardClassArray15[2] = wildcardClass10;
        wildcardClassArray15[3] = wildcardClass12;
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray15);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver32 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass33 = stdSubtypeResolver32.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35;
        wildcardClassArray36[0] = wildcardClass27;
        wildcardClassArray36[1] = wildcardClass29;
        wildcardClassArray36[2] = wildcardClass31;
        wildcardClassArray36[3] = wildcardClass33;
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray36);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray36);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray71 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray71);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType73 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray74 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType73 };
        stdSubtypeResolver4.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver3.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver2.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray74);
        java.lang.Class<?> wildcardClass80 = namedTypeArray74.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(namedTypeArray71);
        org.junit.Assert.assertNotNull(namedTypeArray74);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test00181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00181");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray64 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray64);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType90 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType90 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray91);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(namedTypeArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray91);
    }

    @Test
    public void test00182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00182");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
    }

    @Test
    public void test00183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00183");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver10 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass11 = stdSubtypeResolver10.getClass();
        java.lang.Class[] classArray13 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        wildcardClassArray14[0] = wildcardClass5;
        wildcardClassArray14[1] = wildcardClass7;
        wildcardClassArray14[2] = wildcardClass9;
        wildcardClassArray14[3] = wildcardClass11;
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray14);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver31 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass32 = stdSubtypeResolver31.getClass();
        java.lang.Class[] classArray34 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass26;
        wildcardClassArray35[1] = wildcardClass28;
        wildcardClassArray35[2] = wildcardClass30;
        wildcardClassArray35[3] = wildcardClass32;
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray35);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray35);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver3.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        java.lang.Class<?>[] wildcardClassArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
    }

    @Test
    public void test00184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00184");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType69 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType69 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray70);
        java.lang.Class<?> wildcardClass72 = namedTypeArray70.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test00185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00185");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test00186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00186");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver10 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass11 = stdSubtypeResolver10.getClass();
        java.lang.Class[] classArray13 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        wildcardClassArray14[0] = wildcardClass5;
        wildcardClassArray14[1] = wildcardClass7;
        wildcardClassArray14[2] = wildcardClass9;
        wildcardClassArray14[3] = wildcardClass11;
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray14);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver31 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass32 = stdSubtypeResolver31.getClass();
        java.lang.Class[] classArray34 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass26;
        wildcardClassArray35[1] = wildcardClass28;
        wildcardClassArray35[2] = wildcardClass30;
        wildcardClassArray35[3] = wildcardClass32;
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray35);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray35);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver3.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver3.registerSubtypes(namedTypeArray70);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType72 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray73 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType72 };
        stdSubtypeResolver3.registerSubtypes(namedTypeArray73);
        stdSubtypeResolver2.registerSubtypes(namedTypeArray73);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray73);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray73);
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(namedTypeArray73);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test00187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00187");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType71 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray72 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType71 };
        stdSubtypeResolver2.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray72);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType76 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray77 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType76 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType79 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray80 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType79 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray80);
        java.lang.Class<?> wildcardClass82 = namedTypeArray80.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(namedTypeArray72);
        org.junit.Assert.assertNotNull(namedTypeArray77);
        org.junit.Assert.assertNotNull(namedTypeArray80);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test00188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00188");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray83);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType96 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray97 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType96 };
        stdSubtypeResolver49.registerSubtypes(namedTypeArray97);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray97);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(namedTypeArray97);
    }

    @Test
    public void test00189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00189");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver10 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass11 = stdSubtypeResolver10.getClass();
        java.lang.Class[] classArray13 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        wildcardClassArray14[0] = wildcardClass5;
        wildcardClassArray14[1] = wildcardClass7;
        wildcardClassArray14[2] = wildcardClass9;
        wildcardClassArray14[3] = wildcardClass11;
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray14);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver31 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass32 = stdSubtypeResolver31.getClass();
        java.lang.Class[] classArray34 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass26;
        wildcardClassArray35[1] = wildcardClass28;
        wildcardClassArray35[2] = wildcardClass30;
        wildcardClassArray35[3] = wildcardClass32;
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray35);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray35);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver3.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver3.registerSubtypes(namedTypeArray70);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType72 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray73 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType72 };
        stdSubtypeResolver3.registerSubtypes(namedTypeArray73);
        stdSubtypeResolver2.registerSubtypes(namedTypeArray73);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray73);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray73);
        java.lang.Class<?> wildcardClass78 = namedTypeArray73.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(namedTypeArray73);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test00190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00190");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?>[] wildcardClassArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
    }

    @Test
    public void test00191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00191");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver23.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class<?> wildcardClass93 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00192");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
    }

    @Test
    public void test00193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00193");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType71 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray72 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType71 };
        stdSubtypeResolver2.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray72);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType76 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray77 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType76 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType79 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray80 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType79 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(namedTypeArray72);
        org.junit.Assert.assertNotNull(namedTypeArray77);
        org.junit.Assert.assertNotNull(namedTypeArray80);
    }

    @Test
    public void test00194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00194");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType66 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType66 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray69);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray83);
        java.lang.Class<?> wildcardClass94 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00195");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
        java.lang.Class<?>[] wildcardClassArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
    }

    @Test
    public void test00196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00196");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType68 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType68 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray69);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        java.lang.Class<?> wildcardClass72 = namedTypeArray69.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test00197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00197");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver31 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass32 = stdSubtypeResolver31.getClass();
        java.lang.Class[] classArray34 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass26;
        wildcardClassArray35[1] = wildcardClass28;
        wildcardClassArray35[2] = wildcardClass30;
        wildcardClassArray35[3] = wildcardClass32;
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray35);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test00198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00198");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        java.lang.Class<?> wildcardClass96 = wildcardClassArray82.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00199");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver50.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?>[] wildcardClassArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray93);
    }

    @Test
    public void test00200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00200");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray83);
        java.lang.Class<?> wildcardClass96 = wildcardClassArray83.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00201");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver23.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class<?> wildcardClass93 = wildcardClassArray79.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00202");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType89 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType89 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?> wildcardClass92 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test00203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00203");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver31 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass32 = stdSubtypeResolver31.getClass();
        java.lang.Class[] classArray34 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass26;
        wildcardClassArray35[1] = wildcardClass28;
        wildcardClassArray35[2] = wildcardClass30;
        wildcardClassArray35[3] = wildcardClass32;
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray35);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
    }

    @Test
    public void test00204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00204");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class<?>[] wildcardClassArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
    }

    @Test
    public void test00205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00205");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        java.lang.Class[] classArray91 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray92 = (java.lang.Class<?>[]) classArray91;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray92);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray92);
        java.lang.Class<?> wildcardClass95 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(classArray91);
        org.junit.Assert.assertNotNull(wildcardClassArray92);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00206");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray83);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00207");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType94 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray95 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType94 };
        stdSubtypeResolver49.registerSubtypes(namedTypeArray95);
        stdSubtypeResolver48.registerSubtypes(namedTypeArray95);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray95);
        java.lang.Class<?> wildcardClass99 = namedTypeArray95.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray95);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00208");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType66 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType66 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray69);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray83);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
    }

    @Test
    public void test00209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00209");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?> wildcardClass93 = wildcardClassArray80.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00210");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType66 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType66 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray69);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray83);
        java.lang.Class<?> wildcardClass94 = wildcardClassArray83.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00211");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(namedTypeArray48);
    }

    @Test
    public void test00212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00212");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType89 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType89 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?> wildcardClass92 = namedTypeArray90.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test00213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00213");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray89);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType91 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType91 };
        stdSubtypeResolver22.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        java.lang.Class<?> wildcardClass96 = namedTypeArray92.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(namedTypeArray92);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00214");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType69 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType69 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray70);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(namedTypeArray70);
    }

    @Test
    public void test00215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00215");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType67 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray68 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType67 };
        stdSubtypeResolver22.registerSubtypes(namedTypeArray68);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray70);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray70);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver80 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass81 = stdSubtypeResolver80.getClass();
        java.lang.Class[] classArray83 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray84 = (java.lang.Class<?>[]) classArray83;
        wildcardClassArray84[0] = wildcardClass75;
        wildcardClassArray84[1] = wildcardClass77;
        wildcardClassArray84[2] = wildcardClass79;
        wildcardClassArray84[3] = wildcardClass81;
        stdSubtypeResolver73.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray84);
        java.lang.Class<?> wildcardClass96 = wildcardClassArray84.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray68);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertNotNull(wildcardClassArray84);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00216");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType67 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray68 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType67 };
        stdSubtypeResolver22.registerSubtypes(namedTypeArray68);
        stdSubtypeResolver21.registerSubtypes(namedTypeArray68);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray68);
        java.lang.Class<?>[] wildcardClassArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray68);
    }

    @Test
    public void test00217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00217");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?>[] wildcardClassArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(namedTypeArray91);
    }

    @Test
    public void test00218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00218");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray76);
        java.lang.Class<?> wildcardClass89 = wildcardClassArray76.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00219");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray83);
        java.lang.Class[] classArray96 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray97 = (java.lang.Class<?>[]) classArray96;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray97);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray97);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(classArray96);
        org.junit.Assert.assertNotNull(wildcardClassArray97);
    }

    @Test
    public void test00220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00220");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType69 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType69 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray70);
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test00221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00221");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray55);
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test00222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00222");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver10 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass11 = stdSubtypeResolver10.getClass();
        java.lang.Class[] classArray13 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        wildcardClassArray14[0] = wildcardClass5;
        wildcardClassArray14[1] = wildcardClass7;
        wildcardClassArray14[2] = wildcardClass9;
        wildcardClassArray14[3] = wildcardClass11;
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray14);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver31 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass32 = stdSubtypeResolver31.getClass();
        java.lang.Class[] classArray34 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass26;
        wildcardClassArray35[1] = wildcardClass28;
        wildcardClassArray35[2] = wildcardClass30;
        wildcardClassArray35[3] = wildcardClass32;
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray35);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray35);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver3.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver3.registerSubtypes(namedTypeArray70);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType72 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray73 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType72 };
        stdSubtypeResolver3.registerSubtypes(namedTypeArray73);
        stdSubtypeResolver2.registerSubtypes(namedTypeArray73);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray73);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray73);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray78 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(namedTypeArray73);
    }

    @Test
    public void test00223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00223");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType89 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType89 };
        stdSubtypeResolver44.registerSubtypes(namedTypeArray90);
        java.lang.Class<?> wildcardClass92 = stdSubtypeResolver44.getClass();
        java.lang.Class[] classArray94 = new java.lang.Class[1];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray95 = (java.lang.Class<?>[]) classArray94;
        wildcardClassArray95[0] = wildcardClass92;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray95);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray95);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(classArray94);
        org.junit.Assert.assertNotNull(wildcardClassArray95);
    }

    @Test
    public void test00224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00224");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass95 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00225");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        java.lang.Class<?>[] wildcardClassArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
    }

    @Test
    public void test00226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00226");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray88);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray88);
        java.lang.Class<?>[] wildcardClassArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray88);
    }

    @Test
    public void test00227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00227");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray89);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType91 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType91 };
        stdSubtypeResolver22.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(namedTypeArray92);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00228");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class<?>[] wildcardClassArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
    }

    @Test
    public void test00229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00229");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType94 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray95 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType94 };
        stdSubtypeResolver49.registerSubtypes(namedTypeArray95);
        stdSubtypeResolver48.registerSubtypes(namedTypeArray95);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray95);
        java.lang.Class<?> wildcardClass99 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray95);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00230");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        java.lang.Class<?> wildcardClass95 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray92);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00231");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType91 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType91 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        java.lang.Class<?> wildcardClass94 = namedTypeArray92.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray92);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00232");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver47.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver47.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray93);
    }

    @Test
    public void test00233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00233");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        java.lang.Class<?> wildcardClass95 = namedTypeArray92.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray92);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00234");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray55);
        java.lang.Class<?> wildcardClass69 = wildcardClassArray55.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test00235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00235");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray86 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray86);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray86);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType89 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType89 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass95 = namedTypeArray93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray86);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00236");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass93 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00237");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray64 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray64);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(namedTypeArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
    }

    @Test
    public void test00238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00238");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
    }

    @Test
    public void test00239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00239");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        java.lang.Class<?> wildcardClass91 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00240");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class<?> wildcardClass91 = wildcardClassArray79.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00241");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        java.lang.Class[] classArray92 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray93 = (java.lang.Class<?>[]) classArray92;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray93);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray93);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray93);
        java.lang.Class<?> wildcardClass97 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(classArray92);
        org.junit.Assert.assertNotNull(wildcardClassArray93);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test00242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00242");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass95 = namedTypeArray93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00243");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType67 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray68 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType67 };
        stdSubtypeResolver22.registerSubtypes(namedTypeArray68);
        stdSubtypeResolver21.registerSubtypes(namedTypeArray68);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray68);
        java.lang.Class<?> wildcardClass72 = namedTypeArray68.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray68);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test00244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00244");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver59 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass60 = stdSubtypeResolver59.getClass();
        java.lang.Class[] classArray62 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray63 = (java.lang.Class<?>[]) classArray62;
        wildcardClassArray63[0] = wildcardClass54;
        wildcardClassArray63[1] = wildcardClass56;
        wildcardClassArray63[2] = wildcardClass58;
        wildcardClassArray63[3] = wildcardClass60;
        stdSubtypeResolver52.registerSubtypes(wildcardClassArray63);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver80 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass81 = stdSubtypeResolver80.getClass();
        java.lang.Class[] classArray83 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray84 = (java.lang.Class<?>[]) classArray83;
        wildcardClassArray84[0] = wildcardClass75;
        wildcardClassArray84[1] = wildcardClass77;
        wildcardClassArray84[2] = wildcardClass79;
        wildcardClassArray84[3] = wildcardClass81;
        stdSubtypeResolver73.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver52.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray84);
        java.lang.Class<?> wildcardClass98 = wildcardClassArray84.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertNotNull(wildcardClassArray84);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00245");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        java.lang.Class[] classArray91 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray92 = (java.lang.Class<?>[]) classArray91;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray92);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray92);
        java.lang.Class<?>[] wildcardClassArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(classArray91);
        org.junit.Assert.assertNotNull(wildcardClassArray92);
    }

    @Test
    public void test00246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00246");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray86 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray86);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray86);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType89 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType89 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass95 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray86);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00247");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?>[] wildcardClassArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray90);
    }

    @Test
    public void test00248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00248");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType68 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType68 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray69);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray83);
        java.lang.Class<?> wildcardClass94 = wildcardClassArray83.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00249");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        java.lang.Class[] classArray91 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray92 = (java.lang.Class<?>[]) classArray91;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray92);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray92);
        java.lang.Class<?> wildcardClass95 = wildcardClassArray92.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(classArray91);
        org.junit.Assert.assertNotNull(wildcardClassArray92);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00250");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver11 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass12 = stdSubtypeResolver11.getClass();
        java.lang.Class[] classArray14 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        wildcardClassArray15[0] = wildcardClass6;
        wildcardClassArray15[1] = wildcardClass8;
        wildcardClassArray15[2] = wildcardClass10;
        wildcardClassArray15[3] = wildcardClass12;
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray15);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver32 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass33 = stdSubtypeResolver32.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35;
        wildcardClassArray36[0] = wildcardClass27;
        wildcardClassArray36[1] = wildcardClass29;
        wildcardClassArray36[2] = wildcardClass31;
        wildcardClassArray36[3] = wildcardClass33;
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray36);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray36);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray71 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray71);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType73 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray74 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType73 };
        stdSubtypeResolver4.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver3.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver2.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray74);
        java.lang.Class[] classArray81 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        java.lang.Class<?> wildcardClass84 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(namedTypeArray71);
        org.junit.Assert.assertNotNull(namedTypeArray74);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test00251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00251");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        java.lang.Class<?> wildcardClass89 = wildcardClassArray77.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00252");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray76);
        java.lang.Class<?> wildcardClass89 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00253");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver59 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass60 = stdSubtypeResolver59.getClass();
        java.lang.Class[] classArray62 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray63 = (java.lang.Class<?>[]) classArray62;
        wildcardClassArray63[0] = wildcardClass54;
        wildcardClassArray63[1] = wildcardClass56;
        wildcardClassArray63[2] = wildcardClass58;
        wildcardClassArray63[3] = wildcardClass60;
        stdSubtypeResolver52.registerSubtypes(wildcardClassArray63);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver80 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass81 = stdSubtypeResolver80.getClass();
        java.lang.Class[] classArray83 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray84 = (java.lang.Class<?>[]) classArray83;
        wildcardClassArray84[0] = wildcardClass75;
        wildcardClassArray84[1] = wildcardClass77;
        wildcardClassArray84[2] = wildcardClass79;
        wildcardClassArray84[3] = wildcardClass81;
        stdSubtypeResolver73.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver52.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray84);
        java.lang.Class<?> wildcardClass98 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertNotNull(wildcardClassArray84);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00254");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass93 = namedTypeArray91.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00255");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver50.registerSubtypes(namedTypeArray93);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType95 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray96 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType95 };
        stdSubtypeResolver50.registerSubtypes(namedTypeArray96);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray96);
        java.lang.Class<?> wildcardClass99 = namedTypeArray96.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(namedTypeArray96);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00256");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class<?> wildcardClass91 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00257");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver47.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        java.lang.Class<?> wildcardClass95 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray92);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00258");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        java.lang.Class[] classArray92 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray93 = (java.lang.Class<?>[]) classArray92;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray93);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray93);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray93);
        java.lang.Class<?> wildcardClass97 = wildcardClassArray93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(classArray92);
        org.junit.Assert.assertNotNull(wildcardClassArray93);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test00259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00259");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType71 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray72 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType71 };
        stdSubtypeResolver2.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray72);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType76 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray77 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType76 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType79 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray80 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType79 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray80);
        java.lang.Class<?>[] wildcardClassArray82 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(namedTypeArray72);
        org.junit.Assert.assertNotNull(namedTypeArray77);
        org.junit.Assert.assertNotNull(namedTypeArray80);
    }

    @Test
    public void test00260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00260");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray59);
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test00261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00261");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        java.lang.Class<?> wildcardClass89 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test00262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00262");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType68 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType68 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray69);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(namedTypeArray69);
    }

    @Test
    public void test00263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00263");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType94 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray95 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType94 };
        stdSubtypeResolver49.registerSubtypes(namedTypeArray95);
        stdSubtypeResolver48.registerSubtypes(namedTypeArray95);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray95);
        java.lang.Class<?> wildcardClass99 = namedTypeArray95.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray95);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00264");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType67 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray68 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType67 };
        stdSubtypeResolver22.registerSubtypes(namedTypeArray68);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray70);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray70);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver80 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass81 = stdSubtypeResolver80.getClass();
        java.lang.Class[] classArray83 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray84 = (java.lang.Class<?>[]) classArray83;
        wildcardClassArray84[0] = wildcardClass75;
        wildcardClassArray84[1] = wildcardClass77;
        wildcardClassArray84[2] = wildcardClass79;
        wildcardClassArray84[3] = wildcardClass81;
        stdSubtypeResolver73.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray84);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray68);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertNotNull(wildcardClassArray84);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00265");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver50.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00266");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver31 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass32 = stdSubtypeResolver31.getClass();
        java.lang.Class[] classArray34 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass26;
        wildcardClassArray35[1] = wildcardClass28;
        wildcardClassArray35[2] = wildcardClass30;
        wildcardClassArray35[3] = wildcardClass32;
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray35);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        java.lang.Class<?> wildcardClass71 = wildcardClassArray56.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test00267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00267");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray64 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray64);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        java.lang.Class<?>[] wildcardClassArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(namedTypeArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
    }

    @Test
    public void test00268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00268");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
    }

    @Test
    public void test00269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00269");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver11 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass12 = stdSubtypeResolver11.getClass();
        java.lang.Class[] classArray14 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        wildcardClassArray15[0] = wildcardClass6;
        wildcardClassArray15[1] = wildcardClass8;
        wildcardClassArray15[2] = wildcardClass10;
        wildcardClassArray15[3] = wildcardClass12;
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray15);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver32 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass33 = stdSubtypeResolver32.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35;
        wildcardClassArray36[0] = wildcardClass27;
        wildcardClassArray36[1] = wildcardClass29;
        wildcardClassArray36[2] = wildcardClass31;
        wildcardClassArray36[3] = wildcardClass33;
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray36);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray36);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray71 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray71);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType73 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray74 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType73 };
        stdSubtypeResolver4.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver3.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver2.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray74);
        java.lang.Class<?>[] wildcardClassArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(namedTypeArray71);
        org.junit.Assert.assertNotNull(namedTypeArray74);
    }

    @Test
    public void test00270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00270");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        java.lang.Class<?>[] wildcardClassArray48 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
    }

    @Test
    public void test00271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00271");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass93 = namedTypeArray91.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00272");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray59);
        java.lang.Class<?> wildcardClass70 = wildcardClassArray59.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test00273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00273");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass93 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00274");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass93 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00275");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?>[] wildcardClassArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(namedTypeArray93);
    }

    @Test
    public void test00276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00276");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
    }

    @Test
    public void test00277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00277");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver23.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray79);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver23.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver23.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver22.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver21.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass98 = namedTypeArray93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00278");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver47.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        java.lang.Class<?> wildcardClass95 = namedTypeArray92.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray92);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00279");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType68 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType68 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray69);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test00280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00280");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        java.lang.Class[] classArray92 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray93 = (java.lang.Class<?>[]) classArray92;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray93);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray93);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray93);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(classArray92);
        org.junit.Assert.assertNotNull(wildcardClassArray93);
    }

    @Test
    public void test00281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00281");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
    }

    @Test
    public void test00282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00282");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00283");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        java.lang.Class[] classArray91 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray92 = (java.lang.Class<?>[]) classArray91;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray92);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray92);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(classArray91);
        org.junit.Assert.assertNotNull(wildcardClassArray92);
    }

    @Test
    public void test00284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00284");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver47.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray98 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray94);
    }

    @Test
    public void test00285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00285");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType87 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType87 };
        stdSubtypeResolver42.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver42.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver21.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00286");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test00287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00287");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
    }

    @Test
    public void test00288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00288");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass93 = namedTypeArray91.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00289");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass93 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00290");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray64 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray64);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType88 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType88 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray89);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(namedTypeArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray89);
    }

    @Test
    public void test00291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00291");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType87 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType87 };
        stdSubtypeResolver42.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver42.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver21.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?> wildcardClass94 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00292");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?> wildcardClass93 = namedTypeArray90.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00293");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType87 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType87 };
        stdSubtypeResolver42.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver42.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver21.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass96 = namedTypeArray94.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00294");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver11 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass12 = stdSubtypeResolver11.getClass();
        java.lang.Class[] classArray14 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        wildcardClassArray15[0] = wildcardClass6;
        wildcardClassArray15[1] = wildcardClass8;
        wildcardClassArray15[2] = wildcardClass10;
        wildcardClassArray15[3] = wildcardClass12;
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray15);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver32 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass33 = stdSubtypeResolver32.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35;
        wildcardClassArray36[0] = wildcardClass27;
        wildcardClassArray36[1] = wildcardClass29;
        wildcardClassArray36[2] = wildcardClass31;
        wildcardClassArray36[3] = wildcardClass33;
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray36);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray36);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray71 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray71);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType73 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray74 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType73 };
        stdSubtypeResolver4.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver3.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver2.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray74);
        java.lang.Class[] classArray81 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(namedTypeArray71);
        org.junit.Assert.assertNotNull(namedTypeArray74);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
    }

    @Test
    public void test00295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00295");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver23.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray79);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver23.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver23.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver22.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver21.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass98 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00296");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray76);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray87 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray87);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray87);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(namedTypeArray87);
        org.junit.Assert.assertNotNull(namedTypeArray90);
    }

    @Test
    public void test00297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00297");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType94 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray95 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType94 };
        stdSubtypeResolver49.registerSubtypes(namedTypeArray95);
        stdSubtypeResolver48.registerSubtypes(namedTypeArray95);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray95);
        java.lang.Class<?> wildcardClass99 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray95);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00298");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class<?> wildcardClass93 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00299");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver23.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(namedTypeArray94);
    }

    @Test
    public void test00300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00300");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class<?>[] wildcardClassArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
    }

    @Test
    public void test00301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00301");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray49 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
    }

    @Test
    public void test00302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00302");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        java.lang.Class<?>[] wildcardClassArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
    }

    @Test
    public void test00303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00303");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray48);
    }

    @Test
    public void test00304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00304");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?>[] wildcardClassArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
    }

    @Test
    public void test00305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00305");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        java.lang.Class<?>[] wildcardClassArray21 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
    }

    @Test
    public void test00306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00306");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass95 = wildcardClassArray81.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00307");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class<?> wildcardClass93 = wildcardClassArray79.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00308");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType87 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType87 };
        stdSubtypeResolver42.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver42.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver21.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?> wildcardClass94 = namedTypeArray90.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00309");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType90 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType90 };
        stdSubtypeResolver45.registerSubtypes(namedTypeArray91);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray91);
    }

    @Test
    public void test00310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00310");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass95 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00311");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver47.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray92);
    }

    @Test
    public void test00312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00312");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray57);
        java.lang.Class<?>[] wildcardClassArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
    }

    @Test
    public void test00313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00313");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType68 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType68 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray69);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray83);
        java.lang.Class<?> wildcardClass94 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00314");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver23.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00315");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?>[] wildcardClassArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray91);
    }

    @Test
    public void test00316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00316");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray83);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray95 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver50.registerSubtypes(namedTypeArray95);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray95);
        java.lang.Class<?> wildcardClass98 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(namedTypeArray95);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00317");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray83);
        java.lang.Class[] classArray96 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray97 = (java.lang.Class<?>[]) classArray96;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray97);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray97);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(classArray96);
        org.junit.Assert.assertNotNull(wildcardClassArray97);
    }

    @Test
    public void test00318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00318");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType90 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType90 };
        stdSubtypeResolver45.registerSubtypes(namedTypeArray91);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass94 = namedTypeArray91.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00319");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver11 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass12 = stdSubtypeResolver11.getClass();
        java.lang.Class[] classArray14 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        wildcardClassArray15[0] = wildcardClass6;
        wildcardClassArray15[1] = wildcardClass8;
        wildcardClassArray15[2] = wildcardClass10;
        wildcardClassArray15[3] = wildcardClass12;
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray15);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver32 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass33 = stdSubtypeResolver32.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35;
        wildcardClassArray36[0] = wildcardClass27;
        wildcardClassArray36[1] = wildcardClass29;
        wildcardClassArray36[2] = wildcardClass31;
        wildcardClassArray36[3] = wildcardClass33;
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray36);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray36);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray71 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray71);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType73 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray74 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType73 };
        stdSubtypeResolver4.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver3.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver2.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray74);
        java.lang.Class[] classArray81 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        java.lang.Class<?> wildcardClass84 = wildcardClassArray82.getClass();
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(namedTypeArray71);
        org.junit.Assert.assertNotNull(namedTypeArray74);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test00320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00320");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver11 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass12 = stdSubtypeResolver11.getClass();
        java.lang.Class[] classArray14 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        wildcardClassArray15[0] = wildcardClass6;
        wildcardClassArray15[1] = wildcardClass8;
        wildcardClassArray15[2] = wildcardClass10;
        wildcardClassArray15[3] = wildcardClass12;
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray15);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver32 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass33 = stdSubtypeResolver32.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35;
        wildcardClassArray36[0] = wildcardClass27;
        wildcardClassArray36[1] = wildcardClass29;
        wildcardClassArray36[2] = wildcardClass31;
        wildcardClassArray36[3] = wildcardClass33;
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray36);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray36);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray71 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray71);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType73 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray74 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType73 };
        stdSubtypeResolver4.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver3.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver2.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray74);
        java.lang.Class[] classArray81 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        java.lang.Class<?>[] wildcardClassArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(namedTypeArray71);
        org.junit.Assert.assertNotNull(namedTypeArray74);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
    }

    @Test
    public void test00321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00321");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass93 = wildcardClassArray81.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00322");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver32 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass33 = stdSubtypeResolver32.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35;
        wildcardClassArray36[0] = wildcardClass27;
        wildcardClassArray36[1] = wildcardClass29;
        wildcardClassArray36[2] = wildcardClass31;
        wildcardClassArray36[3] = wildcardClass33;
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray36);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray57);
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test00323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00323");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType71 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray72 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType71 };
        stdSubtypeResolver2.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray72);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray72);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType76 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray77 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType76 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray77);
        java.lang.Class<?>[] wildcardClassArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(namedTypeArray72);
        org.junit.Assert.assertNotNull(namedTypeArray77);
    }

    @Test
    public void test00324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00324");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType89 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType89 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray90);
    }

    @Test
    public void test00325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00325");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray59);
        java.lang.Class<?>[] wildcardClassArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
    }

    @Test
    public void test00326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00326");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver47.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass98 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00327");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray88);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray88);
    }

    @Test
    public void test00328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00328");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray83);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray95 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver50.registerSubtypes(namedTypeArray95);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray95);
        java.lang.Class<?> wildcardClass98 = namedTypeArray95.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(namedTypeArray95);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00329");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver10 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass11 = stdSubtypeResolver10.getClass();
        java.lang.Class[] classArray13 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        wildcardClassArray14[0] = wildcardClass5;
        wildcardClassArray14[1] = wildcardClass7;
        wildcardClassArray14[2] = wildcardClass9;
        wildcardClassArray14[3] = wildcardClass11;
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray14);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver31 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass32 = stdSubtypeResolver31.getClass();
        java.lang.Class[] classArray34 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass26;
        wildcardClassArray35[1] = wildcardClass28;
        wildcardClassArray35[2] = wildcardClass30;
        wildcardClassArray35[3] = wildcardClass32;
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray35);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray35);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver3.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
    }

    @Test
    public void test00330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00330");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?> wildcardClass93 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00331");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray55);
        java.lang.Class<?>[] wildcardClassArray69 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
    }

    @Test
    public void test00332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00332");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver23.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray79);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver23.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver23.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver22.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver21.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?>[] wildcardClassArray98 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray93);
    }

    @Test
    public void test00333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00333");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType90 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType90 };
        stdSubtypeResolver45.registerSubtypes(namedTypeArray91);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass94 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00334");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray83);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
    }

    @Test
    public void test00335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00335");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver32 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass33 = stdSubtypeResolver32.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35;
        wildcardClassArray36[0] = wildcardClass27;
        wildcardClassArray36[1] = wildcardClass29;
        wildcardClassArray36[2] = wildcardClass31;
        wildcardClassArray36[3] = wildcardClass33;
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray36);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver80 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass81 = stdSubtypeResolver80.getClass();
        java.lang.Class[] classArray83 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray84 = (java.lang.Class<?>[]) classArray83;
        wildcardClassArray84[0] = wildcardClass75;
        wildcardClassArray84[1] = wildcardClass77;
        wildcardClassArray84[2] = wildcardClass79;
        wildcardClassArray84[3] = wildcardClass81;
        stdSubtypeResolver73.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray84);
        java.lang.Class<?> wildcardClass95 = wildcardClassArray84.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertNotNull(wildcardClassArray84);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00336");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?>[] wildcardClassArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
    }

    @Test
    public void test00337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00337");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver45.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass96 = namedTypeArray93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00338");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
    }

    @Test
    public void test00339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00339");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver23.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass96 = namedTypeArray94.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00340");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver50.registerSubtypes(namedTypeArray93);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType95 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray96 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType95 };
        stdSubtypeResolver50.registerSubtypes(namedTypeArray96);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray96);
        java.lang.Class<?> wildcardClass99 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(namedTypeArray96);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00341");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver47.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass98 = namedTypeArray94.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00342");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray60);
        java.lang.Class<?> wildcardClass71 = wildcardClassArray60.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test00343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00343");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        java.lang.Class<?> wildcardClass91 = wildcardClassArray78.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00344");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        java.lang.Class<?> wildcardClass91 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00345");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
    }

    @Test
    public void test00346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00346");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver50.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass96 = namedTypeArray93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00347");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray60);
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test00348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00348");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
    }

    @Test
    public void test00349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00349");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        java.lang.Class<?> wildcardClass91 = namedTypeArray89.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test00350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00350");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver11 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass12 = stdSubtypeResolver11.getClass();
        java.lang.Class[] classArray14 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray15 = (java.lang.Class<?>[]) classArray14;
        wildcardClassArray15[0] = wildcardClass6;
        wildcardClassArray15[1] = wildcardClass8;
        wildcardClassArray15[2] = wildcardClass10;
        wildcardClassArray15[3] = wildcardClass12;
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray15);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver32 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass33 = stdSubtypeResolver32.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35;
        wildcardClassArray36[0] = wildcardClass27;
        wildcardClassArray36[1] = wildcardClass29;
        wildcardClassArray36[2] = wildcardClass31;
        wildcardClassArray36[3] = wildcardClass33;
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray36);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray36);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        stdSubtypeResolver4.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray71 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver4.registerSubtypes(namedTypeArray71);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType73 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray74 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType73 };
        stdSubtypeResolver4.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver3.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver2.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray74);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray74);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(classArray14);
        org.junit.Assert.assertNotNull(wildcardClassArray15);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(namedTypeArray71);
        org.junit.Assert.assertNotNull(namedTypeArray74);
    }

    @Test
    public void test00351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00351");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType91 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType91 };
        stdSubtypeResolver46.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver45.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(namedTypeArray92);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00352");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray68 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray68);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass93 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(namedTypeArray68);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00353");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray64 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray64);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType88 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType88 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray89);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        java.lang.Class<?>[] wildcardClassArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(namedTypeArray64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray89);
    }

    @Test
    public void test00354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00354");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver48.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?>[] wildcardClassArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray93);
    }

    @Test
    public void test00355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00355");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver45.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00356");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType87 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType87 };
        stdSubtypeResolver42.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver42.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver21.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?>[] wildcardClassArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray90);
    }

    @Test
    public void test00357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00357");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray68 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray68);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass93 = wildcardClassArray81.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(namedTypeArray68);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00358");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver32 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass33 = stdSubtypeResolver32.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35;
        wildcardClassArray36[0] = wildcardClass27;
        wildcardClassArray36[1] = wildcardClass29;
        wildcardClassArray36[2] = wildcardClass31;
        wildcardClassArray36[3] = wildcardClass33;
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray36);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver80 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass81 = stdSubtypeResolver80.getClass();
        java.lang.Class[] classArray83 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray84 = (java.lang.Class<?>[]) classArray83;
        wildcardClassArray84[0] = wildcardClass75;
        wildcardClassArray84[1] = wildcardClass77;
        wildcardClassArray84[2] = wildcardClass79;
        wildcardClassArray84[3] = wildcardClass81;
        stdSubtypeResolver73.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray84);
        java.lang.Class<?>[] wildcardClassArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertNotNull(wildcardClassArray84);
    }

    @Test
    public void test00359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00359");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver50.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00360");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass94 = wildcardClassArray81.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00361");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray88);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass93 = namedTypeArray91.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test00362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00362");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType67 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray68 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType67 };
        stdSubtypeResolver22.registerSubtypes(namedTypeArray68);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray70);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray70);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver80 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass81 = stdSubtypeResolver80.getClass();
        java.lang.Class[] classArray83 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray84 = (java.lang.Class<?>[]) classArray83;
        wildcardClassArray84[0] = wildcardClass75;
        wildcardClassArray84[1] = wildcardClass77;
        wildcardClassArray84[2] = wildcardClass79;
        wildcardClassArray84[3] = wildcardClass81;
        stdSubtypeResolver73.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray84);
        java.lang.Class<?>[] wildcardClassArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray68);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertNotNull(wildcardClassArray84);
    }

    @Test
    public void test00363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00363");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver49.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass98 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00364");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        java.lang.Class<?>[] wildcardClassArray48 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
    }

    @Test
    public void test00365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00365");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver32 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass33 = stdSubtypeResolver32.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35;
        wildcardClassArray36[0] = wildcardClass27;
        wildcardClassArray36[1] = wildcardClass29;
        wildcardClassArray36[2] = wildcardClass31;
        wildcardClassArray36[3] = wildcardClass33;
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray36);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver80 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass81 = stdSubtypeResolver80.getClass();
        java.lang.Class[] classArray83 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray84 = (java.lang.Class<?>[]) classArray83;
        wildcardClassArray84[0] = wildcardClass75;
        wildcardClassArray84[1] = wildcardClass77;
        wildcardClassArray84[2] = wildcardClass79;
        wildcardClassArray84[3] = wildcardClass81;
        stdSubtypeResolver73.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray84);
        java.lang.Class<?> wildcardClass95 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertNotNull(wildcardClassArray84);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00366");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray76);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray87 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray87);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray87);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?>[] wildcardClassArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(namedTypeArray87);
        org.junit.Assert.assertNotNull(namedTypeArray90);
    }

    @Test
    public void test00367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00367");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray67);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass96 = namedTypeArray93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00368");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass97 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test00369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00369");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00370");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray83);
        java.lang.Class<?> wildcardClass98 = wildcardClassArray83.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00371");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?>[] wildcardClassArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
    }

    @Test
    public void test00372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00372");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test00373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00373");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass96 = namedTypeArray94.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00374");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        java.lang.Class<?> wildcardClass94 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00375");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver49.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass98 = namedTypeArray94.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00376");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType91 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType91 };
        stdSubtypeResolver46.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver45.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        java.lang.Class<?> wildcardClass96 = namedTypeArray92.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(namedTypeArray92);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00377");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver32 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass33 = stdSubtypeResolver32.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35;
        wildcardClassArray36[0] = wildcardClass27;
        wildcardClassArray36[1] = wildcardClass29;
        wildcardClassArray36[2] = wildcardClass31;
        wildcardClassArray36[3] = wildcardClass33;
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray36);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray57);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray57);
        java.lang.Class<?>[] wildcardClassArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
    }

    @Test
    public void test00378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00378");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray88);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?>[] wildcardClassArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray91);
    }

    @Test
    public void test00379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00379");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass97 = namedTypeArray94.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test00380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00380");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver10 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass11 = stdSubtypeResolver10.getClass();
        java.lang.Class[] classArray13 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        wildcardClassArray14[0] = wildcardClass5;
        wildcardClassArray14[1] = wildcardClass7;
        wildcardClassArray14[2] = wildcardClass9;
        wildcardClassArray14[3] = wildcardClass11;
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray14);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver31 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass32 = stdSubtypeResolver31.getClass();
        java.lang.Class[] classArray34 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass26;
        wildcardClassArray35[1] = wildcardClass28;
        wildcardClassArray35[2] = wildcardClass30;
        wildcardClassArray35[3] = wildcardClass32;
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray35);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray35);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray35);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        java.lang.Class[] classArray93 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray94 = (java.lang.Class<?>[]) classArray93;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray94);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray94);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray94);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray94);
        java.lang.Class<?> wildcardClass99 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(classArray93);
        org.junit.Assert.assertNotNull(wildcardClassArray94);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00381");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
    }

    @Test
    public void test00382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00382");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray80);
        java.lang.Class[] classArray95 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray96 = (java.lang.Class<?>[]) classArray95;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray96);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray96);
        java.lang.Class<?> wildcardClass99 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(classArray95);
        org.junit.Assert.assertNotNull(wildcardClassArray96);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00383");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?> wildcardClass95 = wildcardClassArray80.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00384");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass94 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00385");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver59 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass60 = stdSubtypeResolver59.getClass();
        java.lang.Class[] classArray62 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray63 = (java.lang.Class<?>[]) classArray62;
        wildcardClassArray63[0] = wildcardClass54;
        wildcardClassArray63[1] = wildcardClass56;
        wildcardClassArray63[2] = wildcardClass58;
        wildcardClassArray63[3] = wildcardClass60;
        stdSubtypeResolver52.registerSubtypes(wildcardClassArray63);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver80 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass81 = stdSubtypeResolver80.getClass();
        java.lang.Class[] classArray83 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray84 = (java.lang.Class<?>[]) classArray83;
        wildcardClassArray84[0] = wildcardClass75;
        wildcardClassArray84[1] = wildcardClass77;
        wildcardClassArray84[2] = wildcardClass79;
        wildcardClassArray84[3] = wildcardClass81;
        stdSubtypeResolver73.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver52.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray84);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray98 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray98);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(classArray62);
        org.junit.Assert.assertNotNull(wildcardClassArray63);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertNotNull(wildcardClassArray84);
        org.junit.Assert.assertNotNull(namedTypeArray98);
    }

    @Test
    public void test00386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00386");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?>[] wildcardClassArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
    }

    @Test
    public void test00387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00387");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?>[] wildcardClassArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
    }

    @Test
    public void test00388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00388");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        java.lang.Class<?> wildcardClass47 = namedTypeArray45.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test00389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00389");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        java.lang.Class<?>[] wildcardClassArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray92);
    }

    @Test
    public void test00390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00390");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray75);
        java.lang.Class<?> wildcardClass87 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test00391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00391");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray83);
        java.lang.Class<?> wildcardClass98 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00392");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver48.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray93);
    }

    @Test
    public void test00393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00393");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray75);
        java.lang.Class<?> wildcardClass87 = wildcardClassArray75.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test00394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00394");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver10 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass11 = stdSubtypeResolver10.getClass();
        java.lang.Class[] classArray13 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        wildcardClassArray14[0] = wildcardClass5;
        wildcardClassArray14[1] = wildcardClass7;
        wildcardClassArray14[2] = wildcardClass9;
        wildcardClassArray14[3] = wildcardClass11;
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray14);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver31 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass32 = stdSubtypeResolver31.getClass();
        java.lang.Class[] classArray34 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass26;
        wildcardClassArray35[1] = wildcardClass28;
        wildcardClassArray35[2] = wildcardClass30;
        wildcardClassArray35[3] = wildcardClass32;
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray35);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray35);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray35);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        java.lang.Class[] classArray93 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray94 = (java.lang.Class<?>[]) classArray93;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray94);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray94);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray94);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray94);
        java.lang.Class<?> wildcardClass99 = wildcardClassArray94.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(classArray93);
        org.junit.Assert.assertNotNull(wildcardClassArray94);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00395");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray61);
        java.lang.Class<?> wildcardClass72 = wildcardClassArray61.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test00396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00396");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray61);
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test00397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00397");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver23.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class<?>[] wildcardClassArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
    }

    @Test
    public void test00398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00398");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray59);
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test00399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00399");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType87 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType87 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray88);
        java.lang.Class<?> wildcardClass90 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test00400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00400");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
        java.lang.Class<?> wildcardClass50 = namedTypeArray47.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test00401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00401");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType69 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType69 };
        stdSubtypeResolver22.registerSubtypes(namedTypeArray70);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray70);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray70);
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test00402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00402");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray67);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00403");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(namedTypeArray93);
    }

    @Test
    public void test00404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00404");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType67 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray68 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType67 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray68);
        java.lang.Class<?>[] wildcardClassArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(namedTypeArray68);
    }

    @Test
    public void test00405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00405");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray58);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
    }

    @Test
    public void test00406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00406");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        java.lang.Class<?> wildcardClass94 = wildcardClassArray82.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00407");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver49.registerSubtypes(namedTypeArray92);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType94 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray95 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType94 };
        stdSubtypeResolver49.registerSubtypes(namedTypeArray95);
        stdSubtypeResolver48.registerSubtypes(namedTypeArray95);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray95);
        java.lang.Class<?> wildcardClass99 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray92);
        org.junit.Assert.assertNotNull(namedTypeArray95);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00408");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType67 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray68 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType67 };
        stdSubtypeResolver22.registerSubtypes(namedTypeArray68);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray70);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray70);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver80 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass81 = stdSubtypeResolver80.getClass();
        java.lang.Class[] classArray83 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray84 = (java.lang.Class<?>[]) classArray83;
        wildcardClassArray84[0] = wildcardClass75;
        wildcardClassArray84[1] = wildcardClass77;
        wildcardClassArray84[2] = wildcardClass79;
        wildcardClassArray84[3] = wildcardClass81;
        stdSubtypeResolver73.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray84);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray84);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray68);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(classArray83);
        org.junit.Assert.assertNotNull(wildcardClassArray84);
    }

    @Test
    public void test00409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00409");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class[] classArray94 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray95 = (java.lang.Class<?>[]) classArray94;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray95);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(classArray94);
        org.junit.Assert.assertNotNull(wildcardClassArray95);
    }

    @Test
    public void test00410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00410");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        java.lang.Class<?>[] wildcardClassArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
    }

    @Test
    public void test00411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00411");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        java.lang.Class<?> wildcardClass97 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test00412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00412");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass95 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00413");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass95 = namedTypeArray93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00414");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        java.lang.Class<?> wildcardClass97 = wildcardClassArray82.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test00415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00415");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
    }

    @Test
    public void test00416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00416");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test00417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00417");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType96 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray97 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType96 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray97);
        java.lang.Class<?> wildcardClass99 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(namedTypeArray97);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00418");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver31 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass32 = stdSubtypeResolver31.getClass();
        java.lang.Class[] classArray34 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass26;
        wildcardClassArray35[1] = wildcardClass28;
        wildcardClassArray35[2] = wildcardClass30;
        wildcardClassArray35[3] = wildcardClass32;
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray35);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        java.lang.Class<?>[] wildcardClassArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
    }

    @Test
    public void test00419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00419");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray88);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType91 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType91 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        java.lang.Class<?> wildcardClass94 = namedTypeArray92.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray92);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00420");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass95 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00421");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        java.lang.Class<?>[] wildcardClassArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(namedTypeArray69);
    }

    @Test
    public void test00422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00422");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass95 = wildcardClassArray81.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00423");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?> wildcardClass95 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00424");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class[] classArray94 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray95 = (java.lang.Class<?>[]) classArray94;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray95);
        java.lang.Class<?>[] wildcardClassArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(classArray94);
        org.junit.Assert.assertNotNull(wildcardClassArray95);
    }

    @Test
    public void test00425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00425");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        java.lang.Class<?>[] wildcardClassArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
    }

    @Test
    public void test00426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00426");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType69 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType69 };
        stdSubtypeResolver22.registerSubtypes(namedTypeArray70);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray70);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray70);
        java.lang.Class<?>[] wildcardClassArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(namedTypeArray70);
    }

    @Test
    public void test00427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00427");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(namedTypeArray91);
    }

    @Test
    public void test00428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00428");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType90 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType90 };
        stdSubtypeResolver45.registerSubtypes(namedTypeArray91);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?>[] wildcardClassArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray91);
    }

    @Test
    public void test00429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00429");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray65 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray65);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(namedTypeArray94);
    }

    @Test
    public void test00430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00430");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
        java.lang.Class<?>[] wildcardClassArray50 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(namedTypeArray47);
    }

    @Test
    public void test00431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00431");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver48.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(namedTypeArray94);
    }

    @Test
    public void test00432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00432");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        java.lang.Class<?>[] wildcardClassArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray45);
    }

    @Test
    public void test00433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00433");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver2.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray80);
        java.lang.Class[] classArray95 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray96 = (java.lang.Class<?>[]) classArray95;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray96);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray96);
        java.lang.Class<?> wildcardClass99 = wildcardClassArray96.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(classArray95);
        org.junit.Assert.assertNotNull(wildcardClassArray96);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00434");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray83);
        java.lang.Class<?>[] wildcardClassArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
    }

    @Test
    public void test00435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00435");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType69 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType69 };
        stdSubtypeResolver22.registerSubtypes(namedTypeArray70);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray70);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray70);
        java.lang.Class<?> wildcardClass74 = namedTypeArray70.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test00436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00436");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
    }

    @Test
    public void test00437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00437");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray62);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray62);
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test00438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00438");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver47.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?>[] wildcardClassArray98 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray94);
    }

    @Test
    public void test00439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00439");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType49 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray50 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType49 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray50);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType52 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray53 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType52 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray53);
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(namedTypeArray50);
        org.junit.Assert.assertNotNull(namedTypeArray53);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test00440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00440");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType91 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType91 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        java.lang.Class<?>[] wildcardClassArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray92);
    }

    @Test
    public void test00441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00441");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver47.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray98 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray94);
    }

    @Test
    public void test00442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00442");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver45.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00443");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test00444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00444");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray91);
    }

    @Test
    public void test00445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00445");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        java.lang.Class<?> wildcardClass45 = wildcardClassArray34.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test00446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00446");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver32 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass33 = stdSubtypeResolver32.getClass();
        java.lang.Class[] classArray35 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray36 = (java.lang.Class<?>[]) classArray35;
        wildcardClassArray36[0] = wildcardClass27;
        wildcardClassArray36[1] = wildcardClass29;
        wildcardClassArray36[2] = wildcardClass31;
        wildcardClassArray36[3] = wildcardClass33;
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray36);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver25.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        java.lang.Class<?> wildcardClass97 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(classArray35);
        org.junit.Assert.assertNotNull(wildcardClassArray36);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test00447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00447");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType94 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray95 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType94 };
        stdSubtypeResolver49.registerSubtypes(namedTypeArray95);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray95);
        java.lang.Class<?> wildcardClass98 = namedTypeArray95.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray95);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00448");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver49.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray98 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray98);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(namedTypeArray98);
    }

    @Test
    public void test00449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00449");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType91 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType91 };
        stdSubtypeResolver46.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver45.registerSubtypes(namedTypeArray92);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(namedTypeArray92);
    }

    @Test
    public void test00450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00450");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType49 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray50 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType49 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray50);
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(namedTypeArray50);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test00451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00451");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        java.lang.Class[] classArray92 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray93 = (java.lang.Class<?>[]) classArray92;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray93);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray93);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray93);
        java.lang.Class<?>[] wildcardClassArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(classArray92);
        org.junit.Assert.assertNotNull(wildcardClassArray93);
    }

    @Test
    public void test00452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00452");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver49.registerSubtypes(namedTypeArray92);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType94 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray95 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType94 };
        stdSubtypeResolver49.registerSubtypes(namedTypeArray95);
        stdSubtypeResolver48.registerSubtypes(namedTypeArray95);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray95);
        java.lang.Class<?> wildcardClass99 = namedTypeArray95.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray92);
        org.junit.Assert.assertNotNull(namedTypeArray95);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00453");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray12);
        java.lang.Class<?> wildcardClass23 = wildcardClassArray12.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test00454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00454");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray76);
        java.lang.Class<?>[] wildcardClassArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
    }

    @Test
    public void test00455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00455");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray79);
        java.lang.Class<?>[] wildcardClassArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
    }

    @Test
    public void test00456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00456");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray88);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType91 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType91 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        java.lang.Class<?> wildcardClass94 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray92);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00457");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass44 = stdSubtypeResolver43.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        java.lang.Class[] classArray52 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray53 = (java.lang.Class<?>[]) classArray52;
        wildcardClassArray53[0] = wildcardClass44;
        wildcardClassArray53[1] = wildcardClass46;
        wildcardClassArray53[2] = wildcardClass48;
        wildcardClassArray53[3] = wildcardClass50;
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray53);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray53);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray86 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray86);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray86);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType89 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType89 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        java.lang.Class<?>[] wildcardClassArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(classArray52);
        org.junit.Assert.assertNotNull(wildcardClassArray53);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray86);
        org.junit.Assert.assertNotNull(namedTypeArray90);
    }

    @Test
    public void test00458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00458");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?>[] wildcardClassArray93 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray91);
    }

    @Test
    public void test00459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00459");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray12);
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test00460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00460");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray59);
        java.lang.Class<?> wildcardClass70 = wildcardClassArray59.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test00461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00461");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType49 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray50 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType49 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray50);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType52 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray53 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType52 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray53);
        java.lang.Class<?> wildcardClass55 = namedTypeArray53.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(namedTypeArray50);
        org.junit.Assert.assertNotNull(namedTypeArray53);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test00462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00462");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType68 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType68 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray69);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        java.lang.Class<?>[] wildcardClassArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(namedTypeArray69);
    }

    @Test
    public void test00463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00463");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass95 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00464");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver22.registerSubtypes(namedTypeArray67);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray93);
    }

    @Test
    public void test00465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00465");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        java.lang.Class[] classArray93 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray94 = (java.lang.Class<?>[]) classArray93;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray94);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType96 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray97 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType96 };
        stdSubtypeResolver47.registerSubtypes(namedTypeArray97);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray97);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(classArray93);
        org.junit.Assert.assertNotNull(wildcardClassArray94);
        org.junit.Assert.assertNotNull(namedTypeArray97);
    }

    @Test
    public void test00466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00466");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray76);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver43.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType90 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType90 };
        stdSubtypeResolver43.registerSubtypes(namedTypeArray91);
        stdSubtypeResolver22.registerSubtypes(namedTypeArray91);
        stdSubtypeResolver21.registerSubtypes(namedTypeArray91);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00467");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray66 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray66);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType68 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType68 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray69);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray83);
        java.lang.Class<?>[] wildcardClassArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray66);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
    }

    @Test
    public void test00468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00468");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType87 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType87 };
        stdSubtypeResolver42.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver42.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver21.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType96 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray97 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType96 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray97);
        java.lang.Class<?> wildcardClass99 = namedTypeArray97.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(namedTypeArray97);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00469");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray76);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
    }

    @Test
    public void test00470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00470");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass67 = stdSubtypeResolver66.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        java.lang.Class[] classArray75 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray76 = (java.lang.Class<?>[]) classArray75;
        wildcardClassArray76[0] = wildcardClass67;
        wildcardClassArray76[1] = wildcardClass69;
        wildcardClassArray76[2] = wildcardClass71;
        wildcardClassArray76[3] = wildcardClass73;
        stdSubtypeResolver65.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray76);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray76);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver43.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType90 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType90 };
        stdSubtypeResolver43.registerSubtypes(namedTypeArray91);
        stdSubtypeResolver22.registerSubtypes(namedTypeArray91);
        stdSubtypeResolver21.registerSubtypes(namedTypeArray91);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        java.lang.Class<?> wildcardClass96 = namedTypeArray91.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(classArray75);
        org.junit.Assert.assertNotNull(wildcardClassArray76);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00471");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        java.lang.Class[] classArray47 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray48 = (java.lang.Class<?>[]) classArray47;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray83);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType95 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray96 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType95 };
        stdSubtypeResolver50.registerSubtypes(namedTypeArray96);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray96);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray96);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(classArray47);
        org.junit.Assert.assertNotNull(wildcardClassArray48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(namedTypeArray96);
    }

    @Test
    public void test00472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00472");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray88);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass95 = namedTypeArray93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00473");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver45.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType96 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray97 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType96 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray97);
        java.lang.Class<?> wildcardClass99 = namedTypeArray97.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(namedTypeArray97);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00474");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        java.lang.Class<?>[] wildcardClassArray43 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
    }

    @Test
    public void test00475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00475");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver47.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass96 = namedTypeArray93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00476");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType49 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray50 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType49 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray50);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType52 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray53 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType52 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray53);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver59 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass60 = stdSubtypeResolver59.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver61 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass62 = stdSubtypeResolver61.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver63 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass64 = stdSubtypeResolver63.getClass();
        java.lang.Class[] classArray66 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray67 = (java.lang.Class<?>[]) classArray66;
        wildcardClassArray67[0] = wildcardClass58;
        wildcardClassArray67[1] = wildcardClass60;
        wildcardClassArray67[2] = wildcardClass62;
        wildcardClassArray67[3] = wildcardClass64;
        stdSubtypeResolver56.registerSubtypes(wildcardClassArray67);
        stdSubtypeResolver55.registerSubtypes(wildcardClassArray67);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray67);
        java.lang.Class<?> wildcardClass79 = wildcardClassArray67.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(namedTypeArray50);
        org.junit.Assert.assertNotNull(namedTypeArray53);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(wildcardClassArray67);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test00477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00477");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver46.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver46.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass98 = namedTypeArray94.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00478");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType49 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray50 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType49 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray50);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType52 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray53 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType52 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray53);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver59 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass60 = stdSubtypeResolver59.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver61 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass62 = stdSubtypeResolver61.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver63 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass64 = stdSubtypeResolver63.getClass();
        java.lang.Class[] classArray66 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray67 = (java.lang.Class<?>[]) classArray66;
        wildcardClassArray67[0] = wildcardClass58;
        wildcardClassArray67[1] = wildcardClass60;
        wildcardClassArray67[2] = wildcardClass62;
        wildcardClassArray67[3] = wildcardClass64;
        stdSubtypeResolver56.registerSubtypes(wildcardClassArray67);
        stdSubtypeResolver55.registerSubtypes(wildcardClassArray67);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray79 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray79);
        java.lang.Class<?>[] wildcardClassArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(namedTypeArray50);
        org.junit.Assert.assertNotNull(namedTypeArray53);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(wildcardClassArray67);
        org.junit.Assert.assertNotNull(namedTypeArray79);
    }

    @Test
    public void test00479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00479");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType87 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType87 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray88);
        java.lang.Class<?> wildcardClass90 = namedTypeArray88.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test00480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00480");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
    }

    @Test
    public void test00481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00481");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver42 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver64 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver65 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass66 = stdSubtypeResolver65.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        java.lang.Class[] classArray74 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray75 = (java.lang.Class<?>[]) classArray74;
        wildcardClassArray75[0] = wildcardClass66;
        wildcardClassArray75[1] = wildcardClass68;
        wildcardClassArray75[2] = wildcardClass70;
        wildcardClassArray75[3] = wildcardClass72;
        stdSubtypeResolver64.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray75);
        stdSubtypeResolver42.registerSubtypes(wildcardClassArray75);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType87 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType87 };
        stdSubtypeResolver42.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver42.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver21.registerSubtypes(namedTypeArray90);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType96 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray97 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType96 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray97);
        java.lang.Class<?> wildcardClass99 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(classArray74);
        org.junit.Assert.assertNotNull(wildcardClassArray75);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(namedTypeArray97);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test00482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00482");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        java.lang.Class[] classArray57 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray58 = (java.lang.Class<?>[]) classArray57;
        wildcardClassArray58[0] = wildcardClass49;
        wildcardClassArray58[1] = wildcardClass51;
        wildcardClassArray58[2] = wildcardClass53;
        wildcardClassArray58[3] = wildcardClass55;
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray58);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        java.lang.Class[] classArray78 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray79 = (java.lang.Class<?>[]) classArray78;
        wildcardClassArray79[0] = wildcardClass70;
        wildcardClassArray79[1] = wildcardClass72;
        wildcardClassArray79[2] = wildcardClass74;
        wildcardClassArray79[3] = wildcardClass76;
        stdSubtypeResolver68.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray79);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray79);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver46.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver46.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?> wildcardClass98 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(classArray57);
        org.junit.Assert.assertNotNull(wildcardClassArray58);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(classArray78);
        org.junit.Assert.assertNotNull(wildcardClassArray79);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(namedTypeArray94);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test00483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00483");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray94);
    }

    @Test
    public void test00484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00484");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass46 = stdSubtypeResolver45.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        java.lang.Class[] classArray54 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray55 = (java.lang.Class<?>[]) classArray54;
        wildcardClassArray55[0] = wildcardClass46;
        wildcardClassArray55[1] = wildcardClass48;
        wildcardClassArray55[2] = wildcardClass50;
        wildcardClassArray55[3] = wildcardClass52;
        stdSubtypeResolver44.registerSubtypes(wildcardClassArray55);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray55);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray77);
        java.lang.Class<?>[] wildcardClassArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(classArray54);
        org.junit.Assert.assertNotNull(wildcardClassArray55);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
    }

    @Test
    public void test00485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00485");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray44 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver1.registerSubtypes(namedTypeArray44);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType46 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray47 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType46 };
        stdSubtypeResolver1.registerSubtypes(namedTypeArray47);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver58 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass59 = stdSubtypeResolver58.getClass();
        java.lang.Class[] classArray61 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray62 = (java.lang.Class<?>[]) classArray61;
        wildcardClassArray62[0] = wildcardClass53;
        wildcardClassArray62[1] = wildcardClass55;
        wildcardClassArray62[2] = wildcardClass57;
        wildcardClassArray62[3] = wildcardClass59;
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray62);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver51.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray83);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray98 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray98);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray44);
        org.junit.Assert.assertNotNull(namedTypeArray47);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(classArray61);
        org.junit.Assert.assertNotNull(wildcardClassArray62);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
        org.junit.Assert.assertNotNull(namedTypeArray98);
    }

    @Test
    public void test00486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00486");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass94 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00487");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver9 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass10 = stdSubtypeResolver9.getClass();
        java.lang.Class[] classArray12 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray13 = (java.lang.Class<?>[]) classArray12;
        wildcardClassArray13[0] = wildcardClass4;
        wildcardClassArray13[1] = wildcardClass6;
        wildcardClassArray13[2] = wildcardClass8;
        wildcardClassArray13[3] = wildcardClass10;
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray13);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver30 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass31 = stdSubtypeResolver30.getClass();
        java.lang.Class[] classArray33 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray34 = (java.lang.Class<?>[]) classArray33;
        wildcardClassArray34[0] = wildcardClass25;
        wildcardClassArray34[1] = wildcardClass27;
        wildcardClassArray34[2] = wildcardClass29;
        wildcardClassArray34[3] = wildcardClass31;
        stdSubtypeResolver23.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver2.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray34);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray34);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType47 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray48 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType47 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray48);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray82);
        java.lang.Class<?>[] wildcardClassArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(classArray12);
        org.junit.Assert.assertNotNull(wildcardClassArray13);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(classArray33);
        org.junit.Assert.assertNotNull(wildcardClassArray34);
        org.junit.Assert.assertNotNull(namedTypeArray48);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
    }

    @Test
    public void test00488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00488");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType49 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray50 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType49 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray50);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType52 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray53 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType52 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray53);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver59 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass60 = stdSubtypeResolver59.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver61 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass62 = stdSubtypeResolver61.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver63 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass64 = stdSubtypeResolver63.getClass();
        java.lang.Class[] classArray66 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray67 = (java.lang.Class<?>[]) classArray66;
        wildcardClassArray67[0] = wildcardClass58;
        wildcardClassArray67[1] = wildcardClass60;
        wildcardClassArray67[2] = wildcardClass62;
        wildcardClassArray67[3] = wildcardClass64;
        stdSubtypeResolver56.registerSubtypes(wildcardClassArray67);
        stdSubtypeResolver55.registerSubtypes(wildcardClassArray67);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray79 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray79);
        java.lang.Class<?> wildcardClass81 = namedTypeArray79.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(namedTypeArray50);
        org.junit.Assert.assertNotNull(namedTypeArray53);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(classArray66);
        org.junit.Assert.assertNotNull(wildcardClassArray67);
        org.junit.Assert.assertNotNull(namedTypeArray79);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test00489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00489");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray81);
        java.lang.Class<?> wildcardClass94 = wildcardClassArray81.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test00490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00490");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver66 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass68 = stdSubtypeResolver67.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass70 = stdSubtypeResolver69.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        java.lang.Class[] classArray76 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray77 = (java.lang.Class<?>[]) classArray76;
        wildcardClassArray77[0] = wildcardClass68;
        wildcardClassArray77[1] = wildcardClass70;
        wildcardClassArray77[2] = wildcardClass72;
        wildcardClassArray77[3] = wildcardClass74;
        stdSubtypeResolver66.registerSubtypes(wildcardClassArray77);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray77);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray88 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray88);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray88);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray91 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray91);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass95 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(classArray76);
        org.junit.Assert.assertNotNull(wildcardClassArray77);
        org.junit.Assert.assertNotNull(namedTypeArray88);
        org.junit.Assert.assertNotNull(namedTypeArray91);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00491");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        java.lang.Class[] classArray55 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray56 = (java.lang.Class<?>[]) classArray55;
        wildcardClassArray56[0] = wildcardClass47;
        wildcardClassArray56[1] = wildcardClass49;
        wildcardClassArray56[2] = wildcardClass51;
        wildcardClassArray56[3] = wildcardClass53;
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray56);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray56);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray89 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray89);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType91 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray92 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType91 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray92);
        java.lang.Class<?>[] wildcardClassArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(classArray55);
        org.junit.Assert.assertNotNull(wildcardClassArray56);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray89);
        org.junit.Assert.assertNotNull(namedTypeArray92);
    }

    @Test
    public void test00492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00492");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass95 = namedTypeArray93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test00493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00493");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver10 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass11 = stdSubtypeResolver10.getClass();
        java.lang.Class[] classArray13 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray14 = (java.lang.Class<?>[]) classArray13;
        wildcardClassArray14[0] = wildcardClass5;
        wildcardClassArray14[1] = wildcardClass7;
        wildcardClassArray14[2] = wildcardClass9;
        wildcardClassArray14[3] = wildcardClass11;
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray14);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver31 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass32 = stdSubtypeResolver31.getClass();
        java.lang.Class[] classArray34 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray35 = (java.lang.Class<?>[]) classArray34;
        wildcardClassArray35[0] = wildcardClass26;
        wildcardClassArray35[1] = wildcardClass28;
        wildcardClassArray35[2] = wildcardClass30;
        wildcardClassArray35[3] = wildcardClass32;
        stdSubtypeResolver24.registerSubtypes(wildcardClassArray35);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray35);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver3.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        stdSubtypeResolver3.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray70 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver3.registerSubtypes(namedTypeArray70);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType72 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray73 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType72 };
        stdSubtypeResolver3.registerSubtypes(namedTypeArray73);
        stdSubtypeResolver2.registerSubtypes(namedTypeArray73);
        stdSubtypeResolver1.registerSubtypes(namedTypeArray73);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray73);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType78 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray79 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType78 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray79);
        java.lang.Class<?> wildcardClass81 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(classArray13);
        org.junit.Assert.assertNotNull(wildcardClassArray14);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(classArray34);
        org.junit.Assert.assertNotNull(wildcardClassArray35);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(namedTypeArray70);
        org.junit.Assert.assertNotNull(namedTypeArray73);
        org.junit.Assert.assertNotNull(namedTypeArray79);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test00494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00494");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver2 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass3 = stdSubtypeResolver2.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver4 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass5 = stdSubtypeResolver4.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver6 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass7 = stdSubtypeResolver6.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass9 = stdSubtypeResolver8.getClass();
        java.lang.Class[] classArray11 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray12 = (java.lang.Class<?>[]) classArray11;
        wildcardClassArray12[0] = wildcardClass3;
        wildcardClassArray12[1] = wildcardClass5;
        wildcardClassArray12[2] = wildcardClass7;
        wildcardClassArray12[3] = wildcardClass9;
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray12);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver1.registerSubtypes(wildcardClassArray33);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray33);
        java.lang.Class[] classArray46 = new java.lang.Class[0];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray47 = (java.lang.Class<?>[]) classArray46;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray47);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType49 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray50 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType49 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray50);
        java.lang.Class<?> wildcardClass52 = namedTypeArray50.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(classArray11);
        org.junit.Assert.assertNotNull(wildcardClassArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(classArray46);
        org.junit.Assert.assertNotNull(wildcardClassArray47);
        org.junit.Assert.assertNotNull(namedTypeArray50);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test00495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00495");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver52 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass53 = stdSubtypeResolver52.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver54 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass55 = stdSubtypeResolver54.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver56 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass57 = stdSubtypeResolver56.getClass();
        java.lang.Class[] classArray59 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray60 = (java.lang.Class<?>[]) classArray59;
        wildcardClassArray60[0] = wildcardClass51;
        wildcardClassArray60[1] = wildcardClass53;
        wildcardClassArray60[2] = wildcardClass55;
        wildcardClassArray60[3] = wildcardClass57;
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray60);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass72 = stdSubtypeResolver71.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        java.lang.Class[] classArray80 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray81 = (java.lang.Class<?>[]) classArray80;
        wildcardClassArray81[0] = wildcardClass72;
        wildcardClassArray81[1] = wildcardClass74;
        wildcardClassArray81[2] = wildcardClass76;
        wildcardClassArray81[3] = wildcardClass78;
        stdSubtypeResolver70.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray81);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray81);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType93 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray94 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType93 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray94);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray94);
        java.lang.Class<?>[] wildcardClassArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(classArray59);
        org.junit.Assert.assertNotNull(wildcardClassArray60);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(classArray80);
        org.junit.Assert.assertNotNull(wildcardClassArray81);
        org.junit.Assert.assertNotNull(namedTypeArray94);
    }

    @Test
    public void test00496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00496");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType66 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType66 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray69);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver73 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass74 = stdSubtypeResolver73.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver75 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass76 = stdSubtypeResolver75.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver77 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass78 = stdSubtypeResolver77.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver79 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass80 = stdSubtypeResolver79.getClass();
        java.lang.Class[] classArray82 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray83 = (java.lang.Class<?>[]) classArray82;
        wildcardClassArray83[0] = wildcardClass74;
        wildcardClassArray83[1] = wildcardClass76;
        wildcardClassArray83[2] = wildcardClass78;
        wildcardClassArray83[3] = wildcardClass80;
        stdSubtypeResolver72.registerSubtypes(wildcardClassArray83);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray83);
        java.lang.Class<?>[] wildcardClassArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(namedTypeArray69);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(classArray82);
        org.junit.Assert.assertNotNull(wildcardClassArray83);
    }

    @Test
    public void test00497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00497");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray45 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray45);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        java.lang.Class[] classArray58 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray59 = (java.lang.Class<?>[]) classArray58;
        wildcardClassArray59[0] = wildcardClass50;
        wildcardClassArray59[1] = wildcardClass52;
        wildcardClassArray59[2] = wildcardClass54;
        wildcardClassArray59[3] = wildcardClass56;
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray59);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver69 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        java.lang.Class[] classArray79 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray80 = (java.lang.Class<?>[]) classArray79;
        wildcardClassArray80[0] = wildcardClass71;
        wildcardClassArray80[1] = wildcardClass73;
        wildcardClassArray80[2] = wildcardClass75;
        wildcardClassArray80[3] = wildcardClass77;
        stdSubtypeResolver69.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray80);
        stdSubtypeResolver47.registerSubtypes(wildcardClassArray80);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver47.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?> wildcardClass96 = stdSubtypeResolver0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(classArray58);
        org.junit.Assert.assertNotNull(wildcardClassArray59);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(classArray79);
        org.junit.Assert.assertNotNull(wildcardClassArray80);
        org.junit.Assert.assertNotNull(namedTypeArray93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test00498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00498");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver45 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver47 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass48 = stdSubtypeResolver47.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass50 = stdSubtypeResolver49.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        java.lang.Class[] classArray56 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray57 = (java.lang.Class<?>[]) classArray56;
        wildcardClassArray57[0] = wildcardClass48;
        wildcardClassArray57[1] = wildcardClass50;
        wildcardClassArray57[2] = wildcardClass52;
        wildcardClassArray57[3] = wildcardClass54;
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray57);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver67 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver68 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass69 = stdSubtypeResolver68.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver70 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass71 = stdSubtypeResolver70.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        java.lang.Class[] classArray77 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray78 = (java.lang.Class<?>[]) classArray77;
        wildcardClassArray78[0] = wildcardClass69;
        wildcardClassArray78[1] = wildcardClass71;
        wildcardClassArray78[2] = wildcardClass73;
        wildcardClassArray78[3] = wildcardClass75;
        stdSubtypeResolver67.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver46.registerSubtypes(wildcardClassArray78);
        stdSubtypeResolver45.registerSubtypes(wildcardClassArray78);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray90 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver45.registerSubtypes(namedTypeArray90);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType92 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray93 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType92 };
        stdSubtypeResolver45.registerSubtypes(namedTypeArray93);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray93);
        java.lang.Class<?>[] wildcardClassArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(wildcardClassArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(classArray56);
        org.junit.Assert.assertNotNull(wildcardClassArray57);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(classArray77);
        org.junit.Assert.assertNotNull(wildcardClassArray78);
        org.junit.Assert.assertNotNull(namedTypeArray90);
        org.junit.Assert.assertNotNull(namedTypeArray93);
    }

    @Test
    public void test00499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00499");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver23 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass24 = stdSubtypeResolver23.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver25 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass26 = stdSubtypeResolver25.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver27 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass28 = stdSubtypeResolver27.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver29 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass30 = stdSubtypeResolver29.getClass();
        java.lang.Class[] classArray32 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray33 = (java.lang.Class<?>[]) classArray32;
        wildcardClassArray33[0] = wildcardClass24;
        wildcardClassArray33[1] = wildcardClass26;
        wildcardClassArray33[2] = wildcardClass28;
        wildcardClassArray33[3] = wildcardClass30;
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray33);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver43 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver44 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass45 = stdSubtypeResolver44.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver46 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass47 = stdSubtypeResolver46.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass49 = stdSubtypeResolver48.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass51 = stdSubtypeResolver50.getClass();
        java.lang.Class[] classArray53 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray54 = (java.lang.Class<?>[]) classArray53;
        wildcardClassArray54[0] = wildcardClass45;
        wildcardClassArray54[1] = wildcardClass47;
        wildcardClassArray54[2] = wildcardClass49;
        wildcardClassArray54[3] = wildcardClass51;
        stdSubtypeResolver43.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver22.registerSubtypes(wildcardClassArray54);
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray54);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType66 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray67 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType66 };
        stdSubtypeResolver21.registerSubtypes(namedTypeArray67);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray69 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver21.registerSubtypes(namedTypeArray69);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray69);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            stdSubtypeResolver0.registerSubtypes(namedTypeArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(classArray32);
        org.junit.Assert.assertNotNull(wildcardClassArray33);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(classArray53);
        org.junit.Assert.assertNotNull(wildcardClassArray54);
        org.junit.Assert.assertNotNull(namedTypeArray67);
        org.junit.Assert.assertNotNull(namedTypeArray69);
    }

    @Test
    public void test00500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test00500");
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver0 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass2 = stdSubtypeResolver1.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver3 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass4 = stdSubtypeResolver3.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver5 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass6 = stdSubtypeResolver5.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver7 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass8 = stdSubtypeResolver7.getClass();
        java.lang.Class[] classArray10 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray11 = (java.lang.Class<?>[]) classArray10;
        wildcardClassArray11[0] = wildcardClass2;
        wildcardClassArray11[1] = wildcardClass4;
        wildcardClassArray11[2] = wildcardClass6;
        wildcardClassArray11[3] = wildcardClass8;
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray11);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver21 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver22 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass23 = stdSubtypeResolver22.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver24 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass25 = stdSubtypeResolver24.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver26 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass27 = stdSubtypeResolver26.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver28 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass29 = stdSubtypeResolver28.getClass();
        java.lang.Class[] classArray31 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray32 = (java.lang.Class<?>[]) classArray31;
        wildcardClassArray32[0] = wildcardClass23;
        wildcardClassArray32[1] = wildcardClass25;
        wildcardClassArray32[2] = wildcardClass27;
        wildcardClassArray32[3] = wildcardClass29;
        stdSubtypeResolver21.registerSubtypes(wildcardClassArray32);
        stdSubtypeResolver0.registerSubtypes(wildcardClassArray32);
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray43 = new com.fasterxml.jackson.databind.jsontype.NamedType[] {};
        stdSubtypeResolver0.registerSubtypes(namedTypeArray43);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType45 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray46 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType45 };
        stdSubtypeResolver0.registerSubtypes(namedTypeArray46);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver48 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver49 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver50 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver51 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass52 = stdSubtypeResolver51.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver53 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass54 = stdSubtypeResolver53.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver55 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass56 = stdSubtypeResolver55.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver57 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass58 = stdSubtypeResolver57.getClass();
        java.lang.Class[] classArray60 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray61 = (java.lang.Class<?>[]) classArray60;
        wildcardClassArray61[0] = wildcardClass52;
        wildcardClassArray61[1] = wildcardClass54;
        wildcardClassArray61[2] = wildcardClass56;
        wildcardClassArray61[3] = wildcardClass58;
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray61);
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver71 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver72 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass73 = stdSubtypeResolver72.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver74 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass75 = stdSubtypeResolver74.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver76 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass77 = stdSubtypeResolver76.getClass();
        com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver stdSubtypeResolver78 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver();
        java.lang.Class<?> wildcardClass79 = stdSubtypeResolver78.getClass();
        java.lang.Class[] classArray81 = new java.lang.Class[4];
        @SuppressWarnings("unchecked")
        java.lang.Class<?>[] wildcardClassArray82 = (java.lang.Class<?>[]) classArray81;
        wildcardClassArray82[0] = wildcardClass73;
        wildcardClassArray82[1] = wildcardClass75;
        wildcardClassArray82[2] = wildcardClass77;
        wildcardClassArray82[3] = wildcardClass79;
        stdSubtypeResolver71.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver50.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver49.registerSubtypes(wildcardClassArray82);
        stdSubtypeResolver48.registerSubtypes(wildcardClassArray82);
        com.fasterxml.jackson.databind.jsontype.NamedType namedType95 = null;
        com.fasterxml.jackson.databind.jsontype.NamedType[] namedTypeArray96 = new com.fasterxml.jackson.databind.jsontype.NamedType[] { namedType95 };
        stdSubtypeResolver48.registerSubtypes(namedTypeArray96);
        stdSubtypeResolver0.registerSubtypes(namedTypeArray96);
        java.lang.Class<?> wildcardClass99 = namedTypeArray96.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(classArray10);
        org.junit.Assert.assertNotNull(wildcardClassArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(classArray31);
        org.junit.Assert.assertNotNull(wildcardClassArray32);
        org.junit.Assert.assertNotNull(namedTypeArray43);
        org.junit.Assert.assertNotNull(namedTypeArray46);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(classArray60);
        org.junit.Assert.assertNotNull(wildcardClassArray61);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(classArray81);
        org.junit.Assert.assertNotNull(wildcardClassArray82);
        org.junit.Assert.assertNotNull(namedTypeArray96);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }
}

