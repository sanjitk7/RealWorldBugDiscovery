/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 03 03:37:55 GMT 2024
 */

package org.springframework.cloud.gcp.storage;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.cloud.storage.Blob;
import com.google.cloud.storage.Bucket;
import com.google.cloud.storage.Storage;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.MalformedURLException;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.springframework.cloud.gcp.storage.GoogleStorageResourceObject;
import org.springframework.core.io.Resource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GoogleStorageResourceObject_ESTest extends GoogleStorageResourceObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Long long0 = new Long(590L);
      Blob blob0 = mock(Blob.class, new ViolatedAssumptionAnswer());
      doReturn(long0).when(blob0).getUpdateTime();
      doReturn("The blob was not found: ", "/").when(blob0).toString();
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      doReturn(blob0).when(storage0).get(any(com.google.cloud.storage.BlobId.class));
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "https://www.googleapis.com/auth/devstorage.full_control", true);
      googleStorageResourceObject0.lastModified();
      assertTrue(googleStorageResourceObject0.isCreateBlobIfNotExists());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Long long0 = new Long((-178L));
      Blob blob0 = mock(Blob.class, new ViolatedAssumptionAnswer());
      doReturn((Long) null).when(blob0).getUpdateTime();
      doReturn("$YDTFya>w,JYO^", (String) null).when(blob0).toString();
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      doReturn(blob0).when(storage0).get(any(com.google.cloud.storage.BlobId.class));
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "https://www.googleapis.com/auth/devstorage.full_control", true);
      googleStorageResourceObject0.lastModified();
      assertTrue(googleStorageResourceObject0.isCreateBlobIfNotExists());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "`YelZjV", false);
      boolean boolean0 = googleStorageResourceObject0.isCreateBlobIfNotExists();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "");
      googleStorageResourceObject0.getURI();
      assertTrue(googleStorageResourceObject0.isCreateBlobIfNotExists());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, (String) null, false);
      googleStorageResourceObject0.getDescription();
      assertFalse(googleStorageResourceObject0.isCreateBlobIfNotExists());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "~!LRS!U*lq7U#S");
      googleStorageResourceObject0.getDescription();
      assertTrue(googleStorageResourceObject0.isCreateBlobIfNotExists());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "`YelZjV", false);
      boolean boolean0 = googleStorageResourceObject0.exists();
      assertFalse(googleStorageResourceObject0.isCreateBlobIfNotExists());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "");
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.lastModified();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "DRs");
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.lastModified();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "`YelZjV", false);
      try { 
        googleStorageResourceObject0.lastModified();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid URI syntax
         //
         verifyException("org.springframework.cloud.gcp.storage.GoogleStorageResourceObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      doReturn((Blob) null).when(storage0).get(any(com.google.cloud.storage.BlobId.class));
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "https://www.googleapis.com/auth/devstorage.full_control", true);
      try { 
        googleStorageResourceObject0.lastModified();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // The blob was not found: https://www.googleapis.com/auth/devstorage.full_control
         //
         verifyException("org.springframework.cloud.gcp.storage.GoogleStorageResourceObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "Fp1:Gu3pO9", true);
      try { 
        googleStorageResourceObject0.getURL();
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // unknown protocol: fp1
         //
         verifyException("java.net.URL", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, (String) null, false);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getURL();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "");
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getURL();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI is not absolute
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, (String) null, false);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getURI();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "", true);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getOutputStream();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, (String) null);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getOutputStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "L_");
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getOutputStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "5C$45;9&aMl:");
      try { 
        googleStorageResourceObject0.getOutputStream();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid URI syntax
         //
         verifyException("org.springframework.cloud.gcp.storage.GoogleStorageResourceObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "", false);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getInputStream();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, (String) null);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getInputStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "I");
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getInputStream();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, (String) null, false);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getGoogleStorageObject();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "7jmZEAg");
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getGoogleStorageObject();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "yGmbpzdCF=hoJO");
      try { 
        googleStorageResourceObject0.getGoogleStorageObject();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid URI syntax
         //
         verifyException("org.springframework.cloud.gcp.storage.GoogleStorageResourceObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "#", false);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getFilename();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, (String) null, true);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getFilename();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "allAuthenticatedUsers", true);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getFilename();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "");
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getBucket();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, (String) null);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getBucket();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "com.google.cloud.storage.Acl", false);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getBucket();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "$Uh#}?s\"A;(9");
      try { 
        googleStorageResourceObject0.getBucket();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid URI syntax
         //
         verifyException("org.springframework.cloud.gcp.storage.GoogleStorageResourceObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "", false);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.exists();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, (String) null, true);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.exists();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "DMKrEXB");
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.exists();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "");
      TimeUnit timeUnit0 = TimeUnit.DAYS;
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.createSignedUrl(timeUnit0, (-2843L));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, (String) null);
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.createSignedUrl(timeUnit0, (-555L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "<");
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      try { 
        googleStorageResourceObject0.createSignedUrl(timeUnit0, 0L);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid URI syntax
         //
         verifyException("org.springframework.cloud.gcp.storage.GoogleStorageResourceObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, (String) null);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.createRelative((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springframework.cloud.gcp.storage.GoogleStorageResourceObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "");
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.contentLength();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "lsMEdW/bS", true);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.contentLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "qzk`g\"U74_O'=cq", false);
      try { 
        googleStorageResourceObject0.contentLength();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid URI syntax
         //
         verifyException("org.springframework.cloud.gcp.storage.GoogleStorageResourceObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      GoogleStorageResourceObject googleStorageResourceObject0 = null;
      try {
        googleStorageResourceObject0 = new GoogleStorageResourceObject((Storage) null, "The blob was not found: ", true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Storage object can not be null
         //
         verifyException("org.springframework.util.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      GoogleStorageResourceObject googleStorageResourceObject0 = null;
      try {
        googleStorageResourceObject0 = new GoogleStorageResourceObject((Storage) null, "Invalid URI syntax");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Storage object can not be null
         //
         verifyException("org.springframework.util.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Blob blob0 = mock(Blob.class, new ViolatedAssumptionAnswer());
      doReturn((Long) null).when(blob0).getSize();
      doReturn("$YDTFya>w,JYO^", "$YDTFya>w,JYO^").when(blob0).toString();
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      doReturn(blob0).when(storage0).get(any(com.google.cloud.storage.BlobId.class));
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "https://www.googleapis.com/auth/devstorage.full_control", true);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.contentLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springframework.cloud.gcp.storage.GoogleStorageResourceObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "");
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getGoogleStorageObject();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, " cannot be resolved to absolute file path", true);
      try { 
        googleStorageResourceObject0.getURI();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid URI syntax
         //
         verifyException("org.springframework.cloud.gcp.storage.GoogleStorageResourceObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "", false);
      googleStorageResourceObject0.getDescription();
      assertFalse(googleStorageResourceObject0.isCreateBlobIfNotExists());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "https://www.googleapis.com/auth/devstorage.full_control", true);
      Resource resource0 = googleStorageResourceObject0.createRelative("https://www.googleapis.com/auth/devstorage.full_control");
      assertEquals("https://www.googleapis.com/auth/https://www.googleapis.com/auth/devstorage.full_control", resource0.getDescription());
      assertTrue(googleStorageResourceObject0.isCreateBlobIfNotExists());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Blob blob0 = mock(Blob.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(blob0).exists(any(com.google.cloud.storage.Blob.BlobSourceOption[].class));
      doReturn("The blob was not found: ").when(blob0).toString();
      Blob blob1 = mock(Blob.class, new ViolatedAssumptionAnswer());
      Bucket bucket0 = mock(Bucket.class, new ViolatedAssumptionAnswer());
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      doReturn((Blob) null).when(storage0).create(any(com.google.cloud.storage.BlobInfo.class) , any(com.google.cloud.storage.Storage.BlobTargetOption[].class));
      doReturn((Bucket) null).when(storage0).create(any(com.google.cloud.storage.BucketInfo.class) , any(com.google.cloud.storage.Storage.BucketTargetOption[].class));
      doReturn(blob0).when(storage0).get(any(com.google.cloud.storage.BlobId.class));
      doReturn((Bucket) null).when(storage0).get(anyString() , any(com.google.cloud.storage.Storage.BucketGetOption[].class));
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "https://www.googleapis.com/auth/devstorage.full_control", true);
      try { 
        googleStorageResourceObject0.getOutputStream();
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // The blob was not found: https://www.googleapis.com/auth/devstorage.full_control
         //
         verifyException("org.springframework.cloud.gcp.storage.GoogleStorageResourceObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Blob blob0 = mock(Blob.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(blob0).getBucket();
      doReturn((String) null).when(blob0).getName();
      doReturn((String) null).when(blob0).toString();
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      doReturn(blob0).when(storage0).get(any(com.google.cloud.storage.BlobId.class));
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "https://www.googleapis.com/auth/devstorage.full_control", true);
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.createSignedUrl(timeUnit0, 1000L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "$Uh#}?s\"A;(9");
      boolean boolean0 = googleStorageResourceObject0.isReadable();
      assertTrue(boolean0);
      assertTrue(googleStorageResourceObject0.isCreateBlobIfNotExists());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "", true);
      boolean boolean0 = googleStorageResourceObject0.isCreateBlobIfNotExists();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "", true);
      boolean boolean0 = googleStorageResourceObject0.isWritable();
      assertTrue(boolean0);
      assertTrue(googleStorageResourceObject0.isCreateBlobIfNotExists());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "<");
      boolean boolean0 = googleStorageResourceObject0.isOpen();
      assertTrue(googleStorageResourceObject0.isCreateBlobIfNotExists());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "Storage object can not be null", true);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.getFile();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // Storage object can not be null cannot be resolved to absolute file path
         //
         verifyException("org.springframework.cloud.gcp.storage.GoogleStorageResourceObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "&LB[d/");
      try { 
        googleStorageResourceObject0.getURL();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid URI syntax
         //
         verifyException("org.springframework.cloud.gcp.storage.GoogleStorageResourceObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "rP -xo),w0Q|u};");
      try { 
        googleStorageResourceObject0.getInputStream();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Invalid URI syntax
         //
         verifyException("org.springframework.cloud.gcp.storage.GoogleStorageResourceObject", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "p>\"0K&T#4D6Kzah~", true);
      googleStorageResourceObject0.getFilename();
      assertTrue(googleStorageResourceObject0.isCreateBlobIfNotExists());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Blob blob0 = mock(Blob.class, new ViolatedAssumptionAnswer());
      doReturn((Long) null).when(blob0).getUpdateTime();
      doReturn((String) null, (String) null).when(blob0).toString();
      Storage storage0 = mock(Storage.class, new ViolatedAssumptionAnswer());
      doReturn(blob0).when(storage0).get(any(com.google.cloud.storage.BlobId.class));
      GoogleStorageResourceObject googleStorageResourceObject0 = new GoogleStorageResourceObject(storage0, "https://www.googleapis.com/auth/devstorage.full_control", true);
      // Undeclared exception!
      try { 
        googleStorageResourceObject0.lastModified();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springframework.cloud.gcp.storage.GoogleStorageResourceObject", e);
      }
  }
}
