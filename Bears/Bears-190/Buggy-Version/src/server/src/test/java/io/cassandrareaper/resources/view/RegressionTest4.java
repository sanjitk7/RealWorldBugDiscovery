import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test02001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02001");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02002");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "hi!", "", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.status;
        java.lang.String str13 = endpointState9.toString();
        java.lang.String str14 = endpointState9.rack;
        java.lang.String str15 = endpointState9.releaseVersion;
        java.lang.String str16 = endpointState9.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str11, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str13, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str14, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str16, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02003");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d, "", "hi!", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.tokens;
        java.lang.String str11 = endpointState9.status;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.endpoint;
        java.lang.String str14 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str13, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02004");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02005");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getRack();
        java.lang.String str11 = endpointState9.getRack();
        java.lang.String str12 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str11, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02006");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d);
    }

    @Test
    public void test02007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02007");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) 0.0d, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.dc;
        java.lang.String str11 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02008");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d, "hi!", "", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02009");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "hi!", (java.lang.Double) 0.0d, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.tokens;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test02010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02010");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo20 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet16);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap21 = gossipInfo20.endpoints;
        java.util.Set<java.lang.String> strSet22 = gossipInfo20.endpointNames;
        java.util.Set<java.lang.String> strSet23 = gossipInfo20.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap1, (java.lang.Double) 0.0d, strSet23);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo24.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap26 = gossipInfo24.endpoints;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
    }

    @Test
    public void test02011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02011");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "", (java.lang.Double) (-1.0d));
    }

    @Test
    public void test02012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02012");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "hi!", "", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.rack;
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.status;
        java.lang.String str15 = endpointState9.hostId;
        java.lang.String str16 = endpointState9.dc;
        java.lang.String str17 = endpointState9.hostId;
        java.lang.String str18 = endpointState9.getDc();
        java.lang.Class<?> wildcardClass19 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str11, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str17, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02013");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 100.0d, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test02014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02014");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.releaseVersion;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.getRack();
        java.lang.String str15 = endpointState9.rack;
        java.lang.String str16 = endpointState9.status;
        java.lang.String str17 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test02015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02015");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap22 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap22, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet28);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap19, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet28);
        java.lang.String str32 = gossipInfo31.sourceNode;
        java.util.Set<java.lang.String> strSet33 = gossipInfo31.endpointNames;
        java.util.Set<java.lang.String> strSet34 = gossipInfo31.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo35 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap16, (java.lang.Double) 0.0d, strSet34);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo36 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) 100.0d, strSet34);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo37 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap10, (java.lang.Double) 10.0d, strSet34);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo38 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) (-1.0d), strSet34);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo39 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 1.0d, strSet34);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap40 = gossipInfo39.endpoints;
        java.util.Set<java.lang.String> strSet41 = gossipInfo39.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo42 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) (-1.0d), strSet41);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap43 = gossipInfo42.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap44 = gossipInfo42.endpoints;
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str32, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
    }

    @Test
    public void test02016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02016");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus6 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList8 = nodesStatus7.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList9 = nodesStatus7.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList10 = nodesStatus7.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList11 = nodesStatus7.endpointStates;
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList8);
        org.junit.Assert.assertNotNull(gossipInfoList9);
        org.junit.Assert.assertNotNull(gossipInfoList10);
        org.junit.Assert.assertNotNull(gossipInfoList11);
    }

    @Test
    public void test02017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02017");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "hi!", "", "hi!", (java.lang.Double) 1.0d, "hi!", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.hostId;
        java.lang.String str12 = endpointState9.toString();
        java.lang.String str13 = endpointState9.toString();
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.dc;
        java.lang.String str16 = endpointState9.rack;
        java.lang.String str17 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test02018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02018");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Set<java.lang.String> strSet3 = null;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo4 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) (-1.0d), strSet3);
    }

    @Test
    public void test02019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02019");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.tokens;
        java.lang.String str13 = endpointState9.toString();
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test02020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02020");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 100.0d, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02021");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) 1.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.getRack();
        java.lang.String str12 = endpointState9.tokens;
        java.lang.String str13 = endpointState9.getDc();
        java.lang.String str14 = endpointState9.endpoint;
        java.lang.String str15 = endpointState9.hostId;
        java.lang.String str16 = endpointState9.releaseVersion;
        java.lang.String str17 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str17, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02022");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo12 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet10);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = gossipInfo12.endpoints;
        java.util.Set<java.lang.String> strSet14 = gossipInfo12.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet14);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = gossipInfo15.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap17 = gossipInfo15.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap18 = gossipInfo15.endpoints;
        java.lang.String str19 = gossipInfo15.sourceNode;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str19, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02023");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "", (java.lang.Double) (-1.0d));
    }

    @Test
    public void test02024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02024");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap24 = gossipInfo23.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo23.endpoints;
        java.util.Set<java.lang.String> strSet26 = gossipInfo23.endpointNames;
        java.lang.String str27 = gossipInfo23.sourceNode;
        java.util.Set<java.lang.String> strSet28 = gossipInfo23.endpointNames;
        java.util.Set<java.lang.String> strSet29 = gossipInfo23.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap4, (java.lang.Double) 10.0d, strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap1, (java.lang.Double) 100.0d, strSet29);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap32 = gossipInfo31.endpoints;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNull(strMap32);
    }

    @Test
    public void test02025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02025");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap27 = gossipInfo26.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap28 = gossipInfo26.endpoints;
        java.util.Set<java.lang.String> strSet29 = gossipInfo26.endpointNames;
        java.util.Set<java.lang.String> strSet30 = gossipInfo26.endpointNames;
        java.lang.String str31 = gossipInfo26.sourceNode;
        java.util.Set<java.lang.String> strSet32 = gossipInfo26.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 0.0d, strSet32);
        java.util.Set<java.lang.String> strSet34 = gossipInfo33.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo35 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap4, (java.lang.Double) 10.0d, strSet34);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo36 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) 0.0d, strSet34);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap37 = gossipInfo36.endpoints;
        java.util.Set<java.lang.String> strSet38 = gossipInfo36.endpointNames;
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strSet38);
    }

    @Test
    public void test02026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02026");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.getRack();
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.tokens;
        java.lang.String str16 = endpointState9.getRack();
        java.lang.Class<?> wildcardClass17 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02027");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "", (java.lang.Double) 10.0d, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02028");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap19, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        java.util.Set<java.lang.String> strSet28 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap16, (java.lang.Double) 1.0d, strSet28);
        java.util.Set<java.lang.String> strSet30 = gossipInfo29.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap13, (java.lang.Double) 100.0d, strSet30);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 100.0d, strSet30);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 10.0d, strSet30);
        java.util.Set<java.lang.String> strSet34 = gossipInfo33.endpointNames;
        java.util.Set<java.lang.String> strSet35 = gossipInfo33.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo36 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap4, (java.lang.Double) 10.0d, strSet35);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo37 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap1, (java.lang.Double) 0.0d, strSet35);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap38 = gossipInfo37.endpoints;
        java.lang.Class<?> wildcardClass39 = gossipInfo37.getClass();
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test02029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02029");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "hi!", "", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.rack;
        java.lang.String str11 = endpointState9.releaseVersion;
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test02030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02030");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 1.0d, "", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.status;
        java.lang.String str12 = endpointState9.dc;
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.hostId;
        java.lang.String str15 = endpointState9.status;
        java.lang.String str16 = endpointState9.dc;
        java.lang.Class<?> wildcardClass17 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str13, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02031");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str12, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02032");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.releaseVersion;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test02033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02033");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
    }

    @Test
    public void test02034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02034");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 10.0d);
    }

    @Test
    public void test02035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02035");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.getDc();
        java.lang.String str14 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test02036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02036");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02037");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap27 = gossipInfo26.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap28 = gossipInfo26.endpoints;
        java.util.Set<java.lang.String> strSet29 = gossipInfo26.endpointNames;
        java.lang.String str30 = gossipInfo26.sourceNode;
        java.util.Set<java.lang.String> strSet31 = gossipInfo26.endpointNames;
        java.util.Set<java.lang.String> strSet32 = gossipInfo26.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 0.0d, strSet32);
        java.util.Set<java.lang.String> strSet34 = gossipInfo33.endpointNames;
        java.util.Set<java.lang.String> strSet35 = gossipInfo33.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo36 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet35);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo37 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet35);
        java.lang.String str38 = gossipInfo37.sourceNode;
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str38, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02038");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Set<java.lang.String> strSet3 = null;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo4 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap1, (java.lang.Double) 100.0d, strSet3);
        java.util.Set<java.lang.String> strSet5 = gossipInfo4.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap6 = gossipInfo4.endpoints;
        java.lang.String str7 = gossipInfo4.sourceNode;
        org.junit.Assert.assertNull(strSet5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test02039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02039");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap27 = gossipInfo26.endpoints;
        java.util.Set<java.lang.String> strSet28 = gossipInfo26.endpointNames;
        java.util.Set<java.lang.String> strSet29 = gossipInfo26.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap7, (java.lang.Double) 0.0d, strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap4, (java.lang.Double) 100.0d, strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 1.0d, strSet29);
        java.lang.String str33 = gossipInfo32.sourceNode;
        java.util.Set<java.lang.String> strSet34 = gossipInfo32.endpointNames;
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str33, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet34);
    }

    @Test
    public void test02040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02040");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo12 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet10);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = gossipInfo12.endpoints;
        java.util.Set<java.lang.String> strSet14 = gossipInfo12.endpointNames;
        java.util.Set<java.lang.String> strSet15 = gossipInfo12.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo16 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet15);
        java.lang.String str17 = gossipInfo16.sourceNode;
        java.lang.String str18 = gossipInfo16.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = gossipInfo16.endpoints;
        java.lang.String str20 = gossipInfo16.sourceNode;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str17, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str18, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str20, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02041");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02042");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        java.util.Set<java.lang.String> strSet25 = gossipInfo24.endpointNames;
        java.lang.String str26 = gossipInfo24.sourceNode;
        java.util.Set<java.lang.String> strSet27 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap13, (java.lang.Double) 10.0d, strSet27);
        java.util.Set<java.lang.String> strSet29 = gossipInfo28.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap10, (java.lang.Double) (-1.0d), strSet29);
        java.util.Set<java.lang.String> strSet31 = gossipInfo30.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) 1.0d, strSet31);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) (-1.0d), strSet31);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo34 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet31);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet31);
    }

    @Test
    public void test02043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02043");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap19, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap16, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 100.0d, (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 10.0d, (java.util.Set<java.lang.String>) strSet25);
        java.util.Set<java.lang.String> strSet33 = gossipInfo32.endpointNames;
        java.util.Set<java.lang.String> strSet34 = gossipInfo32.endpointNames;
        java.util.Set<java.lang.String> strSet35 = gossipInfo32.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo36 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap1, (java.lang.Double) 1.0d, strSet35);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strSet35);
    }

    @Test
    public void test02044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02044");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.getDc();
        java.lang.String str14 = endpointState9.releaseVersion;
        java.lang.String str15 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test02045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02045");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.tokens;
        java.lang.String str11 = endpointState9.releaseVersion;
        java.lang.String str12 = endpointState9.tokens;
        java.lang.String str13 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test02046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02046");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.hostId;
        java.lang.String str14 = endpointState9.status;
        java.lang.String str15 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test02047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02047");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 1.0d, "", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.status;
        java.lang.String str12 = endpointState9.dc;
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.hostId;
        java.lang.String str15 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str13, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02048");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.endpoint;
        java.lang.String str14 = endpointState9.status;
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.Class<?> wildcardClass16 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test02049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02049");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "", "hi!", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test02050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02050");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.dc;
        java.lang.String str13 = endpointState9.rack;
        java.lang.String str14 = endpointState9.hostId;
        java.lang.String str15 = endpointState9.rack;
        java.lang.String str16 = endpointState9.toString();
        java.lang.String str17 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test02051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02051");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.status;
        java.lang.String str15 = endpointState9.tokens;
        java.lang.String str16 = endpointState9.hostId;
        java.lang.String str17 = endpointState9.dc;
        java.lang.String str18 = endpointState9.endpoint;
        java.lang.String str19 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test02052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02052");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) (-1.0d));
    }

    @Test
    public void test02053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02053");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "hi!", "", "hi!", (java.lang.Double) 1.0d, "hi!", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.toString();
        java.lang.String str13 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test02054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02054");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.dc;
        java.lang.String str17 = endpointState9.status;
        java.lang.String str18 = endpointState9.hostId;
        java.lang.String str19 = endpointState9.getRack();
        java.lang.String str20 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test02055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02055");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.releaseVersion;
        java.lang.String str17 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test02056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02056");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.dc;
        java.lang.String str13 = endpointState9.rack;
        java.lang.String str14 = endpointState9.hostId;
        java.lang.String str15 = endpointState9.status;
        java.lang.String str16 = endpointState9.getDc();
        java.lang.String str17 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test02057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02057");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.rack;
        java.lang.String str16 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test02058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02058");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo12 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet10);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo13 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 1.0d, (java.util.Set<java.lang.String>) strSet10);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap14 = gossipInfo13.endpoints;
        java.lang.String str15 = gossipInfo13.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = gossipInfo13.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap17 = gossipInfo13.endpoints;
        java.lang.String str18 = gossipInfo13.sourceNode;
        java.lang.String str19 = gossipInfo13.sourceNode;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str18, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str19, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02059");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        java.util.Set<java.lang.String> strSet25 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) 1.0d, strSet25);
        java.util.Set<java.lang.String> strSet27 = gossipInfo26.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap10, (java.lang.Double) 100.0d, strSet27);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 100.0d, strSet27);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap30 = gossipInfo29.endpoints;
        java.util.Set<java.lang.String> strSet31 = gossipInfo29.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) (-1.0d), strSet31);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet31);
        java.lang.String str34 = gossipInfo33.sourceNode;
        java.util.Set<java.lang.String> strSet35 = gossipInfo33.endpointNames;
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str34, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet35);
    }

    @Test
    public void test02060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02060");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02061");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus6 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList7 = nodesStatus6.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList8 = nodesStatus6.endpointStates;
        java.lang.Class<?> wildcardClass9 = gossipInfoList8.getClass();
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList7);
        org.junit.Assert.assertNotNull(gossipInfoList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test02062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02062");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "hi!", "", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.rack;
        java.lang.String str11 = endpointState9.hostId;
        java.lang.String str12 = endpointState9.releaseVersion;
        java.lang.String str13 = endpointState9.rack;
        java.lang.String str14 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str13, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test02063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02063");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test02064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02064");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        java.util.Set<java.lang.String> strSet22 = gossipInfo21.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 1.0d, strSet22);
        java.util.Set<java.lang.String> strSet24 = gossipInfo23.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) 100.0d, strSet24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 100.0d, strSet24);
        java.lang.String str27 = gossipInfo26.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap28 = gossipInfo26.endpoints;
        java.lang.String str29 = gossipInfo26.sourceNode;
        java.util.Set<java.lang.String> strSet30 = gossipInfo26.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) 100.0d, strSet30);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap32 = gossipInfo31.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap33 = gossipInfo31.endpoints;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str27, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str29, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
    }

    @Test
    public void test02065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02065");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "", (java.lang.Double) 100.0d);
    }

    @Test
    public void test02066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02066");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap24 = gossipInfo23.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo23.endpoints;
        java.util.Set<java.lang.String> strSet26 = gossipInfo23.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 10.0d, strSet26);
        java.util.Set<java.lang.String> strSet28 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet28);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap30 = gossipInfo29.endpoints;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(strMap30);
    }

    @Test
    public void test02067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02067");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus6 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus8 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList4);
    }

    @Test
    public void test02068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02068");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d), "", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 10.0d);
    }

    @Test
    public void test02069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02069");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap2);
    }

    @Test
    public void test02070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02070");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList6 = nodesStatus5.endpointStates;
        java.lang.Class<?> wildcardClass7 = nodesStatus5.getClass();
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test02071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02071");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.toString();
        java.lang.String str15 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test02072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02072");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo20 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet16);
        java.lang.String str21 = gossipInfo20.sourceNode;
        java.util.Set<java.lang.String> strSet22 = gossipInfo20.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 1.0d, strSet22);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test02073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02073");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("hi!", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList5 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus6 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList5);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList5);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus8 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList5);
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList5);
    }

    @Test
    public void test02074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02074");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "", "hi!", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test02075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02075");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02076");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "hi!", "", "hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.rack;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.tokens;
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.tokens;
        java.lang.String str16 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str11, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str12, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str13, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str15, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test02077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02077");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 100.0d, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 1.0d);
    }

    @Test
    public void test02078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02078");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet16);
        java.lang.String str20 = gossipInfo19.sourceNode;
        java.util.Set<java.lang.String> strSet21 = gossipInfo19.endpointNames;
        java.util.Set<java.lang.String> strSet22 = gossipInfo19.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet22);
        java.util.Set<java.lang.String> strSet24 = gossipInfo23.endpointNames;
        java.util.Set<java.lang.String> strSet25 = gossipInfo23.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) (-1.0d), strSet25);
        java.lang.Class<?> wildcardClass27 = strSet25.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str20, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test02079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02079");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "hi!", (java.lang.Double) 1.0d, "", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02080");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "hi!", "hi!", "hi!", "", (java.lang.Double) 100.0d, "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.getRack();
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.tokens;
        java.lang.String str13 = endpointState9.hostId;
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.rack;
        java.lang.String str16 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test02081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02081");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 100.0d, "hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02082");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "hi!", (java.lang.Double) 1.0d, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.Class<?> wildcardClass10 = endpointState9.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test02083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02083");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "", "hi!", (java.lang.Double) 10.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.getRack();
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.status;
        java.lang.Class<?> wildcardClass14 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test02084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02084");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d);
    }

    @Test
    public void test02085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02085");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo20 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet16);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap21 = gossipInfo20.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap22 = gossipInfo20.endpoints;
        java.lang.String str23 = gossipInfo20.sourceNode;
        java.util.Set<java.lang.String> strSet24 = gossipInfo20.endpointNames;
        java.util.Set<java.lang.String> strSet25 = gossipInfo20.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap1, (java.lang.Double) 1.0d, strSet25);
        java.lang.Class<?> wildcardClass27 = gossipInfo26.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test02086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02086");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.util.Set<java.lang.String> strSet19 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo20 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 1.0d, strSet19);
        java.util.Set<java.lang.String> strSet21 = gossipInfo20.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap4, (java.lang.Double) 100.0d, strSet21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet21);
        java.util.Set<java.lang.String> strSet24 = gossipInfo23.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo23.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap26 = gossipInfo23.endpoints;
        java.lang.String str27 = gossipInfo23.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap28 = gossipInfo23.endpoints;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str27, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap28);
    }

    @Test
    public void test02087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02087");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList5 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus6 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList5);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList5);
        java.lang.Class<?> wildcardClass8 = gossipInfoList5.getClass();
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList5);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test02088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02088");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo12 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet10);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo13 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet10);
        java.lang.String str14 = gossipInfo13.sourceNode;
        java.lang.String str15 = gossipInfo13.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = gossipInfo13.endpoints;
        java.util.Set<java.lang.String> strSet17 = gossipInfo13.endpointNames;
        java.util.Set<java.lang.String> strSet18 = gossipInfo13.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = gossipInfo13.endpoints;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNull(strMap19);
    }

    @Test
    public void test02089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02089");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.rack;
        java.lang.String str14 = endpointState9.status;
        java.lang.String str15 = endpointState9.status;
        java.lang.String str16 = endpointState9.status;
        java.lang.String str17 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test02090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02090");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo9 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap1, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet7);
        java.util.Set<java.lang.String> strSet10 = gossipInfo9.endpointNames;
        java.util.Set<java.lang.String> strSet11 = gossipInfo9.endpointNames;
        java.util.Set<java.lang.String> strSet12 = gossipInfo9.endpointNames;
        java.lang.String str13 = gossipInfo9.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap14 = gossipInfo9.endpoints;
        java.util.Set<java.lang.String> strSet15 = gossipInfo9.endpointNames;
        java.util.Set<java.lang.String> strSet16 = gossipInfo9.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap17 = gossipInfo9.endpoints;
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test02091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02091");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 100.0d, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.dc;
        java.lang.String str11 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test02092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02092");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo24.endpoints;
        java.util.Set<java.lang.String> strSet26 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) 1.0d, strSet26);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap10, (java.lang.Double) (-1.0d), strSet26);
        java.util.Set<java.lang.String> strSet29 = gossipInfo28.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 0.0d, strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 10.0d, strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap1, (java.lang.Double) 100.0d, strSet29);
        java.lang.String str33 = gossipInfo32.sourceNode;
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test02093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02093");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 100.0d, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.Class<?> wildcardClass10 = endpointState9.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test02094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02094");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 1.0d, "hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02095");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "hi!", "", "hi!", (java.lang.Double) 1.0d, "hi!", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.hostId;
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.toString();
        java.lang.String str14 = endpointState9.toString();
        java.lang.String str15 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test02096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02096");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", "", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 1.0d, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.hostId;
        java.lang.String str11 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02097");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 10.0d, "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test02098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02098");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
    }

    @Test
    public void test02099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02099");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.getRack();
        java.lang.String str11 = endpointState9.rack;
        java.lang.String str12 = endpointState9.status;
        java.lang.String str13 = endpointState9.rack;
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.getDc();
        java.lang.String str16 = endpointState9.status;
        java.lang.String str17 = endpointState9.status;
        java.lang.String str18 = endpointState9.hostId;
        java.lang.String str19 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str17, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str18, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str19, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02100");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        java.util.Set<java.lang.String> strSet25 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) 1.0d, strSet25);
        java.util.Set<java.lang.String> strSet27 = gossipInfo26.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap10, (java.lang.Double) 100.0d, strSet27);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 100.0d, strSet27);
        java.lang.String str30 = gossipInfo29.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap31 = gossipInfo29.endpoints;
        java.lang.String str32 = gossipInfo29.sourceNode;
        java.util.Set<java.lang.String> strSet33 = gossipInfo29.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo34 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 10.0d, strSet33);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo35 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet33);
        java.util.Set<java.lang.String> strSet36 = gossipInfo35.endpointNames;
        java.lang.Class<?> wildcardClass37 = strSet36.getClass();
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str30, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str32, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test02101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02101");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "", (java.lang.Double) 10.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.Class<?> wildcardClass10 = endpointState9.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test02102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02102");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 1.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ");
    }

    @Test
    public void test02103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02103");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap24 = gossipInfo23.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo23.endpoints;
        java.util.Set<java.lang.String> strSet26 = gossipInfo23.endpointNames;
        java.lang.String str27 = gossipInfo23.sourceNode;
        java.util.Set<java.lang.String> strSet28 = gossipInfo23.endpointNames;
        java.util.Set<java.lang.String> strSet29 = gossipInfo23.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) 1.0d, strSet29);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test02104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02104");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 100.0d, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.hostId;
        java.lang.String str11 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ");
    }

    @Test
    public void test02105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02105");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "", "hi!", (java.lang.Double) 10.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.hostId;
        java.lang.String str14 = endpointState9.toString();
        java.lang.String str15 = endpointState9.getRack();
        java.lang.String str16 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test02106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02106");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.releaseVersion;
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.rack;
        java.lang.String str15 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test02107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02107");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 1.0d, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 1.0d);
    }

    @Test
    public void test02108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02108");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = gossipInfo18.endpoints;
        java.util.Set<java.lang.String> strSet20 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 1.0d, strSet20);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap4, (java.lang.Double) 100.0d, strSet20);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet20);
        java.lang.String str24 = gossipInfo23.sourceNode;
        java.util.Set<java.lang.String> strSet25 = gossipInfo23.endpointNames;
        java.lang.String str26 = gossipInfo23.sourceNode;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str24, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str26, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02109");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 1.0d, (java.util.Set<java.lang.String>) strSet19);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap23 = gossipInfo22.endpoints;
        java.lang.String str24 = gossipInfo22.sourceNode;
        java.lang.String str25 = gossipInfo22.sourceNode;
        java.util.Set<java.lang.String> strSet26 = gossipInfo22.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 0.0d, strSet26);
        java.util.Set<java.lang.String> strSet28 = gossipInfo27.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap29 = gossipInfo27.endpoints;
        java.util.Set<java.lang.String> strSet30 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap4, (java.lang.Double) (-1.0d), strSet30);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap1, (java.lang.Double) 1.0d, strSet30);
        java.lang.String str33 = gossipInfo32.sourceNode;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str24, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str25, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str33, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02110");
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] gossipInfoArray0 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] {};
        java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList1 = new java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1, gossipInfoArray0);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus((java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList6 = nodesStatus5.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        java.lang.Class<?> wildcardClass8 = gossipInfoList6.getClass();
        org.junit.Assert.assertNotNull(gossipInfoArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList6);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test02111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02111");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 1.0d, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test02112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02112");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "hi!", "hi!", "hi!", "", (java.lang.Double) 100.0d, "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02113");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "hi!", "", "hi!", (java.lang.Double) 1.0d, "hi!", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.releaseVersion;
        java.lang.String str15 = endpointState9.status;
        java.lang.Class<?> wildcardClass16 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test02114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02114");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 10.0d, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02115");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.getRack();
        java.lang.String str11 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02116");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.tokens;
        java.lang.String str13 = endpointState9.endpoint;
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.getDc();
        java.lang.String str16 = endpointState9.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02117");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.status;
        java.lang.String str14 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test02118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02118");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        java.util.Set<java.lang.String> strSet22 = gossipInfo21.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 1.0d, strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap7, (java.lang.Double) 0.0d, strSet22);
        java.util.Set<java.lang.String> strSet25 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap4, (java.lang.Double) 0.0d, strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 0.0d, strSet25);
        java.lang.String str28 = gossipInfo27.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap29 = gossipInfo27.endpoints;
        java.util.Set<java.lang.String> strSet30 = gossipInfo27.endpointNames;
        java.util.Set<java.lang.String> strSet31 = gossipInfo27.endpointNames;
        java.util.Set<java.lang.String> strSet32 = gossipInfo27.endpointNames;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str28, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(strSet32);
    }

    @Test
    public void test02119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02119");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 1.0d, "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02120");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02121");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02122");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo16 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet13);
        java.lang.String str17 = gossipInfo16.sourceNode;
        java.util.Set<java.lang.String> strSet18 = gossipInfo16.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap1, (java.lang.Double) 0.0d, strSet18);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap20 = gossipInfo19.endpoints;
        java.util.Set<java.lang.String> strSet21 = gossipInfo19.endpointNames;
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str17, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strSet21);
    }

    @Test
    public void test02123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02123");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "", "hi!", (java.lang.Double) 10.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.status;
        java.lang.String str14 = endpointState9.rack;
        java.lang.String str15 = endpointState9.getDc();
        java.lang.String str16 = endpointState9.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02124");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02125");
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] gossipInfoArray0 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] {};
        java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList1 = new java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1, gossipInfoArray0);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus((java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus4 = new io.cassandrareaper.resources.view.NodesStatus((java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus((java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList6 = nodesStatus5.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus8 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList9 = nodesStatus8.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList10 = nodesStatus8.endpointStates;
        java.lang.Class<?> wildcardClass11 = gossipInfoList10.getClass();
        org.junit.Assert.assertNotNull(gossipInfoArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(gossipInfoList6);
        org.junit.Assert.assertNotNull(gossipInfoList9);
        org.junit.Assert.assertNotNull(gossipInfoList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02126");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.rack;
        java.lang.String str11 = endpointState9.status;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.getDc();
        java.lang.String str14 = endpointState9.rack;
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test02127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02127");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", (java.lang.Double) (-1.0d), "", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d);
    }

    @Test
    public void test02128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02128");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) 1.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.getRack();
        java.lang.String str12 = endpointState9.dc;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test02129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02129");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.releaseVersion;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.releaseVersion;
        java.lang.String str16 = endpointState9.tokens;
        java.lang.String str17 = endpointState9.rack;
        java.lang.String str18 = endpointState9.status;
        java.lang.String str19 = endpointState9.releaseVersion;
        java.lang.String str20 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test02130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02130");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "", (java.lang.Double) 10.0d);
    }

    @Test
    public void test02131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02131");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo16 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 10.0d, (java.util.Set<java.lang.String>) strSet13);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo17 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        java.util.Set<java.lang.String> strSet18 = gossipInfo17.endpointNames;
        java.lang.Class<?> wildcardClass19 = gossipInfo17.getClass();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02132");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus6 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList8 = nodesStatus7.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus9 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList8);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus10 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList8);
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList8);
    }

    @Test
    public void test02133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02133");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.dc;
        java.lang.Class<?> wildcardClass12 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test02134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02134");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) 1.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.getRack();
        java.lang.String str12 = endpointState9.tokens;
        java.lang.String str13 = endpointState9.getDc();
        java.lang.String str14 = endpointState9.endpoint;
        java.lang.String str15 = endpointState9.hostId;
        java.lang.String str16 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test02135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02135");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo12 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet10);
        java.util.Set<java.lang.String> strSet13 = gossipInfo12.endpointNames;
        java.util.Set<java.lang.String> strSet14 = gossipInfo12.endpointNames;
        java.util.Set<java.lang.String> strSet15 = gossipInfo12.endpointNames;
        java.lang.String str16 = gossipInfo12.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap17 = gossipInfo12.endpoints;
        java.util.Set<java.lang.String> strSet18 = gossipInfo12.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet18);
        java.lang.String str20 = gossipInfo19.sourceNode;
        java.lang.String str21 = gossipInfo19.sourceNode;
        java.lang.String str22 = gossipInfo19.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap23 = gossipInfo19.endpoints;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str20, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str21, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str22, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test02136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02136");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.getRack();
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.rack;
        java.lang.String str14 = endpointState9.status;
        java.lang.String str15 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str11, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str14, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02137");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "", "", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.rack;
        java.lang.String str12 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str12, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02138");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo12 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet10);
        java.lang.String str13 = gossipInfo12.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap14 = gossipInfo12.endpoints;
        java.util.Set<java.lang.String> strSet15 = gossipInfo12.endpointNames;
        java.util.Set<java.lang.String> strSet16 = gossipInfo12.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo17 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap1, (java.lang.Double) 0.0d, strSet16);
        java.lang.String str18 = gossipInfo17.sourceNode;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : " + "'", str18, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ");
    }

    @Test
    public void test02139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02139");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap19, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap16, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap4, (java.lang.Double) 10.0d, (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test02140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02140");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) (-1.0d), "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02141");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) 1.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.rack;
        java.lang.String str11 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test02142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02142");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.hostId;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test02143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02143");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.getDc();
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.dc;
        java.lang.String str16 = endpointState9.toString();
        java.lang.String str17 = endpointState9.tokens;
        java.lang.String str18 = endpointState9.tokens;
        java.lang.String str19 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test02144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02144");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d, "", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) (-1.0d));
    }

    @Test
    public void test02145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02145");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        java.util.Set<java.lang.String> strSet25 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) 1.0d, strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap10, (java.lang.Double) 0.0d, strSet25);
        java.util.Set<java.lang.String> strSet28 = gossipInfo27.endpointNames;
        java.util.Set<java.lang.String> strSet29 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) 1.0d, strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap4, (java.lang.Double) (-1.0d), strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) (-1.0d), strSet29);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap33 = gossipInfo32.endpoints;
        java.lang.String str34 = gossipInfo32.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap35 = gossipInfo32.endpoints;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass36 = strMap35.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str34, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap35);
    }

    @Test
    public void test02146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02146");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 100.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str12, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02147");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02148");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "hi!", "", "hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.rack;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.tokens;
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.getDc();
        java.lang.String str16 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str11, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str12, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str13, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str14, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02149");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d, "", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.rack;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str12, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02150");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.tokens;
        java.lang.String str11 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str11, "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02151");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test02152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02152");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.getDc();
        java.lang.String str14 = endpointState9.endpoint;
        java.lang.String str15 = endpointState9.toString();
        java.lang.String str16 = endpointState9.hostId;
        java.lang.String str17 = endpointState9.rack;
        java.lang.String str18 = endpointState9.status;
        java.lang.Class<?> wildcardClass19 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02153");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.getDc();
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.dc;
        java.lang.String str16 = endpointState9.toString();
        java.lang.String str17 = endpointState9.releaseVersion;
        java.lang.String str18 = endpointState9.status;
        java.lang.String str19 = endpointState9.endpoint;
        java.lang.Class<?> wildcardClass20 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test02154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02154");
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] gossipInfoArray0 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] {};
        java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList1 = new java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1, gossipInfoArray0);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus((java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus6 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList7 = nodesStatus6.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus8 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList7);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus9 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList7);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList10 = nodesStatus9.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList11 = nodesStatus9.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus12 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList11);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus13 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList11);
        org.junit.Assert.assertNotNull(gossipInfoArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList7);
        org.junit.Assert.assertNotNull(gossipInfoList10);
        org.junit.Assert.assertNotNull(gossipInfoList11);
    }

    @Test
    public void test02155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02155");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.rack;
        java.lang.String str13 = endpointState9.hostId;
        java.lang.String str14 = endpointState9.getRack();
        java.lang.String str15 = endpointState9.status;
        java.lang.String str16 = endpointState9.tokens;
        java.lang.String str17 = endpointState9.getDc();
        java.lang.String str18 = endpointState9.rack;
        java.lang.String str19 = endpointState9.tokens;
        java.lang.String str20 = endpointState9.dc;
        java.lang.String str21 = endpointState9.tokens;
        java.lang.String str22 = endpointState9.endpoint;
        java.lang.String str23 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test02156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02156");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str24 = gossipInfo23.sourceNode;
        java.util.Set<java.lang.String> strSet25 = gossipInfo23.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap4, (java.lang.Double) 10.0d, strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap1, (java.lang.Double) (-1.0d), strSet25);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(strSet25);
    }

    @Test
    public void test02157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02157");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ");
    }

    @Test
    public void test02158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02158");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.getRack();
        java.lang.String str11 = endpointState9.rack;
        java.lang.String str12 = endpointState9.status;
        java.lang.String str13 = endpointState9.rack;
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.getDc();
        java.lang.String str16 = endpointState9.dc;
        java.lang.String str17 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str17, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02159");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo12 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet10);
        java.lang.String str13 = gossipInfo12.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap14 = gossipInfo12.endpoints;
        java.util.Set<java.lang.String> strSet15 = gossipInfo12.endpointNames;
        java.util.Set<java.lang.String> strSet16 = gossipInfo12.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo17 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet16);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap18 = gossipInfo17.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = gossipInfo17.endpoints;
        java.util.Set<java.lang.String> strSet20 = gossipInfo17.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap21 = gossipInfo17.endpoints;
        java.util.Set<java.lang.String> strSet22 = gossipInfo17.endpointNames;
        java.util.Set<java.lang.String> strSet23 = gossipInfo17.endpointNames;
        java.lang.Class<?> wildcardClass24 = gossipInfo17.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test02160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02160");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 10.0d);
    }

    @Test
    public void test02161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02161");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.getDc();
        java.lang.String str14 = endpointState9.endpoint;
        java.lang.String str15 = endpointState9.toString();
        java.lang.String str16 = endpointState9.hostId;
        java.lang.String str17 = endpointState9.rack;
        java.lang.String str18 = endpointState9.hostId;
        java.lang.String str19 = endpointState9.status;
        java.lang.String str20 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test02162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02162");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d);
    }

    @Test
    public void test02163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02163");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap1, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        java.lang.String str30 = gossipInfo29.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap31 = gossipInfo29.endpoints;
        java.lang.String str32 = gossipInfo29.sourceNode;
        java.lang.Class<?> wildcardClass33 = gossipInfo29.getClass();
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test02164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02164");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.toString();
        java.lang.String str15 = endpointState9.getRack();
        java.lang.Class<?> wildcardClass16 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test02165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02165");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        java.util.Set<java.lang.String> strSet28 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 1.0d, strSet28);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) 1.0d, strSet28);
        java.lang.String str31 = gossipInfo30.sourceNode;
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str31, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02166");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.rack;
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str11, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test02167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02167");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 1.0d);
    }

    @Test
    public void test02168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02168");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList6 = nodesStatus5.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus8 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        java.lang.Class<?> wildcardClass9 = nodesStatus8.getClass();
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList6);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test02169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02169");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.rack;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.dc;
        java.lang.String str17 = endpointState9.status;
        java.lang.String str18 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test02170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02170");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        java.util.Set<java.lang.String> strSet22 = gossipInfo21.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 1.0d, strSet22);
        java.util.Set<java.lang.String> strSet24 = gossipInfo23.endpointNames;
        java.util.Set<java.lang.String> strSet25 = gossipInfo23.endpointNames;
        java.util.Set<java.lang.String> strSet26 = gossipInfo23.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 10.0d, strSet26);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap4, (java.lang.Double) 0.0d, strSet26);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap1, (java.lang.Double) 0.0d, strSet26);
        java.lang.String str30 = gossipInfo29.sourceNode;
        java.util.Set<java.lang.String> strSet31 = gossipInfo29.endpointNames;
        java.lang.String str32 = gossipInfo29.sourceNode;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test02171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02171");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap22 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap25, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet31);
        java.util.Set<java.lang.String> strSet34 = gossipInfo33.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo35 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap22, (java.lang.Double) 1.0d, strSet34);
        java.util.Set<java.lang.String> strSet36 = gossipInfo35.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo37 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap19, (java.lang.Double) 100.0d, strSet36);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo38 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap16, (java.lang.Double) 1.0d, strSet36);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap39 = gossipInfo38.endpoints;
        java.util.Set<java.lang.String> strSet40 = gossipInfo38.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo41 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap13, (java.lang.Double) (-1.0d), strSet40);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo42 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap10, (java.lang.Double) 1.0d, strSet40);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo43 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) 0.0d, strSet40);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo44 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap4, (java.lang.Double) 10.0d, strSet40);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo45 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 0.0d, strSet40);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strSet40);
    }

    @Test
    public void test02172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02172");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.status;
        java.lang.String str12 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str11, "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str12, "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02173");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "hi!", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "hi!", "", (java.lang.Double) 10.0d, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.Class<?> wildcardClass11 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02174");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap2);
    }

    @Test
    public void test02175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02175");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        java.util.Set<java.lang.String> strSet25 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) 1.0d, strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap10, (java.lang.Double) 0.0d, strSet25);
        java.util.Set<java.lang.String> strSet28 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) 0.0d, strSet28);
        java.util.Set<java.lang.String> strSet30 = gossipInfo29.endpointNames;
        java.util.Set<java.lang.String> strSet31 = gossipInfo29.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap4, (java.lang.Double) 100.0d, strSet31);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 0.0d, strSet31);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap34 = gossipInfo33.endpoints;
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(strMap34);
    }

    @Test
    public void test02176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02176");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus6 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus8 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList4);
    }

    @Test
    public void test02177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02177");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d);
    }

    @Test
    public void test02178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02178");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Set<java.lang.String> strSet3 = null;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo4 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 1.0d, strSet3);
        java.lang.String str5 = gossipInfo4.sourceNode;
        java.lang.String str6 = gossipInfo4.sourceNode;
        java.lang.Class<?> wildcardClass7 = gossipInfo4.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str5, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str6, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test02179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02179");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "hi!", "", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.status;
        java.lang.String str13 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02180");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 1.0d);
    }

    @Test
    public void test02181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02181");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str23 = gossipInfo22.sourceNode;
        java.util.Set<java.lang.String> strSet24 = gossipInfo22.endpointNames;
        java.util.Set<java.lang.String> strSet25 = gossipInfo22.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap7, (java.lang.Double) 100.0d, strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap4, (java.lang.Double) 10.0d, strSet25);
        java.lang.String str28 = gossipInfo27.sourceNode;
        java.lang.String str29 = gossipInfo27.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap30 = gossipInfo27.endpoints;
        java.util.Set<java.lang.String> strSet31 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap1, (java.lang.Double) (-1.0d), strSet31);
        java.lang.Class<?> wildcardClass33 = gossipInfo32.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str23, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str28, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str29, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test02182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02182");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo12 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet10);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = gossipInfo12.endpoints;
        java.util.Set<java.lang.String> strSet14 = gossipInfo12.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet14);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = gossipInfo15.endpoints;
        java.lang.String str17 = gossipInfo15.sourceNode;
        java.util.Set<java.lang.String> strSet18 = gossipInfo15.endpointNames;
        java.lang.Class<?> wildcardClass19 = gossipInfo15.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str17, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02183");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.releaseVersion;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.releaseVersion;
        java.lang.String str16 = endpointState9.tokens;
        java.lang.String str17 = endpointState9.releaseVersion;
        java.lang.String str18 = endpointState9.getRack();
        java.lang.String str19 = endpointState9.tokens;
        java.lang.String str20 = endpointState9.hostId;
        java.lang.String str21 = endpointState9.status;
        java.lang.String str22 = endpointState9.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str22, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02184");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02185");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) (-1.0d), "hi!", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 1.0d);
        java.lang.Class<?> wildcardClass10 = endpointState9.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test02186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02186");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        java.util.Set<java.lang.String> strSet25 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) 1.0d, strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap10, (java.lang.Double) 0.0d, strSet25);
        java.util.Set<java.lang.String> strSet28 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) 0.0d, strSet28);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap30 = gossipInfo29.endpoints;
        java.util.Set<java.lang.String> strSet31 = gossipInfo29.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap4, (java.lang.Double) 0.0d, strSet31);
        java.util.Set<java.lang.String> strSet33 = gossipInfo32.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo34 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap1, (java.lang.Double) 100.0d, strSet33);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap35 = gossipInfo34.endpoints;
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNull(strMap35);
    }

    @Test
    public void test02187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02187");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02188");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = gossipInfo15.endpoints;
        java.util.Set<java.lang.String> strSet17 = gossipInfo15.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 10.0d, strSet17);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = gossipInfo18.endpoints;
        java.lang.String str20 = gossipInfo18.sourceNode;
        java.lang.String str21 = gossipInfo18.sourceNode;
        java.lang.String str22 = gossipInfo18.sourceNode;
        java.util.Set<java.lang.String> strSet23 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet23);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str20, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str21, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str22, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test02189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02189");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.hostId;
        java.lang.String str15 = endpointState9.dc;
        java.lang.String str16 = endpointState9.dc;
        java.lang.String str17 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test02190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02190");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 100.0d, "hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test02191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02191");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "hi!", "", "hi!", (java.lang.Double) 1.0d, "hi!", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.status;
        java.lang.String str13 = endpointState9.endpoint;
        java.lang.String str14 = endpointState9.endpoint;
        java.lang.String str15 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test02192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02192");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo12 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet10);
        java.util.Set<java.lang.String> strSet13 = gossipInfo12.endpointNames;
        java.lang.String str14 = gossipInfo12.sourceNode;
        java.util.Set<java.lang.String> strSet15 = gossipInfo12.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo16 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) 10.0d, strSet15);
        java.util.Set<java.lang.String> strSet17 = gossipInfo16.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap18 = gossipInfo16.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = gossipInfo16.endpoints;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
    }

    @Test
    public void test02193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02193");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test02194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02194");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 10.0d);
    }

    @Test
    public void test02195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02195");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList5 = nodesStatus3.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList6 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus8 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList9 = nodesStatus8.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList10 = nodesStatus8.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus11 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList10);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus12 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList10);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus13 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList10);
        java.lang.Class<?> wildcardClass14 = nodesStatus13.getClass();
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList5);
        org.junit.Assert.assertNotNull(gossipInfoList6);
        org.junit.Assert.assertNotNull(gossipInfoList9);
        org.junit.Assert.assertNotNull(gossipInfoList10);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test02196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02196");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) 1.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.hostId;
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.hostId;
        java.lang.String str14 = endpointState9.hostId;
        java.lang.String str15 = endpointState9.dc;
        java.lang.String str16 = endpointState9.hostId;
        java.lang.String str17 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test02197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02197");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.releaseVersion;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.getRack();
        java.lang.String str15 = endpointState9.dc;
        java.lang.String str16 = endpointState9.hostId;
        java.lang.String str17 = endpointState9.dc;
        java.lang.String str18 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test02198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02198");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) 100.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02199");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo12 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet10);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo13 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet10);
        java.util.Set<java.lang.String> strSet14 = gossipInfo13.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap15 = gossipInfo13.endpoints;
        java.lang.String str16 = gossipInfo13.sourceNode;
        java.util.Set<java.lang.String> strSet17 = gossipInfo13.endpointNames;
        java.lang.String str18 = gossipInfo13.sourceNode;
        java.lang.String str19 = gossipInfo13.sourceNode;
        java.util.Set<java.lang.String> strSet20 = gossipInfo13.endpointNames;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str18, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str19, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test02200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02200");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 1.0d, "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d);
    }

    @Test
    public void test02201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02201");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.rack;
        java.lang.String str13 = endpointState9.hostId;
        java.lang.String str14 = endpointState9.getRack();
        java.lang.String str15 = endpointState9.status;
        java.lang.String str16 = endpointState9.hostId;
        java.lang.String str17 = endpointState9.hostId;
        java.lang.String str18 = endpointState9.getRack();
        java.lang.String str19 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test02202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02202");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap19, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        java.util.Set<java.lang.String> strSet28 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap16, (java.lang.Double) 1.0d, strSet28);
        java.util.Set<java.lang.String> strSet30 = gossipInfo29.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap13, (java.lang.Double) 100.0d, strSet30);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap10, (java.lang.Double) 1.0d, strSet30);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap33 = gossipInfo32.endpoints;
        java.util.Set<java.lang.String> strSet34 = gossipInfo32.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo35 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) (-1.0d), strSet34);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo36 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 10.0d, strSet34);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo37 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet34);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strSet34);
    }

    @Test
    public void test02203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02203");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList6 = nodesStatus5.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus8 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList9 = nodesStatus8.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList10 = nodesStatus8.endpointStates;
        java.lang.Class<?> wildcardClass11 = nodesStatus8.getClass();
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList6);
        org.junit.Assert.assertNotNull(gossipInfoList9);
        org.junit.Assert.assertNotNull(gossipInfoList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02204");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.getRack();
        java.lang.String str17 = endpointState9.endpoint;
        java.lang.String str18 = endpointState9.toString();
        java.lang.String str19 = endpointState9.dc;
        java.lang.String str20 = endpointState9.hostId;
        java.lang.String str21 = endpointState9.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str18, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str21, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02205");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        java.util.Set<java.lang.String> strSet25 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) 1.0d, strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap10, (java.lang.Double) 0.0d, strSet25);
        java.util.Set<java.lang.String> strSet28 = gossipInfo27.endpointNames;
        java.util.Set<java.lang.String> strSet29 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) 1.0d, strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 1.0d, strSet29);
        java.util.Set<java.lang.String> strSet32 = gossipInfo31.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap1, (java.lang.Double) 10.0d, strSet32);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet32);
    }

    @Test
    public void test02206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02206");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02207");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.getDc();
        java.lang.String str14 = endpointState9.toString();
        java.lang.String str15 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test02208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02208");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.releaseVersion;
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.rack;
        java.lang.String str16 = endpointState9.status;
        java.lang.String str17 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test02209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02209");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 0.0d, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str11, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02210");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "", "hi!", (java.lang.Double) 10.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.status;
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.hostId;
        java.lang.String str15 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test02211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02211");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 10.0d, "hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test02212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02212");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02213");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d);
    }

    @Test
    public void test02214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02214");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = gossipInfo15.endpoints;
        java.util.Set<java.lang.String> strSet17 = gossipInfo15.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 1.0d, strSet17);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap1, (java.lang.Double) 0.0d, strSet17);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test02215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02215");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.endpoint;
        java.lang.String str14 = endpointState9.status;
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.releaseVersion;
        java.lang.String str17 = endpointState9.tokens;
        java.lang.String str18 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test02216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02216");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.getRack();
        java.lang.String str14 = endpointState9.status;
        java.lang.String str15 = endpointState9.releaseVersion;
        java.lang.String str16 = endpointState9.releaseVersion;
        java.lang.String str17 = endpointState9.hostId;
        java.lang.String str18 = endpointState9.endpoint;
        java.lang.Class<?> wildcardClass19 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02217");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap24 = gossipInfo23.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo23.endpoints;
        java.util.Set<java.lang.String> strSet26 = gossipInfo23.endpointNames;
        java.util.Set<java.lang.String> strSet27 = gossipInfo23.endpointNames;
        java.lang.String str28 = gossipInfo23.sourceNode;
        java.util.Set<java.lang.String> strSet29 = gossipInfo23.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 0.0d, strSet29);
        java.lang.String str32 = gossipInfo31.sourceNode;
        java.util.Set<java.lang.String> strSet33 = gossipInfo31.endpointNames;
        java.lang.String str34 = gossipInfo31.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap35 = gossipInfo31.endpoints;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str32, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str34, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap35);
    }

    @Test
    public void test02218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02218");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.getRack();
        java.lang.String str14 = endpointState9.status;
        java.lang.String str15 = endpointState9.dc;
        java.lang.Class<?> wildcardClass16 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test02219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02219");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "hi!", "", "hi!", (java.lang.Double) 1.0d, "hi!", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.status;
        java.lang.String str14 = endpointState9.releaseVersion;
        java.lang.String str15 = endpointState9.getRack();
        java.lang.String str16 = endpointState9.rack;
        java.lang.Class<?> wildcardClass17 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02220");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
    }

    @Test
    public void test02221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02221");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 10.0d, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d);
    }

    @Test
    public void test02222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02222");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Set<java.lang.String> strSet3 = null;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo4 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet3);
    }

    @Test
    public void test02223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02223");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.getRack();
        java.lang.String str17 = endpointState9.endpoint;
        java.lang.String str18 = endpointState9.toString();
        java.lang.String str19 = endpointState9.rack;
        java.lang.String str20 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str18, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test02224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02224");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02225");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.endpoint;
        java.lang.String str15 = endpointState9.toString();
        java.lang.String str16 = endpointState9.tokens;
        java.lang.String str17 = endpointState9.releaseVersion;
        java.lang.String str18 = endpointState9.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str18, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02226");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.rack;
        java.lang.String str16 = endpointState9.endpoint;
        java.lang.String str17 = endpointState9.tokens;
        java.lang.String str18 = endpointState9.getDc();
        java.lang.String str19 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test02227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02227");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test02228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02228");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 1.0d, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) (-1.0d));
    }

    @Test
    public void test02229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02229");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.status;
        java.lang.Class<?> wildcardClass12 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str11, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test02230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02230");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList6 = nodesStatus5.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus8 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList9 = nodesStatus8.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList10 = nodesStatus8.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus11 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList10);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList12 = nodesStatus11.endpointStates;
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList6);
        org.junit.Assert.assertNotNull(gossipInfoList9);
        org.junit.Assert.assertNotNull(gossipInfoList10);
        org.junit.Assert.assertNotNull(gossipInfoList12);
    }

    @Test
    public void test02231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02231");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "hi!", "hi!", "hi!", "", (java.lang.Double) 100.0d, "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.getRack();
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.dc;
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.getRack();
        java.lang.String str15 = endpointState9.getDc();
        java.lang.String str16 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test02232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02232");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.dc;
        java.lang.String str13 = endpointState9.rack;
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.hostId;
        java.lang.String str16 = endpointState9.endpoint;
        java.lang.String str17 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test02233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02233");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap19, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        java.util.Set<java.lang.String> strSet28 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap16, (java.lang.Double) 1.0d, strSet28);
        java.util.Set<java.lang.String> strSet30 = gossipInfo29.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap13, (java.lang.Double) 100.0d, strSet30);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 100.0d, strSet30);
        java.util.Set<java.lang.String> strSet33 = gossipInfo32.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo34 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 100.0d, strSet33);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo35 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet33);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo36 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap1, (java.lang.Double) 100.0d, strSet33);
        java.lang.Class<?> wildcardClass37 = strSet33.getClass();
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test02234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02234");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 10.0d, "", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02235");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.tokens;
        java.lang.String str13 = endpointState9.endpoint;
        java.lang.String str14 = endpointState9.getRack();
        java.lang.String str15 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test02236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02236");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        java.lang.String str16 = gossipInfo15.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap17 = gossipInfo15.endpoints;
        java.util.Set<java.lang.String> strSet18 = gossipInfo15.endpointNames;
        java.util.Set<java.lang.String> strSet19 = gossipInfo15.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo20 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet19);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strSet19);
    }

    @Test
    public void test02237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02237");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "hi!", "", "hi!", (java.lang.Double) 1.0d, "hi!", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.rack;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.rack;
        java.lang.String str16 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test02238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02238");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.util.Set<java.lang.String> strSet19 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo20 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 1.0d, strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap4, (java.lang.Double) 0.0d, strSet19);
        java.util.Set<java.lang.String> strSet22 = gossipInfo21.endpointNames;
        java.util.Set<java.lang.String> strSet23 = gossipInfo21.endpointNames;
        java.lang.String str24 = gossipInfo21.sourceNode;
        java.util.Set<java.lang.String> strSet25 = gossipInfo21.endpointNames;
        java.util.Set<java.lang.String> strSet26 = gossipInfo21.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 0.0d, strSet26);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap28 = gossipInfo27.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap29 = gossipInfo27.endpoints;
        java.util.Set<java.lang.String> strSet30 = gossipInfo27.endpointNames;
        java.lang.Class<?> wildcardClass31 = strSet30.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test02239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02239");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.tokens;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.getRack();
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.tokens;
        java.lang.String str17 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test02240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02240");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "hi!", (java.lang.Double) 0.0d, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.status;
        java.lang.String str12 = endpointState9.status;
        java.lang.String str13 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test02241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02241");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) (-1.0d));
    }

    @Test
    public void test02242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02242");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 10.0d, "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ");
    }

    @Test
    public void test02243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02243");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 10.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 1.0d);
    }

    @Test
    public void test02244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02244");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo16 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 1.0d, (java.util.Set<java.lang.String>) strSet13);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap17 = gossipInfo16.endpoints;
        java.lang.String str18 = gossipInfo16.sourceNode;
        java.lang.String str19 = gossipInfo16.sourceNode;
        java.util.Set<java.lang.String> strSet20 = gossipInfo16.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 0.0d, strSet20);
        java.util.Set<java.lang.String> strSet22 = gossipInfo21.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap23 = gossipInfo21.endpoints;
        java.lang.String str24 = gossipInfo21.sourceNode;
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str18, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str19, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str24, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02245");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.toString();
        java.lang.String str14 = endpointState9.releaseVersion;
        java.lang.String str15 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
    }

    @Test
    public void test02246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02246");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 1.0d, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 10.0d);
    }

    @Test
    public void test02247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02247");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02248");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet16);
        java.util.Set<java.lang.String> strSet20 = gossipInfo19.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap4, (java.lang.Double) (-1.0d), strSet20);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) 1.0d, strSet20);
        java.lang.String str23 = gossipInfo22.sourceNode;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str23, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02249");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.releaseVersion;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.releaseVersion;
        java.lang.String str16 = endpointState9.tokens;
        java.lang.String str17 = endpointState9.releaseVersion;
        java.lang.String str18 = endpointState9.getRack();
        java.lang.String str19 = endpointState9.getRack();
        java.lang.String str20 = endpointState9.status;
        java.lang.String str21 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test02250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02250");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.releaseVersion;
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.tokens;
        java.lang.String str16 = endpointState9.getDc();
        java.lang.String str17 = endpointState9.hostId;
        java.lang.String str18 = endpointState9.dc;
        java.lang.String str19 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test02251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02251");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "hi!", "", "", "", (java.lang.Double) 10.0d, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.rack;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.status;
        java.lang.String str14 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test02252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02252");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        java.util.Set<java.lang.String> strSet25 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) 1.0d, strSet25);
        java.util.Set<java.lang.String> strSet27 = gossipInfo26.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap10, (java.lang.Double) 100.0d, strSet27);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 100.0d, strSet27);
        java.util.Set<java.lang.String> strSet30 = gossipInfo29.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 100.0d, strSet30);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap1, (java.lang.Double) 1.0d, strSet30);
        java.lang.Class<?> wildcardClass33 = strSet30.getClass();
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test02253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02253");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap2);
    }

    @Test
    public void test02254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02254");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.util.Set<java.lang.String> strSet19 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo20 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 1.0d, strSet19);
        java.util.Set<java.lang.String> strSet21 = gossipInfo20.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap4, (java.lang.Double) 100.0d, strSet21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet21);
        java.lang.String str24 = gossipInfo23.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo23.endpoints;
        java.lang.String str26 = gossipInfo23.sourceNode;
        java.util.Set<java.lang.String> strSet27 = gossipInfo23.endpointNames;
        java.lang.String str28 = gossipInfo23.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap29 = gossipInfo23.endpoints;
        java.util.Set<java.lang.String> strSet30 = gossipInfo23.endpointNames;
        java.util.Set<java.lang.String> strSet31 = gossipInfo23.endpointNames;
        java.lang.String str32 = gossipInfo23.sourceNode;
        java.lang.Class<?> wildcardClass33 = gossipInfo23.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str24, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str26, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str28, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str32, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test02255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02255");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.rack;
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.status;
        java.lang.String str14 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02256");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "hi!", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 1.0d, "hi!", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 100.0d);
    }

    @Test
    public void test02257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02257");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.lang.String str19 = gossipInfo18.sourceNode;
        java.util.Set<java.lang.String> strSet20 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) 100.0d, strSet20);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 100.0d, strSet20);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap1, (java.lang.Double) (-1.0d), strSet20);
        java.lang.String str24 = gossipInfo23.sourceNode;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test02258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02258");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.lang.String str19 = gossipInfo18.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap20 = gossipInfo18.endpoints;
        java.util.Set<java.lang.String> strSet21 = gossipInfo18.endpointNames;
        java.util.Set<java.lang.String> strSet22 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 100.0d, strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) 0.0d, strSet22);
        java.lang.Class<?> wildcardClass26 = gossipInfo25.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test02259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02259");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d), "", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 100.0d);
    }

    @Test
    public void test02260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02260");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "hi!", "", "hi!", (java.lang.Double) 1.0d, "hi!", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.rack;
        java.lang.String str14 = endpointState9.rack;
        java.lang.String str15 = endpointState9.status;
        java.lang.String str16 = endpointState9.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02261");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap2);
    }

    @Test
    public void test02262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02262");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "hi!", "", "hi!", (java.lang.Double) 1.0d, "hi!", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.status;
        java.lang.String str13 = endpointState9.endpoint;
        java.lang.String str14 = endpointState9.toString();
        java.lang.String str15 = endpointState9.rack;
        java.lang.Class<?> wildcardClass16 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test02263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02263");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "hi!", "", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.dc;
        java.lang.String str11 = endpointState9.releaseVersion;
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str11, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str13, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02264");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.toString();
        java.lang.String str14 = endpointState9.releaseVersion;
        java.lang.String str15 = endpointState9.hostId;
        java.lang.String str16 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test02265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02265");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap19, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap16, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet25);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap30 = gossipInfo29.endpoints;
        java.util.Set<java.lang.String> strSet31 = gossipInfo29.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 0.0d, strSet31);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 1.0d, strSet31);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo34 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap4, (java.lang.Double) (-1.0d), strSet31);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo35 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet31);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap36 = gossipInfo35.endpoints;
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(strMap36);
    }

    @Test
    public void test02266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02266");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.dc;
        java.lang.String str11 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02267");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "", "hi!", (java.lang.Double) 10.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.status;
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02268");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.getRack();
        java.lang.String str14 = endpointState9.getRack();
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.Class<?> wildcardClass16 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test02269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02269");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02270");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.endpoint;
        java.lang.String str14 = endpointState9.hostId;
        java.lang.String str15 = endpointState9.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02271");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "", "hi!", (java.lang.Double) 10.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.toString();
        java.lang.String str13 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02272");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap2);
    }

    @Test
    public void test02273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02273");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap2);
    }

    @Test
    public void test02274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02274");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo16 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet13);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo17 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap1, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet13);
        java.lang.String str18 = gossipInfo17.sourceNode;
        java.util.Set<java.lang.String> strSet19 = gossipInfo17.endpointNames;
        java.lang.String str20 = gossipInfo17.sourceNode;
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test02275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02275");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap27 = gossipInfo26.endpoints;
        java.util.Set<java.lang.String> strSet28 = gossipInfo26.endpointNames;
        java.util.Set<java.lang.String> strSet29 = gossipInfo26.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap7, (java.lang.Double) 0.0d, strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap4, (java.lang.Double) 0.0d, strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet29);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test02276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02276");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.status;
        java.lang.Class<?> wildcardClass12 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test02277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02277");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "hi!", (java.lang.Double) 10.0d, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.tokens;
        java.lang.String str11 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test02278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02278");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "hi!", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.getRack();
        java.lang.String str11 = endpointState9.releaseVersion;
        java.lang.String str12 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str11, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02279");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 100.0d, "hi!", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02280");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("hi!", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", strMap2);
    }

    @Test
    public void test02281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02281");
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] gossipInfoArray0 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] {};
        java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList1 = new java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1, gossipInfoArray0);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus((java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList6 = nodesStatus5.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList8 = nodesStatus7.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList9 = nodesStatus7.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus10 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList9);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList11 = nodesStatus10.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList12 = nodesStatus10.endpointStates;
        java.lang.Class<?> wildcardClass13 = gossipInfoList12.getClass();
        org.junit.Assert.assertNotNull(gossipInfoArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList6);
        org.junit.Assert.assertNotNull(gossipInfoList8);
        org.junit.Assert.assertNotNull(gossipInfoList9);
        org.junit.Assert.assertNotNull(gossipInfoList11);
        org.junit.Assert.assertNotNull(gossipInfoList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02282");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 1.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
    }

    @Test
    public void test02283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02283");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.hostId;
        java.lang.String str12 = endpointState9.releaseVersion;
        java.lang.String str13 = endpointState9.toString();
        java.lang.String str14 = endpointState9.hostId;
        java.lang.String str15 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test02284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02284");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.dc;
        java.lang.String str17 = endpointState9.rack;
        java.lang.String str18 = endpointState9.status;
        java.lang.String str19 = endpointState9.getDc();
        java.lang.Class<?> wildcardClass20 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test02285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02285");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.tokens;
        java.lang.String str16 = endpointState9.getRack();
        java.lang.String str17 = endpointState9.status;
        java.lang.String str18 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test02286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02286");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.rack;
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.rack;
        java.lang.String str16 = endpointState9.rack;
        java.lang.String str17 = endpointState9.endpoint;
        java.lang.String str18 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test02287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02287");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        java.lang.String str16 = gossipInfo15.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap17 = gossipInfo15.endpoints;
        java.util.Set<java.lang.String> strSet18 = gossipInfo15.endpointNames;
        java.util.Set<java.lang.String> strSet19 = gossipInfo15.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo20 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 100.0d, strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet19);
        java.lang.String str22 = gossipInfo21.sourceNode;
        java.lang.String str23 = gossipInfo21.sourceNode;
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str22, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str23, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02288");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.tokens;
        java.lang.String str16 = endpointState9.endpoint;
        java.lang.String str17 = endpointState9.hostId;
        java.lang.String str18 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test02289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02289");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 1.0d, "", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02290");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02291");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "hi!", "", "hi!", (java.lang.Double) 1.0d, "hi!", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.toString();
        java.lang.String str14 = endpointState9.dc;
        java.lang.Class<?> wildcardClass15 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02292");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.tokens;
        java.lang.String str11 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str11, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02293");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.dc;
        java.lang.String str17 = endpointState9.status;
        java.lang.String str18 = endpointState9.hostId;
        java.lang.String str19 = endpointState9.status;
        java.lang.String str20 = endpointState9.toString();
        java.lang.String str21 = endpointState9.getDc();
        java.lang.String str22 = endpointState9.hostId;
        java.lang.String str23 = endpointState9.getDc();
        java.lang.String str24 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str20, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
    }

    @Test
    public void test02294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02294");
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] gossipInfoArray0 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] {};
        java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList1 = new java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1, gossipInfoArray0);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus((java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList6 = nodesStatus5.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus8 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus9 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus10 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus11 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus12 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList13 = nodesStatus12.endpointStates;
        java.lang.Class<?> wildcardClass14 = nodesStatus12.getClass();
        org.junit.Assert.assertNotNull(gossipInfoArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList6);
        org.junit.Assert.assertNotNull(gossipInfoList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test02295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02295");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.releaseVersion;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.releaseVersion;
        java.lang.String str16 = endpointState9.getDc();
        java.lang.String str17 = endpointState9.toString();
        java.lang.String str18 = endpointState9.tokens;
        java.lang.Class<?> wildcardClass19 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str17, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test02296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02296");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap27 = gossipInfo26.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap28 = gossipInfo26.endpoints;
        java.util.Set<java.lang.String> strSet29 = gossipInfo26.endpointNames;
        java.util.Set<java.lang.String> strSet30 = gossipInfo26.endpointNames;
        java.lang.String str31 = gossipInfo26.sourceNode;
        java.util.Set<java.lang.String> strSet32 = gossipInfo26.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 0.0d, strSet32);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo34 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet32);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo35 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap1, (java.lang.Double) 10.0d, strSet32);
        java.lang.Class<?> wildcardClass36 = strSet32.getClass();
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test02297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02297");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.lang.String str19 = gossipInfo18.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap20 = gossipInfo18.endpoints;
        java.util.Set<java.lang.String> strSet21 = gossipInfo18.endpointNames;
        java.util.Set<java.lang.String> strSet22 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 100.0d, strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap4, (java.lang.Double) 1.0d, strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) (-1.0d), strSet22);
        java.lang.Class<?> wildcardClass26 = strSet22.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test02298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02298");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.dc;
        java.lang.String str11 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str11, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02299");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "hi!", "", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.dc;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02300");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.tokens;
        java.lang.String str16 = endpointState9.toString();
        java.lang.String str17 = endpointState9.endpoint;
        java.lang.String str18 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test02301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02301");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 0.0d, "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02302");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        java.util.Set<java.lang.String> strSet22 = gossipInfo21.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 1.0d, strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap7, (java.lang.Double) 0.0d, strSet22);
        java.util.Set<java.lang.String> strSet25 = gossipInfo24.endpointNames;
        java.util.Set<java.lang.String> strSet26 = gossipInfo24.endpointNames;
        java.lang.String str27 = gossipInfo24.sourceNode;
        java.util.Set<java.lang.String> strSet28 = gossipInfo24.endpointNames;
        java.util.Set<java.lang.String> strSet29 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet29);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap32 = gossipInfo31.endpoints;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNull(strMap32);
    }

    @Test
    public void test02303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02303");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02304");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.toString();
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.releaseVersion;
        java.lang.String str16 = endpointState9.getDc();
        java.lang.String str17 = endpointState9.rack;
        java.lang.Class<?> wildcardClass18 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test02305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02305");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap19, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap16, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet25);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap30 = gossipInfo29.endpoints;
        java.util.Set<java.lang.String> strSet31 = gossipInfo29.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 0.0d, strSet31);
        java.util.Set<java.lang.String> strSet33 = gossipInfo32.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo34 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 100.0d, strSet33);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo35 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap4, (java.lang.Double) 1.0d, strSet33);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo36 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap1, (java.lang.Double) (-1.0d), strSet33);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(strSet33);
    }

    @Test
    public void test02306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02306");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : " + "'", str10, "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ");
    }

    @Test
    public void test02307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02307");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.Class<?> wildcardClass10 = endpointState9.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test02308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02308");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "hi!", "", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str11, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str12, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02309");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 100.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test02310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02310");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo9 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap1, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet7);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = gossipInfo9.endpoints;
        java.util.Set<java.lang.String> strSet11 = gossipInfo9.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap12 = gossipInfo9.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = gossipInfo9.endpoints;
        java.lang.String str14 = gossipInfo9.sourceNode;
        java.util.Set<java.lang.String> strSet15 = gossipInfo9.endpointNames;
        java.lang.String str16 = gossipInfo9.sourceNode;
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test02311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02311");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "hi!", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 10.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.Class<?> wildcardClass11 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02312");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.releaseVersion;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.releaseVersion;
        java.lang.String str16 = endpointState9.getDc();
        java.lang.String str17 = endpointState9.dc;
        java.lang.String str18 = endpointState9.getDc();
        java.lang.String str19 = endpointState9.tokens;
        java.lang.String str20 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test02313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02313");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.util.Set<java.lang.String> strSet19 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo20 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 1.0d, strSet19);
        java.util.Set<java.lang.String> strSet21 = gossipInfo20.endpointNames;
        java.util.Set<java.lang.String> strSet22 = gossipInfo20.endpointNames;
        java.util.Set<java.lang.String> strSet23 = gossipInfo20.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 10.0d, strSet23);
        java.util.Set<java.lang.String> strSet25 = gossipInfo24.endpointNames;
        java.util.Set<java.lang.String> strSet26 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap1, (java.lang.Double) 100.0d, strSet26);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test02314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02314");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo12 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet10);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo13 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 1.0d, (java.util.Set<java.lang.String>) strSet10);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap14 = gossipInfo13.endpoints;
        java.lang.String str15 = gossipInfo13.sourceNode;
        java.lang.String str16 = gossipInfo13.sourceNode;
        java.util.Set<java.lang.String> strSet17 = gossipInfo13.endpointNames;
        java.lang.String str18 = gossipInfo13.sourceNode;
        java.util.Set<java.lang.String> strSet19 = gossipInfo13.endpointNames;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str18, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet19);
    }

    @Test
    public void test02315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02315");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.endpoint;
        java.lang.String str15 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test02316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02316");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap2);
    }

    @Test
    public void test02317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02317");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.status;
        java.lang.String str15 = endpointState9.tokens;
        java.lang.String str16 = endpointState9.hostId;
        java.lang.String str17 = endpointState9.toString();
        java.lang.String str18 = endpointState9.toString();
        java.lang.String str19 = endpointState9.status;
        java.lang.String str20 = endpointState9.hostId;
        java.lang.String str21 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str17, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str18, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test02318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02318");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.getRack();
        java.lang.String str11 = endpointState9.rack;
        java.lang.String str12 = endpointState9.status;
        java.lang.String str13 = endpointState9.rack;
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.releaseVersion;
        java.lang.String str16 = endpointState9.dc;
        java.lang.String str17 = endpointState9.endpoint;
        java.lang.String str18 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str17, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str18, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02319");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.releaseVersion;
        java.lang.String str12 = endpointState9.tokens;
        java.lang.String str13 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str11, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str13, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02320");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.getRack();
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.dc;
        java.lang.String str13 = endpointState9.endpoint;
        java.lang.Class<?> wildcardClass14 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str13, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test02321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02321");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02322");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet16);
        java.lang.String str20 = gossipInfo19.sourceNode;
        java.util.Set<java.lang.String> strSet21 = gossipInfo19.endpointNames;
        java.util.Set<java.lang.String> strSet22 = gossipInfo19.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap4, (java.lang.Double) 100.0d, strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet22);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo24.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap26 = gossipInfo24.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap27 = gossipInfo24.endpoints;
        java.lang.String str28 = gossipInfo24.sourceNode;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str20, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str28, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02323");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.toString();
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.releaseVersion;
        java.lang.String str16 = endpointState9.releaseVersion;
        java.lang.String str17 = endpointState9.toString();
        java.lang.String str18 = endpointState9.getRack();
        java.lang.String str19 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str17, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test02324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02324");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo9 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap1, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet7);
        java.util.Set<java.lang.String> strSet10 = gossipInfo9.endpointNames;
        java.lang.String str11 = gossipInfo9.sourceNode;
        java.util.Set<java.lang.String> strSet12 = gossipInfo9.endpointNames;
        java.lang.String str13 = gossipInfo9.sourceNode;
        java.util.Set<java.lang.String> strSet14 = gossipInfo9.endpointNames;
        java.util.Set<java.lang.String> strSet15 = gossipInfo9.endpointNames;
        java.lang.String str16 = gossipInfo9.sourceNode;
        java.lang.String str17 = gossipInfo9.sourceNode;
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test02325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02325");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 100.0d, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) (-1.0d));
    }

    @Test
    public void test02326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02326");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 1.0d, "", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.status;
        java.lang.String str12 = endpointState9.dc;
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.hostId;
        java.lang.String str15 = endpointState9.getRack();
        java.lang.String str16 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str13, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02327");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.status;
        java.lang.String str16 = endpointState9.getRack();
        java.lang.String str17 = endpointState9.endpoint;
        java.lang.String str18 = endpointState9.getRack();
        java.lang.String str19 = endpointState9.status;
        java.lang.Class<?> wildcardClass20 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test02328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02328");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d, "", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d);
    }

    @Test
    public void test02329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02329");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet16);
        java.lang.String str20 = gossipInfo19.sourceNode;
        java.util.Set<java.lang.String> strSet21 = gossipInfo19.endpointNames;
        java.util.Set<java.lang.String> strSet22 = gossipInfo19.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap4, (java.lang.Double) 100.0d, strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 1.0d, strSet22);
        java.lang.String str25 = gossipInfo24.sourceNode;
        java.lang.String str26 = gossipInfo24.sourceNode;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str20, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str25, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str26, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02330");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        java.util.Set<java.lang.String> strSet25 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) 1.0d, strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap10, (java.lang.Double) 0.0d, strSet25);
        java.util.Set<java.lang.String> strSet28 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) 0.0d, strSet28);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet28);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) 10.0d, strSet28);
        java.lang.String str32 = gossipInfo31.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap33 = gossipInfo31.endpoints;
        java.lang.String str34 = gossipInfo31.sourceNode;
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str32, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str34, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02331");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 1.0d);
    }

    @Test
    public void test02332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02332");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 10.0d, "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str11, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02333");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.util.Set<java.lang.String> strSet19 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo20 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 1.0d, strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap4, (java.lang.Double) 0.0d, strSet19);
        java.util.Set<java.lang.String> strSet22 = gossipInfo21.endpointNames;
        java.util.Set<java.lang.String> strSet23 = gossipInfo21.endpointNames;
        java.lang.String str24 = gossipInfo21.sourceNode;
        java.lang.String str25 = gossipInfo21.sourceNode;
        java.util.Set<java.lang.String> strSet26 = gossipInfo21.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet26);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test02334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02334");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.hostId;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.dc;
        java.lang.String str16 = endpointState9.getDc();
        java.lang.String str17 = endpointState9.rack;
        java.lang.String str18 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test02335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02335");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", (java.lang.Double) 0.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "hi!", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test02336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02336");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 10.0d, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str11, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02337");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = gossipInfo15.endpoints;
        java.util.Set<java.lang.String> strSet17 = gossipInfo15.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 10.0d, strSet17);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet17);
        java.util.Set<java.lang.String> strSet20 = gossipInfo19.endpointNames;
        java.util.Set<java.lang.String> strSet21 = gossipInfo19.endpointNames;
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet21);
    }

    @Test
    public void test02338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02338");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo9 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap1, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet7);
        java.lang.String str10 = gossipInfo9.sourceNode;
        java.lang.Class<?> wildcardClass11 = gossipInfo9.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02339");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "hi!", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.rack;
        java.lang.String str13 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test02340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02340");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.rack;
        java.lang.String str13 = endpointState9.hostId;
        java.lang.String str14 = endpointState9.getRack();
        java.lang.String str15 = endpointState9.status;
        java.lang.String str16 = endpointState9.hostId;
        java.lang.String str17 = endpointState9.releaseVersion;
        java.lang.String str18 = endpointState9.releaseVersion;
        java.lang.String str19 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test02341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02341");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.status;
        java.lang.String str12 = endpointState9.status;
        java.lang.String str13 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str11, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str12, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str13, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02342");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) (-1.0d), "", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.dc;
        java.lang.String str11 = endpointState9.status;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.Class<?> wildcardClass14 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str11, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str12, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test02343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02343");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 1.0d, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test02344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02344");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.util.Set<java.lang.String> strSet19 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo20 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 1.0d, strSet19);
        java.util.Set<java.lang.String> strSet21 = gossipInfo20.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap4, (java.lang.Double) 100.0d, strSet21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet21);
        java.lang.String str24 = gossipInfo23.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo23.endpoints;
        java.lang.String str26 = gossipInfo23.sourceNode;
        java.util.Set<java.lang.String> strSet27 = gossipInfo23.endpointNames;
        java.lang.String str28 = gossipInfo23.sourceNode;
        java.util.Set<java.lang.String> strSet29 = gossipInfo23.endpointNames;
        java.util.Set<java.lang.String> strSet30 = gossipInfo23.endpointNames;
        java.lang.String str31 = gossipInfo23.sourceNode;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str24, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str26, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str28, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str31, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02345");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        java.util.Set<java.lang.String> strSet22 = gossipInfo21.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 1.0d, strSet22);
        java.util.Set<java.lang.String> strSet24 = gossipInfo23.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) 100.0d, strSet24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 100.0d, strSet24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet24);
        java.util.Set<java.lang.String> strSet28 = gossipInfo27.endpointNames;
        java.util.Set<java.lang.String> strSet29 = gossipInfo27.endpointNames;
        java.lang.String str30 = gossipInfo27.sourceNode;
        java.lang.String str31 = gossipInfo27.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap32 = gossipInfo27.endpoints;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str30, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str31, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap32);
    }

    @Test
    public void test02346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02346");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02347");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap27 = gossipInfo26.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap28 = gossipInfo26.endpoints;
        java.lang.String str29 = gossipInfo26.sourceNode;
        java.util.Set<java.lang.String> strSet30 = gossipInfo26.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) 1.0d, strSet30);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap4, (java.lang.Double) (-1.0d), strSet30);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap1, (java.lang.Double) 0.0d, strSet30);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test02348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02348");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 1.0d);
    }

    @Test
    public void test02349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02349");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 10.0d, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.tokens;
        java.lang.Class<?> wildcardClass14 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str11, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test02350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02350");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02351");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.dc;
        java.lang.String str17 = endpointState9.rack;
        java.lang.String str18 = endpointState9.getDc();
        java.lang.String str19 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test02352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02352");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.rack;
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.toString();
        java.lang.String str15 = endpointState9.hostId;
        java.lang.String str16 = endpointState9.getDc();
        java.lang.String str17 = endpointState9.getDc();
        java.lang.String str18 = endpointState9.getDc();
        java.lang.String str19 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test02353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02353");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02354");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.rack;
        java.lang.String str15 = endpointState9.tokens;
        java.lang.Class<?> wildcardClass16 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test02355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02355");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "hi!", "", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.getRack();
        java.lang.String str12 = endpointState9.tokens;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.releaseVersion;
        java.lang.String str16 = endpointState9.rack;
        java.lang.Class<?> wildcardClass17 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str11, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str16, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test02356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02356");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 100.0d);
    }

    @Test
    public void test02357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02357");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap2);
    }

    @Test
    public void test02358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02358");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap19, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        java.util.Set<java.lang.String> strSet28 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap16, (java.lang.Double) 1.0d, strSet28);
        java.util.Set<java.lang.String> strSet30 = gossipInfo29.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap13, (java.lang.Double) 100.0d, strSet30);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 100.0d, strSet30);
        java.util.Set<java.lang.String> strSet33 = gossipInfo32.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo34 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap7, (java.lang.Double) (-1.0d), strSet33);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo35 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap4, (java.lang.Double) 0.0d, strSet33);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo36 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet33);
        java.util.Set<java.lang.String> strSet37 = gossipInfo36.endpointNames;
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet37);
    }

    @Test
    public void test02359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02359");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap19, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap16, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet25);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap30 = gossipInfo29.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap31 = gossipInfo29.endpoints;
        java.lang.String str32 = gossipInfo29.sourceNode;
        java.util.Set<java.lang.String> strSet33 = gossipInfo29.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo34 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap10, (java.lang.Double) 0.0d, strSet33);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo35 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 100.0d, strSet33);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo36 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) (-1.0d), strSet33);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo37 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet33);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(strSet33);
    }

    @Test
    public void test02360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02360");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) 0.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02361");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str22 = gossipInfo21.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap23 = gossipInfo21.endpoints;
        java.util.Set<java.lang.String> strSet24 = gossipInfo21.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap10, (java.lang.Double) 0.0d, strSet24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 0.0d, strSet24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 100.0d, strSet24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) 0.0d, strSet24);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strSet24);
    }

    @Test
    public void test02362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02362");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 100.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02363");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) 1.0d, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02364");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.dc;
        java.lang.String str17 = endpointState9.endpoint;
        java.lang.String str18 = endpointState9.endpoint;
        java.lang.String str19 = endpointState9.rack;
        java.lang.String str20 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test02365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02365");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d, "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02366");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "hi!", "hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.tokens;
        java.lang.String str11 = endpointState9.getRack();
        java.lang.String str12 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02367");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.rack;
        java.lang.String str11 = endpointState9.status;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test02368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02368");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "hi!", "", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 10.0d, "hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02369");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) (-1.0d), "hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.rack;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test02370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02370");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.releaseVersion;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.getRack();
        java.lang.String str15 = endpointState9.dc;
        java.lang.String str16 = endpointState9.hostId;
        java.lang.String str17 = endpointState9.dc;
        java.lang.String str18 = endpointState9.rack;
        java.lang.String str19 = endpointState9.releaseVersion;
        java.lang.String str20 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test02371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02371");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = gossipInfo15.endpoints;
        java.util.Set<java.lang.String> strSet17 = gossipInfo15.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 1.0d, strSet17);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap1, (java.lang.Double) (-1.0d), strSet17);
        java.util.Set<java.lang.String> strSet20 = gossipInfo19.endpointNames;
        java.lang.String str21 = gossipInfo19.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap22 = gossipInfo19.endpoints;
        java.util.Set<java.lang.String> strSet23 = gossipInfo19.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap24 = gossipInfo19.endpoints;
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str21, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(strMap24);
    }

    @Test
    public void test02372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02372");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str23 = gossipInfo22.sourceNode;
        java.util.Set<java.lang.String> strSet24 = gossipInfo22.endpointNames;
        java.util.Set<java.lang.String> strSet25 = gossipInfo22.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap7, (java.lang.Double) 100.0d, strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet25);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) (-1.0d), strSet25);
        java.lang.String str29 = gossipInfo28.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap30 = gossipInfo28.endpoints;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str23, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str29, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertNull(strMap30);
    }

    @Test
    public void test02373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02373");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList5 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus6 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList5);
        java.lang.Class<?> wildcardClass7 = gossipInfoList5.getClass();
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList5);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test02374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02374");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.endpoint;
        java.lang.String str15 = endpointState9.toString();
        java.lang.String str16 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test02375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02375");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.getDc();
        java.lang.String str14 = endpointState9.endpoint;
        java.lang.String str15 = endpointState9.status;
        java.lang.String str16 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test02376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02376");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus6 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList7 = nodesStatus6.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList8 = nodesStatus6.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList9 = nodesStatus6.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus10 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList9);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus11 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList9);
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList7);
        org.junit.Assert.assertNotNull(gossipInfoList8);
        org.junit.Assert.assertNotNull(gossipInfoList9);
    }

    @Test
    public void test02377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02377");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.getRack();
        java.lang.String str12 = endpointState9.rack;
        java.lang.Class<?> wildcardClass13 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str11, "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str12, "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02378");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "", "hi!", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test02379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02379");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap27 = gossipInfo26.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap28 = gossipInfo26.endpoints;
        java.util.Set<java.lang.String> strSet29 = gossipInfo26.endpointNames;
        java.util.Set<java.lang.String> strSet30 = gossipInfo26.endpointNames;
        java.lang.String str31 = gossipInfo26.sourceNode;
        java.util.Set<java.lang.String> strSet32 = gossipInfo26.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 0.0d, strSet32);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo34 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet32);
        java.lang.String str35 = gossipInfo34.sourceNode;
        java.util.Set<java.lang.String> strSet36 = gossipInfo34.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo37 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) (-1.0d), strSet36);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap38 = gossipInfo37.endpoints;
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str35, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNull(strMap38);
    }

    @Test
    public void test02380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02380");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.getRack();
        java.lang.String str14 = endpointState9.rack;
        java.lang.String str15 = endpointState9.tokens;
        java.lang.String str16 = endpointState9.hostId;
        java.lang.String str17 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test02381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02381");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 100.0d, "hi!", "", (java.lang.Double) (-1.0d));
    }

    @Test
    public void test02382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02382");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap24 = gossipInfo23.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo23.endpoints;
        java.lang.String str26 = gossipInfo23.sourceNode;
        java.util.Set<java.lang.String> strSet27 = gossipInfo23.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet27);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet27);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap30 = gossipInfo29.endpoints;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNull(strMap30);
    }

    @Test
    public void test02383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02383");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap22 = gossipInfo21.endpoints;
        java.util.Set<java.lang.String> strSet23 = gossipInfo21.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 1.0d, strSet23);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap7, (java.lang.Double) 100.0d, strSet23);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 10.0d, strSet23);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 0.0d, strSet23);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap28 = gossipInfo27.endpoints;
        java.util.Set<java.lang.String> strSet29 = gossipInfo27.endpointNames;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test02384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02384");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 1.0d, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 10.0d);
    }

    @Test
    public void test02385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02385");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "hi!", "hi!", "hi!", "", (java.lang.Double) 100.0d, "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.getRack();
        java.lang.String str11 = endpointState9.status;
        java.lang.String str12 = endpointState9.rack;
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.tokens;
        java.lang.String str16 = endpointState9.toString();
        java.lang.String str17 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test02386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02386");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo12 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet10);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo13 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet10);
        java.lang.String str14 = gossipInfo13.sourceNode;
        java.util.Set<java.lang.String> strSet15 = gossipInfo13.endpointNames;
        java.lang.String str16 = gossipInfo13.sourceNode;
        java.util.Set<java.lang.String> strSet17 = gossipInfo13.endpointNames;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test02387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02387");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet16);
        java.lang.String str20 = gossipInfo19.sourceNode;
        java.util.Set<java.lang.String> strSet21 = gossipInfo19.endpointNames;
        java.util.Set<java.lang.String> strSet22 = gossipInfo19.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap4, (java.lang.Double) 100.0d, strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet22);
        java.lang.String str25 = gossipInfo24.sourceNode;
        java.lang.String str26 = gossipInfo24.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap27 = gossipInfo24.endpoints;
        java.util.Set<java.lang.String> strSet28 = gossipInfo24.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap29 = gossipInfo24.endpoints;
        java.lang.String str30 = gossipInfo24.sourceNode;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str20, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str25, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str26, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str30, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
    }

    @Test
    public void test02388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02388");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        java.util.Set<java.lang.String> strSet16 = gossipInfo15.endpointNames;
        java.lang.String str17 = gossipInfo15.sourceNode;
        java.util.Set<java.lang.String> strSet18 = gossipInfo15.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap4, (java.lang.Double) 10.0d, strSet18);
        java.util.Set<java.lang.String> strSet20 = gossipInfo19.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) (-1.0d), strSet20);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap22 = gossipInfo21.endpoints;
        java.util.Set<java.lang.String> strSet23 = gossipInfo21.endpointNames;
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test02389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02389");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.dc;
        java.lang.String str17 = endpointState9.status;
        java.lang.String str18 = endpointState9.hostId;
        java.lang.String str19 = endpointState9.status;
        java.lang.String str20 = endpointState9.hostId;
        java.lang.String str21 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test02390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02390");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.dc;
        java.lang.String str13 = endpointState9.rack;
        java.lang.String str14 = endpointState9.hostId;
        java.lang.String str15 = endpointState9.rack;
        java.lang.String str16 = endpointState9.toString();
        java.lang.String str17 = endpointState9.getDc();
        java.lang.String str18 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test02391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02391");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.getRack();
        java.lang.String str14 = endpointState9.status;
        java.lang.String str15 = endpointState9.releaseVersion;
        java.lang.String str16 = endpointState9.rack;
        java.lang.String str17 = endpointState9.getDc();
        java.lang.Class<?> wildcardClass18 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test02392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02392");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList5 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus6 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList5);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList5);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus8 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList5);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus9 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList5);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList10 = nodesStatus9.endpointStates;
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList5);
        org.junit.Assert.assertNotNull(gossipInfoList10);
    }

    @Test
    public void test02393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02393");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = gossipInfo15.endpoints;
        java.util.Set<java.lang.String> strSet17 = gossipInfo15.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 10.0d, strSet17);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet17);
        java.lang.String str20 = gossipInfo19.sourceNode;
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str20, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02394");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo24.endpoints;
        java.util.Set<java.lang.String> strSet26 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) 1.0d, strSet26);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap10, (java.lang.Double) (-1.0d), strSet26);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) (-1.0d), strSet26);
        java.lang.String str30 = gossipInfo29.sourceNode;
        java.util.Set<java.lang.String> strSet31 = gossipInfo29.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) (-1.0d), strSet31);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap1, (java.lang.Double) 1.0d, strSet31);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap34 = gossipInfo33.endpoints;
        java.util.Set<java.lang.String> strSet35 = gossipInfo33.endpointNames;
        java.lang.Class<?> wildcardClass36 = strSet35.getClass();
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test02395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02395");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) (-1.0d), "hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.dc;
        java.lang.String str11 = endpointState9.status;
        java.lang.String str12 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test02396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02396");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        java.util.Set<java.lang.String> strSet16 = gossipInfo15.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo17 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 1.0d, strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap1, (java.lang.Double) 0.0d, strSet16);
        java.lang.String str19 = gossipInfo18.sourceNode;
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : " + "'", str19, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ");
    }

    @Test
    public void test02397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02397");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02398");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 10.0d, "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.dc;
        java.lang.String str11 = endpointState9.status;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test02399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02399");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
    }

    @Test
    public void test02400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02400");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "", (java.lang.Double) (-1.0d), "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02401");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "hi!", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test02402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02402");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "hi!", "", "hi!", (java.lang.Double) 1.0d, "hi!", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.toString();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.releaseVersion;
        java.lang.String str15 = endpointState9.getRack();
        java.lang.String str16 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test02403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02403");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = gossipInfo18.endpoints;
        java.util.Set<java.lang.String> strSet20 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 10.0d, strSet20);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet20);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 1.0d, strSet20);
        java.lang.String str24 = gossipInfo23.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo23.endpoints;
        java.util.Set<java.lang.String> strSet26 = gossipInfo23.endpointNames;
        java.lang.String str27 = gossipInfo23.sourceNode;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str24, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str27, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02404");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "", "hi!", (java.lang.Double) 10.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.toString();
        java.lang.String str15 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str14, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str15, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02405");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap2);
    }

    @Test
    public void test02406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02406");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "hi!", "hi!", "hi!", "", (java.lang.Double) 100.0d, "hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.getRack();
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.releaseVersion;
        java.lang.String str13 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test02407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02407");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.hostId;
        java.lang.String str16 = endpointState9.endpoint;
        java.lang.String str17 = endpointState9.hostId;
        java.lang.String str18 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test02408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02408");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.rack;
        java.lang.String str13 = endpointState9.hostId;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.hostId;
        java.lang.String str16 = endpointState9.endpoint;
        java.lang.String str17 = endpointState9.toString();
        java.lang.String str18 = endpointState9.tokens;
        java.lang.String str19 = endpointState9.dc;
        java.lang.String str20 = endpointState9.hostId;
        java.lang.String str21 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str17, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test02409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02409");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap24 = gossipInfo23.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo23.endpoints;
        java.util.Set<java.lang.String> strSet26 = gossipInfo23.endpointNames;
        java.util.Set<java.lang.String> strSet27 = gossipInfo23.endpointNames;
        java.lang.String str28 = gossipInfo23.sourceNode;
        java.util.Set<java.lang.String> strSet29 = gossipInfo23.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap4, (java.lang.Double) 0.0d, strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) 1.0d, strSet29);
        java.lang.String str32 = gossipInfo31.sourceNode;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str32, "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02410");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.releaseVersion;
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.hostId;
        java.lang.String str16 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test02411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02411");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 1.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02412");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo12 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet10);
        java.lang.String str13 = gossipInfo12.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap14 = gossipInfo12.endpoints;
        java.util.Set<java.lang.String> strSet15 = gossipInfo12.endpointNames;
        java.util.Set<java.lang.String> strSet16 = gossipInfo12.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo17 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 100.0d, strSet16);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap18 = gossipInfo17.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = gossipInfo17.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap20 = gossipInfo17.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap21 = gossipInfo17.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap22 = gossipInfo17.endpoints;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
    }

    @Test
    public void test02413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02413");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        org.junit.Assert.assertNotNull(gossipInfoList4);
    }

    @Test
    public void test02414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02414");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap19, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap28 = gossipInfo27.endpoints;
        java.util.Set<java.lang.String> strSet29 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap16, (java.lang.Double) 1.0d, strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap13, (java.lang.Double) (-1.0d), strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) (-1.0d), strSet29);
        java.lang.String str33 = gossipInfo32.sourceNode;
        java.util.Set<java.lang.String> strSet34 = gossipInfo32.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo35 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) (-1.0d), strSet34);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo36 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap4, (java.lang.Double) 1.0d, strSet34);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap37 = gossipInfo36.endpoints;
        java.util.Set<java.lang.String> strSet38 = gossipInfo36.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo39 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet38);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strSet38);
    }

    @Test
    public void test02415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02415");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.tokens;
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.getDc();
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.tokens;
        java.lang.String str16 = endpointState9.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02416");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.getRack();
        java.lang.String str14 = endpointState9.rack;
        java.lang.String str15 = endpointState9.hostId;
        java.lang.String str16 = endpointState9.endpoint;
        java.lang.String str17 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test02417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02417");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 10.0d, (java.util.Set<java.lang.String>) strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap1, (java.lang.Double) 100.0d, (java.util.Set<java.lang.String>) strSet22);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap30 = gossipInfo29.endpoints;
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strMap30);
    }

    @Test
    public void test02418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02418");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.toString();
        java.lang.String str14 = endpointState9.getRack();
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.getDc();
        java.lang.String str17 = endpointState9.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str17, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02419");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        java.util.Set<java.lang.String> strSet22 = gossipInfo21.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 1.0d, strSet22);
        java.util.Set<java.lang.String> strSet24 = gossipInfo23.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) 100.0d, strSet24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 100.0d, strSet24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet24);
        java.util.Set<java.lang.String> strSet28 = gossipInfo27.endpointNames;
        java.util.Set<java.lang.String> strSet29 = gossipInfo27.endpointNames;
        java.lang.String str30 = gossipInfo27.sourceNode;
        java.util.Set<java.lang.String> strSet31 = gossipInfo27.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap32 = gossipInfo27.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap33 = gossipInfo27.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap34 = gossipInfo27.endpoints;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str30, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
    }

    @Test
    public void test02420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02420");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.dc;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str11, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02421");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02422");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02423");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 0.0d, "", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 1.0d);
    }

    @Test
    public void test02424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02424");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "", (java.lang.Double) 0.0d, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test02425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02425");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = gossipInfo18.endpoints;
        java.util.Set<java.lang.String> strSet20 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 1.0d, strSet20);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap4, (java.lang.Double) 100.0d, strSet20);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet20);
        java.util.Set<java.lang.String> strSet24 = gossipInfo23.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo23.endpoints;
        java.util.Set<java.lang.String> strSet26 = gossipInfo23.endpointNames;
        java.lang.String str27 = gossipInfo23.sourceNode;
        java.lang.Class<?> wildcardClass28 = gossipInfo23.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str27, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test02426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02426");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.toString();
        java.lang.String str13 = endpointState9.toString();
        java.lang.String str14 = endpointState9.dc;
        java.lang.String str15 = endpointState9.getDc();
        java.lang.String str16 = endpointState9.tokens;
        java.lang.String str17 = endpointState9.status;
        java.lang.String str18 = endpointState9.toString();
        java.lang.String str19 = endpointState9.getRack();
        java.lang.String str20 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str18, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test02427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02427");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02428");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.hostId;
        java.lang.String str12 = endpointState9.rack;
        java.lang.String str13 = endpointState9.getDc();
        java.lang.String str14 = endpointState9.getRack();
        java.lang.Class<?> wildcardClass15 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test02429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02429");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.dc;
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.hostId;
        java.lang.String str13 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str11, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : " + "'", str12, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str13, "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02430");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "", "hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test02431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02431");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        java.lang.String str16 = gossipInfo15.sourceNode;
        java.util.Set<java.lang.String> strSet17 = gossipInfo15.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap4, (java.lang.Double) (-1.0d), strSet17);
        java.lang.String str19 = gossipInfo18.sourceNode;
        java.util.Set<java.lang.String> strSet20 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) (-1.0d), strSet20);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str19, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test02432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02432");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
    }

    @Test
    public void test02433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02433");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.toString();
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.rack;
        java.lang.String str17 = endpointState9.getRack();
        java.lang.String str18 = endpointState9.toString();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str18, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02434");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap22 = gossipInfo21.endpoints;
        java.util.Set<java.lang.String> strSet23 = gossipInfo21.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 1.0d, strSet23);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) (-1.0d), strSet23);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) (-1.0d), strSet23);
        java.util.Set<java.lang.String> strSet27 = gossipInfo26.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap1, (java.lang.Double) 1.0d, strSet27);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test02435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02435");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.rack;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.dc;
        java.lang.String str17 = endpointState9.getDc();
        java.lang.String str18 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test02436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02436");
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] gossipInfoArray0 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] {};
        java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList1 = new java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1, gossipInfoArray0);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus((java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList6 = nodesStatus5.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList8 = nodesStatus7.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList9 = nodesStatus7.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus10 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList9);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList11 = nodesStatus10.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList12 = nodesStatus10.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus13 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList12);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList14 = nodesStatus13.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus15 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList14);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus16 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList14);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList17 = nodesStatus16.endpointStates;
        org.junit.Assert.assertNotNull(gossipInfoArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList6);
        org.junit.Assert.assertNotNull(gossipInfoList8);
        org.junit.Assert.assertNotNull(gossipInfoList9);
        org.junit.Assert.assertNotNull(gossipInfoList11);
        org.junit.Assert.assertNotNull(gossipInfoList12);
        org.junit.Assert.assertNotNull(gossipInfoList14);
        org.junit.Assert.assertNotNull(gossipInfoList17);
    }

    @Test
    public void test02437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02437");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "hi!", (java.lang.Double) (-1.0d));
    }

    @Test
    public void test02438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02438");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet16);
        java.lang.String str20 = gossipInfo19.sourceNode;
        java.util.Set<java.lang.String> strSet21 = gossipInfo19.endpointNames;
        java.util.Set<java.lang.String> strSet22 = gossipInfo19.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet22);
        java.util.Set<java.lang.String> strSet24 = gossipInfo23.endpointNames;
        java.util.Set<java.lang.String> strSet25 = gossipInfo23.endpointNames;
        java.util.Set<java.lang.String> strSet26 = gossipInfo23.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 0.0d, strSet26);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str20, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test02439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02439");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.lang.String str19 = gossipInfo18.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap20 = gossipInfo18.endpoints;
        java.util.Set<java.lang.String> strSet21 = gossipInfo18.endpointNames;
        java.util.Set<java.lang.String> strSet22 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 100.0d, strSet22);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap4, (java.lang.Double) 100.0d, strSet22);
        java.util.Set<java.lang.String> strSet25 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) 1.0d, strSet25);
        java.util.Set<java.lang.String> strSet27 = gossipInfo26.endpointNames;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test02440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02440");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "hi!", (java.lang.Double) 100.0d);
    }

    @Test
    public void test02441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02441");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) (-1.0d), "hi!", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.rack;
        java.lang.String str12 = endpointState9.tokens;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02442");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 100.0d, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.rack;
        java.lang.String str11 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02443");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap22 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap22, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet28);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap19, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet28);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet28);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet28);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo34 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 100.0d, (java.util.Set<java.lang.String>) strSet28);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo35 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 10.0d, (java.util.Set<java.lang.String>) strSet28);
        java.util.Set<java.lang.String> strSet36 = gossipInfo35.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo37 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap4, (java.lang.Double) 0.0d, strSet36);
        java.util.Set<java.lang.String> strSet38 = gossipInfo37.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo39 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet38);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strSet38);
    }

    @Test
    public void test02444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02444");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.dc;
        java.lang.String str11 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test02445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02445");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.rack;
        java.lang.String str14 = endpointState9.hostId;
        java.lang.String str15 = endpointState9.getDc();
        java.lang.String str16 = endpointState9.tokens;
        java.lang.String str17 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test02446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02446");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Set<java.lang.String> strSet3 = null;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo4 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) 0.0d, strSet3);
    }

    @Test
    public void test02447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02447");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02448");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.endpoint;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02449");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.status;
        java.lang.String str15 = endpointState9.getDc();
        java.lang.String str16 = endpointState9.tokens;
        java.lang.String str17 = endpointState9.rack;
        java.lang.String str18 = endpointState9.rack;
        java.lang.String str19 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test02450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02450");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap22 = gossipInfo21.endpoints;
        java.util.Set<java.lang.String> strSet23 = gossipInfo21.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 1.0d, strSet23);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) (-1.0d), strSet23);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo26 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) (-1.0d), strSet23);
        java.lang.String str27 = gossipInfo26.sourceNode;
        java.util.Set<java.lang.String> strSet28 = gossipInfo26.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap1, (java.lang.Double) 1.0d, strSet28);
        java.util.Set<java.lang.String> strSet30 = gossipInfo29.endpointNames;
        java.util.Set<java.lang.String> strSet31 = gossipInfo29.endpointNames;
        java.lang.Class<?> wildcardClass32 = gossipInfo29.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test02451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02451");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = gossipInfo18.endpoints;
        java.util.Set<java.lang.String> strSet20 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 1.0d, strSet20);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap4, (java.lang.Double) 100.0d, strSet20);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) 1.0d, strSet20);
        java.util.Set<java.lang.String> strSet24 = gossipInfo23.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo23.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap26 = gossipInfo23.endpoints;
        java.lang.String str27 = gossipInfo23.sourceNode;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str27, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02452");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) (-1.0d));
        java.lang.String str10 = endpointState9.dc;
        java.lang.String str11 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02453");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02454");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "hi!", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.rack;
        java.lang.String str11 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02455");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo15 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet13);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = gossipInfo15.endpoints;
        java.util.Set<java.lang.String> strSet17 = gossipInfo15.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) 10.0d, strSet17);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 10.0d, strSet17);
        java.util.Set<java.lang.String> strSet20 = gossipInfo19.endpointNames;
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test02456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02456");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList6 = nodesStatus5.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList6);
    }

    @Test
    public void test02457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02457");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList6 = nodesStatus5.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus8 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList6);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList9 = nodesStatus8.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList10 = nodesStatus8.endpointStates;
        java.lang.Class<?> wildcardClass11 = gossipInfoList10.getClass();
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList6);
        org.junit.Assert.assertNotNull(gossipInfoList9);
        org.junit.Assert.assertNotNull(gossipInfoList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test02458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02458");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) (-1.0d), "", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02459");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.rack;
        java.lang.String str13 = endpointState9.hostId;
        java.lang.String str14 = endpointState9.getRack();
        java.lang.String str15 = endpointState9.getRack();
        java.lang.String str16 = endpointState9.toString();
        java.lang.String str17 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str16, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test02460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02460");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "hi!", "", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.tokens;
        java.lang.String str13 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02461");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.util.Set<java.lang.String> strSet19 = gossipInfo18.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo20 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 1.0d, strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap4, (java.lang.Double) 0.0d, strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 1.0d, strSet19);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strSet19);
    }

    @Test
    public void test02462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02462");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 1.0d, "hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.getRack();
        java.lang.String str11 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ");
    }

    @Test
    public void test02463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02463");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 1.0d);
    }

    @Test
    public void test02464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02464");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap16, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet22);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo24.endpoints;
        java.util.Set<java.lang.String> strSet26 = gossipInfo24.endpointNames;
        java.util.Set<java.lang.String> strSet27 = gossipInfo24.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) 10.0d, strSet27);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) (-1.0d), strSet27);
        java.util.Set<java.lang.String> strSet30 = gossipInfo29.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap7, (java.lang.Double) 0.0d, strSet30);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap4, (java.lang.Double) 1.0d, strSet30);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap1, (java.lang.Double) (-1.0d), strSet30);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test02465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02465");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.rack;
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.rack;
        java.lang.String str16 = endpointState9.rack;
        java.lang.String str17 = endpointState9.endpoint;
        java.lang.Class<?> wildcardClass18 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test02466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02466");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.dc;
        java.lang.String str14 = endpointState9.getDc();
        java.lang.String str15 = endpointState9.status;
        java.lang.String str16 = endpointState9.tokens;
        java.lang.String str17 = endpointState9.dc;
        java.lang.String str18 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test02467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02467");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap22 = gossipInfo21.endpoints;
        java.util.Set<java.lang.String> strSet23 = gossipInfo21.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo24 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 1.0d, strSet23);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo25 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) (-1.0d), strSet23);
        java.util.Set<java.lang.String> strSet26 = gossipInfo25.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 100.0d, strSet26);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo28 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", strMap1, (java.lang.Double) 0.0d, strSet26);
        java.lang.Class<?> wildcardClass29 = strSet26.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test02468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02468");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", strMap2);
    }

    @Test
    public void test02469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02469");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "hi!", "", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.dc;
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test02470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02470");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02471");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap22 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap22, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet28);
        java.util.Set<java.lang.String> strSet31 = gossipInfo30.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap19, (java.lang.Double) 1.0d, strSet31);
        java.util.Set<java.lang.String> strSet33 = gossipInfo32.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo34 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap16, (java.lang.Double) 100.0d, strSet33);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo35 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap13, (java.lang.Double) 100.0d, strSet33);
        java.lang.String str36 = gossipInfo35.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap37 = gossipInfo35.endpoints;
        java.lang.String str38 = gossipInfo35.sourceNode;
        java.util.Set<java.lang.String> strSet39 = gossipInfo35.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo40 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 10.0d, strSet39);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo41 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap7, (java.lang.Double) (-1.0d), strSet39);
        java.util.Set<java.lang.String> strSet42 = gossipInfo41.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo43 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("", strMap4, (java.lang.Double) 100.0d, strSet42);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo44 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap1, (java.lang.Double) 1.0d, strSet42);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str36, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str38, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(strSet42);
    }

    @Test
    public void test02472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02472");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo12 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet10);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = gossipInfo12.endpoints;
        java.util.Set<java.lang.String> strSet14 = gossipInfo12.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap15 = gossipInfo12.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = gossipInfo12.endpoints;
        java.lang.String str17 = gossipInfo12.sourceNode;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap18 = gossipInfo12.endpoints;
        java.lang.String str19 = gossipInfo12.sourceNode;
        java.util.Set<java.lang.String> strSet20 = gossipInfo12.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", strMap1, (java.lang.Double) (-1.0d), strSet20);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test02473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02473");
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] gossipInfoArray0 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] {};
        java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList1 = new java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1, gossipInfoArray0);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus((java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus6 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList7 = nodesStatus6.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus8 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList7);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus9 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList7);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus10 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList7);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus11 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList7);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList12 = nodesStatus11.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList13 = nodesStatus11.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus14 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList13);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus15 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList13);
        org.junit.Assert.assertNotNull(gossipInfoArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList7);
        org.junit.Assert.assertNotNull(gossipInfoList12);
        org.junit.Assert.assertNotNull(gossipInfoList13);
    }

    @Test
    public void test02474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02474");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap19, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        java.util.Set<java.lang.String> strSet28 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo29 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap16, (java.lang.Double) 1.0d, strSet28);
        java.util.Set<java.lang.String> strSet30 = gossipInfo29.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap13, (java.lang.Double) 100.0d, strSet30);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) 100.0d, strSet30);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) 10.0d, strSet30);
        java.util.Set<java.lang.String> strSet34 = gossipInfo33.endpointNames;
        java.util.Set<java.lang.String> strSet35 = gossipInfo33.endpointNames;
        java.lang.String str36 = gossipInfo33.sourceNode;
        java.util.Set<java.lang.String> strSet37 = gossipInfo33.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo38 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", strMap4, (java.lang.Double) 10.0d, strSet37);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo39 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap1, (java.lang.Double) 1.0d, strSet37);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str36, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertNotNull(strSet37);
    }

    @Test
    public void test02475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02475");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap16 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap19 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo27 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap19, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet25);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap28 = gossipInfo27.endpoints;
        java.util.Set<java.lang.String> strSet29 = gossipInfo27.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap16, (java.lang.Double) 1.0d, strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo31 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap13, (java.lang.Double) (-1.0d), strSet29);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo32 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) (-1.0d), strSet29);
        java.lang.String str33 = gossipInfo32.sourceNode;
        java.util.Set<java.lang.String> strSet34 = gossipInfo32.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo35 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) (-1.0d), strSet34);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo36 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap4, (java.lang.Double) (-1.0d), strSet34);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo37 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC :  / Rack : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : 100.0 / Host Id : hi! / Tokens : ", strMap1, (java.lang.Double) (-1.0d), strSet34);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(strSet34);
    }

    @Test
    public void test02476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02476");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "hi!", "", "hi!", (java.lang.Double) 1.0d, "hi!", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.hostId;
        java.lang.String str12 = endpointState9.toString();
        java.lang.String str13 = endpointState9.toString();
        java.lang.String str14 = endpointState9.hostId;
        java.lang.String str15 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test02477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02477");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 1.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 1.0d);
    }

    @Test
    public void test02478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02478");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) (-1.0d), "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }

    @Test
    public void test02479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02479");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.endpoint;
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.getRack();
        java.lang.String str13 = endpointState9.tokens;
        java.lang.String str14 = endpointState9.status;
        java.lang.String str15 = endpointState9.getDc();
        java.lang.String str16 = endpointState9.tokens;
        java.lang.String str17 = endpointState9.rack;
        java.lang.String str18 = endpointState9.rack;
        java.lang.String str19 = endpointState9.status;
        java.lang.String str20 = endpointState9.rack;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test02480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02480");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 10.0d);
    }

    @Test
    public void test02481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02481");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "hi!", "", "hi!", (java.lang.Double) 1.0d, "hi!", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.endpoint;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.status;
        java.lang.String str16 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test02482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02482");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d);
    }

    @Test
    public void test02483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02483");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "", "hi!", "", "hi!", (java.lang.Double) 1.0d, "hi!", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        java.lang.String str11 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test02484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02484");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "hi!", "", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 1.0d, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.endpoint;
        java.lang.String str12 = endpointState9.dc;
        java.lang.String str13 = endpointState9.getRack();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ");
    }

    @Test
    public void test02485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02485");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "hi!", "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 0.0d);
        java.lang.String str10 = endpointState9.getDc();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test02486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02486");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.getRack();
        java.lang.String str12 = endpointState9.getRack();
        java.lang.Class<?> wildcardClass13 = endpointState9.getClass();
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str10, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str11, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : " + "'", str12, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test02487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02487");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "", (java.lang.Double) 0.0d, "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : hi! / Rack :  / Release version : Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Load : 0.0 / Severity : 0.0 / Host Id :  / Tokens : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 10.0d);
    }

    @Test
    public void test02488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02488");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.getDc();
        java.lang.String str11 = endpointState9.toString();
        java.lang.String str12 = endpointState9.toString();
        java.lang.String str13 = endpointState9.hostId;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test02489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02489");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo18 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap10, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo19 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo20 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet16);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet16);
        java.util.Set<java.lang.String> strSet22 = gossipInfo21.endpointNames;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap23 = gossipInfo21.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap24 = gossipInfo21.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo21.endpoints;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
    }

    @Test
    public void test02490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02490");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : hi! / Load : 0.0 / Severity : 10.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 0.0d, "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack :  / Release version : hi! / Load : 0.0 / Severity : 100.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
    }

    @Test
    public void test02491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02491");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", "", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 100.0d, "Endpoint : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status :  / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : hi! / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 1.0 / Severity : -1.0 / Host Id : Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "", (java.lang.Double) 10.0d);
    }

    @Test
    public void test02492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02492");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.dc;
        java.lang.String str12 = endpointState9.getDc();
        java.lang.String str13 = endpointState9.releaseVersion;
        java.lang.String str14 = endpointState9.tokens;
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.dc;
        java.lang.String str17 = endpointState9.status;
        java.lang.String str18 = endpointState9.hostId;
        java.lang.String str19 = endpointState9.status;
        java.lang.String str20 = endpointState9.toString();
        java.lang.String str21 = endpointState9.getDc();
        java.lang.String str22 = endpointState9.hostId;
        java.lang.String str23 = endpointState9.dc;
        java.lang.String str24 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str20, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test02493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02493");
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap1 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap4 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap7 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap10 = null;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo21 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap13, (java.lang.Double) 0.0d, (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo22 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", strMap10, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo23 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap7, (java.lang.Double) (-1.0d), (java.util.Set<java.lang.String>) strSet19);
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap24 = gossipInfo23.endpoints;
        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<io.cassandrareaper.resources.view.NodesStatus.EndpointState>>> strMap25 = gossipInfo23.endpoints;
        java.util.Set<java.lang.String> strSet26 = gossipInfo23.endpointNames;
        java.util.Set<java.lang.String> strSet27 = gossipInfo23.endpointNames;
        java.lang.String str28 = gossipInfo23.sourceNode;
        java.util.Set<java.lang.String> strSet29 = gossipInfo23.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo30 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("hi!", strMap4, (java.lang.Double) 0.0d, strSet29);
        java.lang.String str31 = gossipInfo30.sourceNode;
        java.util.Set<java.lang.String> strSet32 = gossipInfo30.endpointNames;
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo gossipInfo33 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo("Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", strMap1, (java.lang.Double) 100.0d, strSet32);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(strSet32);
    }

    @Test
    public void test02494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02494");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("", "Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version :  / Load : 10.0 / Severity : 1.0 / Host Id : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Tokens : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", (java.lang.Double) 10.0d, "", "Endpoint : hi! / Status :  / DC :  / Rack :  / Release version : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Load : 10.0 / Severity : 10.0 / Host Id : hi! / Tokens : ", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test02495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02495");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Status : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / DC : hi! / Rack : Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi! / Release version : hi! / Load : 10.0 / Severity : 10.0 / Host Id : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Tokens : ", "hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d, "hi!", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.status;
        java.lang.String str11 = endpointState9.status;
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str11, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str12, "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test02496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02496");
        io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] gossipInfoArray0 = new io.cassandrareaper.resources.view.NodesStatus.GossipInfo[] {};
        java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList1 = new java.util.ArrayList<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>();
        boolean boolean2 = java.util.Collections.addAll((java.util.Collection<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1, gossipInfoArray0);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus((java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus4 = new io.cassandrareaper.resources.view.NodesStatus((java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus((java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus6 = new io.cassandrareaper.resources.view.NodesStatus((java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo>) gossipInfoList1);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList7 = nodesStatus6.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus8 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList7);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus9 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList7);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus10 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList7);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus11 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList7);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus12 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList7);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus13 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList7);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList14 = nodesStatus13.endpointStates;
        org.junit.Assert.assertNotNull(gossipInfoArray0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(gossipInfoList7);
        org.junit.Assert.assertNotNull(gossipInfoList14);
    }

    @Test
    public void test02497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02497");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "", "", "hi!", "", (java.lang.Double) 0.0d, "", "", (java.lang.Double) 1.0d);
        java.lang.String str10 = endpointState9.toString();
        java.lang.String str11 = endpointState9.getDc();
        java.lang.String str12 = endpointState9.endpoint;
        java.lang.String str13 = endpointState9.toString();
        java.lang.String str14 = endpointState9.getRack();
        java.lang.String str15 = endpointState9.endpoint;
        java.lang.String str16 = endpointState9.tokens;
        java.lang.String str17 = endpointState9.releaseVersion;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str13, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test02498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02498");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status :  / DC : hi! / Rack : hi! / Release version : hi! / Load : 10.0 / Severity : 100.0 / Host Id : hi! / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "", "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) 100.0d, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", (java.lang.Double) 10.0d);
        java.lang.String str10 = endpointState9.rack;
        java.lang.String str11 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : " + "'", str10, "Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test02499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02499");
        java.util.Map<java.lang.String, java.lang.String> strMap2 = null;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus3 = new io.cassandrareaper.resources.view.NodesStatus("Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens : ", "Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens : ", strMap2);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList4 = nodesStatus3.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus5 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus6 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus7 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList4);
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList8 = nodesStatus7.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList9 = nodesStatus7.endpointStates;
        java.util.List<io.cassandrareaper.resources.view.NodesStatus.GossipInfo> gossipInfoList10 = nodesStatus7.endpointStates;
        io.cassandrareaper.resources.view.NodesStatus nodesStatus11 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList10);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus12 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList10);
        io.cassandrareaper.resources.view.NodesStatus nodesStatus13 = new io.cassandrareaper.resources.view.NodesStatus(gossipInfoList10);
        org.junit.Assert.assertNotNull(gossipInfoList4);
        org.junit.Assert.assertNotNull(gossipInfoList8);
        org.junit.Assert.assertNotNull(gossipInfoList9);
        org.junit.Assert.assertNotNull(gossipInfoList10);
    }

    @Test
    public void test02500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test02500");
        io.cassandrareaper.resources.view.NodesStatus.EndpointState endpointState9 = new io.cassandrareaper.resources.view.NodesStatus.EndpointState("hi!", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", (java.lang.Double) (-1.0d), "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!", "", (java.lang.Double) 100.0d);
        java.lang.String str10 = endpointState9.hostId;
        java.lang.String str11 = endpointState9.status;
        java.lang.String str12 = endpointState9.dc;
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str10, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str11, "Endpoint :  / Status :  / DC :  / Rack : Endpoint :  / Status : hi! / DC : hi! / Rack :  / Release version : hi! / Load : 0.0 / Severity : 1.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status : hi! / DC :  / Rack :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 10.0 / Host Id :  / Tokens : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : 0.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!" + "'", str12, "Endpoint : hi! / Status : hi! / DC : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Rack : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Release version : Endpoint : hi! / Status :  / DC :  / Rack : hi! / Release version :  / Load : 1.0 / Severity : 0.0 / Host Id :  / Tokens :  / Load : -1.0 / Severity : 1.0 / Host Id : hi! / Tokens : hi!");
    }
}

